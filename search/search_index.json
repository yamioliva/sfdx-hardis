{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"sfdx-hardis Toolbox for Salesforce DX, by Cloudity It will allow you to: Do with simple commands what could be done manually in minutes/hours Define a complete CI/CD Pipeline for your Salesforce project Please see the full list of commands in Online documentation sfdx-hardis commands are also available with UI in SFDX Hardis Visual Studio Code Extension Installation SFDX Plugin Pre-requisites Install Node.js ( recommended version ) Install Salesforce DX by running npm install sfdx-cli --global command line Plugin installation sfdx plugins:install sfdx-hardis For advanced use, please also install dependencies sfdx plugins:install sfdmu sfdx plugins:install sfdx-git-delta sfdx plugins:install sfdx-essentials sfdx plugins:install texei-sfdx-plugin With IDE You can install Visual Studio Code extension VsCode SFDX Hardis Once installed, click on in VsCode left bar, and follow the additional installation instructions Docker You can use sfdx-hardis docker images to run in CI hardisgroupcom/sfdx-hardis:latest (with latest sfdx-cli version) hardisgroupcom/sfdx-hardis:latest-sfdx-recommended (with recommended sfdx-cli version, in case the latest version of sfdx-cli is buggy) See Dockerfile Usage sfdx hardis:<COMMAND> <OPTIONS> Articles Here are some articles with examples of use of sfdx-hardis English French Versions d'API Salesforce d\u00e9commissionn\u00e9es: Que faire ? Exporter en masse les fichiers d\u2019une org Salesforce Suspendre l\u2019acc\u00e8s aux utilisateurs lors d\u2019une mise en production Salesforce Contributing Anyone is welcome to contribute to this sfdx-hardis Install Node.js ( recommended version ) Install typescript by running npm install typescript --global Install yarn by running npm install yarn --global Install Salesforce DX by running npm install sfdx-cli --global command line Fork this repo and clone it (or just clone if you are an internal contributor) At the root of the repository: Run yarn to install dependencies Run sfdx plugins:link to link the local sfdx-hardis to SFDX CLI Run tsc --watch to transpile typescript into js everytime you update a TS file Debug commands using NODE_OPTIONS=--inspect-brk sfdx hardis:somecommand -someparameter somevalue Dependencies sfdx-hardis partially relies on the following SFDX Open-Source packages Salesforce Data Move Utility SFDX Essentials SFDX Git Delta Texei Sfdx Plugin Contributors Commands hardis:auth Command Title hardis:auth:login Login hardis:cache Command Title hardis:cache:clear Clear sfdx-hardis cache hardis:config Command Title hardis:config:get Deploy metadata sources to org hardis:doc Command Title hardis:doc:extract:permsetgroups Generate project documentation hardis:doc:plugin:generate Generate SFDX Plugin Documentation hardis:lint Command Title hardis:lint:access check permission access hardis:mdapi Command Title hardis:mdapi:deploy sfdx-hardis wrapper for sfdx force:mdapi:deploy that displays tips to solve deployment errors. hardis:misc Command Title hardis:misc:toml2csv TOML to CSV hardis:org Command Title hardis:org:configure:data Configure Data project hardis:org:configure:files Configure File export project hardis:org:configure:monitoring Configure org monitoring hardis:org:connect Connect to an org hardis:org:create Create sandbox org hardis:org:data:delete Delete data hardis:org:data:export Export data hardis:org:data:import Import data hardis:org:diagnose:legacyapi Check for legacy API use hardis:org:files:export Export files hardis:org:fix:listviewmine Fix listviews with hardis:org:generate:packagexmlfull Generate Full Org package.xml hardis:org:purge:apexlog Purge Apex Logs hardis:org:purge:flow Purge Flow versions hardis:org:retrieve:packageconfig Retrieve package configuration from an org hardis:org:retrieve:sources:analytics Retrieve CRM Analytics configuration from an org hardis:org:retrieve:sources:dx Retrieve sfdx sources from org hardis:org:retrieve:sources:dx2 Retrieve sfdx sources from org (2) hardis:org:retrieve:sources:metadata Retrieve sfdx sources from org hardis:org:retrieve:sources:retrofit Retrofit changes from an org hardis:org:select Select org hardis:org:test:apex Run apex tests hardis:org:user:activateinvalid Reactivate sandbox invalid users hardis:org:user:freeze Freeze user logins hardis:org:user:unfreeze Unfreeze user logins hardis:package Command Title hardis create Create a new package hardis install Install packages in an org hardis mergexml Merge package.xml files hardis version:create Create a new version of a package hardis version:list Create a new version of a package hardis version:promote Promote new versions of package(s) hardis:project Command Title hardis:project:audit:apiversion Audit Metadatas API Version hardis:project:audit:callincallout Audit CallIns and CallOuts hardis:project:audit:duplicatefiles Find duplicate sfdx files hardis:project:audit:remotesites Audit Remote Sites hardis:project:clean:emptyitems Clean retrieved empty items in dx sources hardis:project:clean:hiddenitems Clean retrieved hidden items in dx sources hardis:project:clean:listviews Replace Mine by Everything in ListViews hardis:project:clean:manageditems Clean retrieved managed items in dx sources hardis:project:clean:minimizeprofiles Clean profiles of Permission Set attributes hardis:project:clean:orgmissingitems Clean SFDX items using target org definition hardis:project:clean:references Clean references in dx sources hardis:project:clean:retrievefolders Retrieve dashboards, documents and report folders in DX sources hardis:project:clean:standarditems Clean retrieved standard items in dx sources hardis:project:clean:systemdebug Clean System debug hardis:project:clean:xml Clean retrieved empty items in dx sources hardis:project:configure:auth Configure authentication hardis:project:convert:profilestopermsets Convert Profiles into Permission Sets hardis:project:create Login hardis:project:deploy:sources:dx Deploy sfdx sources to org hardis:project:deploy:sources:metadata Deploy metadata sources to org hardis:project:fix:v53flexipages Fix flexipages for v53 hardis:project:generate:gitdelta Generate Git Delta hardis:project:lint Lint hardis:project:metadata:findduplicates XML duplicate values finder hardis:scratch Command Title hardis:scratch:create Create and initialize scratch org hardis:scratch:delete Delete scratch orgs(s) hardis:scratch:pool:create Create and configure scratch org pool hardis:scratch:pool:localauth Authenticate locally to scratch org pool hardis:scratch:pool:refresh Refresh scratch org pool hardis:scratch:pool:reset Reset scratch org pool hardis:scratch:pool:view View scratch org pool info hardis:scratch:pull Scratch PULL hardis:scratch:push Scratch PUSH hardis:source Command Title hardis:source:deploy sfdx-hardis wrapper for sfdx force:source:deploy that displays tips to solve deployment errors. hardis:source:push sfdx-hardis wrapper for sfdx force:source:push that displays tips to solve deployment errors. hardis:source:retrieve sfdx-hardis wrapper for sfdx force:source:retrieve hardis:work Command Title hardis:work:new New work task hardis:work:refresh Refresh work task hardis:work:resetselection Select again hardis:work:save Save work task hardis:work:ws WebSocket operations","title":"Home"},{"location":"#sfdx-hardis","text":"Toolbox for Salesforce DX, by Cloudity It will allow you to: Do with simple commands what could be done manually in minutes/hours Define a complete CI/CD Pipeline for your Salesforce project Please see the full list of commands in Online documentation sfdx-hardis commands are also available with UI in SFDX Hardis Visual Studio Code Extension","title":"sfdx-hardis"},{"location":"#installation","text":"","title":"Installation"},{"location":"#sfdx-plugin","text":"","title":"SFDX Plugin"},{"location":"#pre-requisites","text":"Install Node.js ( recommended version ) Install Salesforce DX by running npm install sfdx-cli --global command line","title":"Pre-requisites"},{"location":"#plugin-installation","text":"sfdx plugins:install sfdx-hardis For advanced use, please also install dependencies sfdx plugins:install sfdmu sfdx plugins:install sfdx-git-delta sfdx plugins:install sfdx-essentials sfdx plugins:install texei-sfdx-plugin","title":"Plugin installation"},{"location":"#with-ide","text":"You can install Visual Studio Code extension VsCode SFDX Hardis Once installed, click on in VsCode left bar, and follow the additional installation instructions","title":"With IDE"},{"location":"#docker","text":"You can use sfdx-hardis docker images to run in CI hardisgroupcom/sfdx-hardis:latest (with latest sfdx-cli version) hardisgroupcom/sfdx-hardis:latest-sfdx-recommended (with recommended sfdx-cli version, in case the latest version of sfdx-cli is buggy) See Dockerfile","title":"Docker"},{"location":"#usage","text":"sfdx hardis:<COMMAND> <OPTIONS>","title":"Usage"},{"location":"#articles","text":"Here are some articles with examples of use of sfdx-hardis English French Versions d'API Salesforce d\u00e9commissionn\u00e9es: Que faire ? Exporter en masse les fichiers d\u2019une org Salesforce Suspendre l\u2019acc\u00e8s aux utilisateurs lors d\u2019une mise en production Salesforce","title":"Articles"},{"location":"#contributing","text":"Anyone is welcome to contribute to this sfdx-hardis Install Node.js ( recommended version ) Install typescript by running npm install typescript --global Install yarn by running npm install yarn --global Install Salesforce DX by running npm install sfdx-cli --global command line Fork this repo and clone it (or just clone if you are an internal contributor) At the root of the repository: Run yarn to install dependencies Run sfdx plugins:link to link the local sfdx-hardis to SFDX CLI Run tsc --watch to transpile typescript into js everytime you update a TS file Debug commands using NODE_OPTIONS=--inspect-brk sfdx hardis:somecommand -someparameter somevalue","title":"Contributing"},{"location":"#dependencies","text":"sfdx-hardis partially relies on the following SFDX Open-Source packages Salesforce Data Move Utility SFDX Essentials SFDX Git Delta Texei Sfdx Plugin","title":"Dependencies"},{"location":"#contributors","text":"","title":"Contributors"},{"location":"#commands","text":"","title":"Commands"},{"location":"#hardisauth","text":"Command Title hardis:auth:login Login","title":"hardis:auth"},{"location":"#hardiscache","text":"Command Title hardis:cache:clear Clear sfdx-hardis cache","title":"hardis:cache"},{"location":"#hardisconfig","text":"Command Title hardis:config:get Deploy metadata sources to org","title":"hardis:config"},{"location":"#hardisdoc","text":"Command Title hardis:doc:extract:permsetgroups Generate project documentation hardis:doc:plugin:generate Generate SFDX Plugin Documentation","title":"hardis:doc"},{"location":"#hardislint","text":"Command Title hardis:lint:access check permission access","title":"hardis:lint"},{"location":"#hardismdapi","text":"Command Title hardis:mdapi:deploy sfdx-hardis wrapper for sfdx force:mdapi:deploy that displays tips to solve deployment errors.","title":"hardis:mdapi"},{"location":"#hardismisc","text":"Command Title hardis:misc:toml2csv TOML to CSV","title":"hardis:misc"},{"location":"#hardisorg","text":"Command Title hardis:org:configure:data Configure Data project hardis:org:configure:files Configure File export project hardis:org:configure:monitoring Configure org monitoring hardis:org:connect Connect to an org hardis:org:create Create sandbox org hardis:org:data:delete Delete data hardis:org:data:export Export data hardis:org:data:import Import data hardis:org:diagnose:legacyapi Check for legacy API use hardis:org:files:export Export files hardis:org:fix:listviewmine Fix listviews with hardis:org:generate:packagexmlfull Generate Full Org package.xml hardis:org:purge:apexlog Purge Apex Logs hardis:org:purge:flow Purge Flow versions hardis:org:retrieve:packageconfig Retrieve package configuration from an org hardis:org:retrieve:sources:analytics Retrieve CRM Analytics configuration from an org hardis:org:retrieve:sources:dx Retrieve sfdx sources from org hardis:org:retrieve:sources:dx2 Retrieve sfdx sources from org (2) hardis:org:retrieve:sources:metadata Retrieve sfdx sources from org hardis:org:retrieve:sources:retrofit Retrofit changes from an org hardis:org:select Select org hardis:org:test:apex Run apex tests hardis:org:user:activateinvalid Reactivate sandbox invalid users hardis:org:user:freeze Freeze user logins hardis:org:user:unfreeze Unfreeze user logins","title":"hardis:org"},{"location":"#hardispackage","text":"Command Title hardis create Create a new package hardis install Install packages in an org hardis mergexml Merge package.xml files hardis version:create Create a new version of a package hardis version:list Create a new version of a package hardis version:promote Promote new versions of package(s)","title":"hardis:package"},{"location":"#hardisproject","text":"Command Title hardis:project:audit:apiversion Audit Metadatas API Version hardis:project:audit:callincallout Audit CallIns and CallOuts hardis:project:audit:duplicatefiles Find duplicate sfdx files hardis:project:audit:remotesites Audit Remote Sites hardis:project:clean:emptyitems Clean retrieved empty items in dx sources hardis:project:clean:hiddenitems Clean retrieved hidden items in dx sources hardis:project:clean:listviews Replace Mine by Everything in ListViews hardis:project:clean:manageditems Clean retrieved managed items in dx sources hardis:project:clean:minimizeprofiles Clean profiles of Permission Set attributes hardis:project:clean:orgmissingitems Clean SFDX items using target org definition hardis:project:clean:references Clean references in dx sources hardis:project:clean:retrievefolders Retrieve dashboards, documents and report folders in DX sources hardis:project:clean:standarditems Clean retrieved standard items in dx sources hardis:project:clean:systemdebug Clean System debug hardis:project:clean:xml Clean retrieved empty items in dx sources hardis:project:configure:auth Configure authentication hardis:project:convert:profilestopermsets Convert Profiles into Permission Sets hardis:project:create Login hardis:project:deploy:sources:dx Deploy sfdx sources to org hardis:project:deploy:sources:metadata Deploy metadata sources to org hardis:project:fix:v53flexipages Fix flexipages for v53 hardis:project:generate:gitdelta Generate Git Delta hardis:project:lint Lint hardis:project:metadata:findduplicates XML duplicate values finder","title":"hardis:project"},{"location":"#hardisscratch","text":"Command Title hardis:scratch:create Create and initialize scratch org hardis:scratch:delete Delete scratch orgs(s) hardis:scratch:pool:create Create and configure scratch org pool hardis:scratch:pool:localauth Authenticate locally to scratch org pool hardis:scratch:pool:refresh Refresh scratch org pool hardis:scratch:pool:reset Reset scratch org pool hardis:scratch:pool:view View scratch org pool info hardis:scratch:pull Scratch PULL hardis:scratch:push Scratch PUSH","title":"hardis:scratch"},{"location":"#hardissource","text":"Command Title hardis:source:deploy sfdx-hardis wrapper for sfdx force:source:deploy that displays tips to solve deployment errors. hardis:source:push sfdx-hardis wrapper for sfdx force:source:push that displays tips to solve deployment errors. hardis:source:retrieve sfdx-hardis wrapper for sfdx force:source:retrieve","title":"hardis:source"},{"location":"#hardiswork","text":"Command Title hardis:work:new New work task hardis:work:refresh Refresh work task hardis:work:resetselection Select again hardis:work:save Save work task hardis:work:ws WebSocket operations","title":"hardis:work"},{"location":"CHANGELOG/","text":"Changelog [beta] (master) Note: Can be used with sfdx plugins:install sfdx-hardis@beta and docker image hardisgroupcom/sfdx-hardis@beta [3.17.0] 2022-05-30 New command hardis:org:generate:packagexmlfull to generate the full package.xml of a selected Salesforce org [3.16.1] 2022-05-29 Also remove standard fields when running hardis:project:clean:standarditems New Deployment tips Wrong api Version of a Metadata Unknown user Upgrade to MegaLinter v7 [3.16.0] 2022-05-24 New ENV variables to override default wait on retrieve/deploy/test commands SFDX_RETRIEVE_WAIT_MINUTES SFDX_DEPLOY_WAIT_MINUTES SFDX_TEST_WAIT_MINUTES Update default .forceignore content [3.15.0] 2022-05-11 Allow to define property availableProjects so when user clicks on New task (hardis:work:new), he/she is asked to select a project, that will be used to build the new git branch name When creating new task, store the target branch so it is not prompted again when waiting to save/publish the task. [3.14.2] 2022-05-03 More explicit text to ask user if he/she wants to update its selected sandbox while creating a new task Do not ask to change default target branch if there are multiple available branches [3.14.1] 2022-04-19 Allow to override the default deployment wait time (60) using variable SFDX_DEPLOY_WAIT_MINUTES Update JSON schema to add customOrgColors [3.14.0] 2022-04-14 Fix breaking change of sfdx-git-delta (many thanks @scolladon !) Deploy tips Invalid report type Missing report Update missing email template message Add more space between error lines in PR/MR comments Upgrade xml2js dependency Update call to MegaLinter in Azure integrations [3.13.1] 2022-04-12 Fix missing sfdx-git-delta in Docker image [3.13.0] 2022-04-06 Change defaut package install mode to AdminsOnly When minimizing Profiles, do not remove the personAccountDefault=true elements Add new deploy tip: Error parsing file [3.12.3] 2022-04-04 Do not add EmailTemplate and Flows as separate items in deploymentPlan, as metadata API now can handle their deployment with the rest of the sources Add new deployTip: Missing multi-currency field Update label when creating a new task using an existing sandbox [3.12.2] 2022-03-30 New deployment error tips SortOrder must be in sequential order from 1. (Duplicate Rules issue) Invalid field:ACCOUNT.NAME in related list:RelatedContactAccountRelationList Add more matchers for duplicate detector [3.12.1] 2022-03-29 Fix false positive error in deployment job when there is no related Pull/Merge request [3.12.0] 2022-03-23 Integration with Azure Pipelines Pull Request threads hardis:work:new : Allow to select no org even of sandbox or scratch is forced on the project using config property allowedOrgTypes Doc: rename User Guide into Contributor Guide [3.11.1] 2022-03-20 Better fix for root path issues (internal error) [3.11.0] 2022-03-20 Fix root path issues (internal error) [3.10.2] 2022-03-16 Fix sandbox check when calling hardis:source:push [3.10.1] 2022-03-15 Quick fix Gitlab integration when there is no MR associated to a deployment [3.10.0] 2022-03-15 Post a Gitlab Merge Request note when checking a deployment (beta) Deployment errors with resolution tips Failing test classes Code coverage Do not remove then restore lookup filters when source:push on a source-tracked sandbox Catch and display errors when caused by internet connection issue [3.9.2] 2022-03-09 Update deploy tips for error Unknown user permission: SendExternalEmailAvailable [3.9.1] 2022-03-08 Improve logs for false positive after package installation failure Remove useless and scary log after a successful login :) Remove npm cache from Docker image [3.9.0] 2022-03-08 New task with source tracked sandbox: Do not allow to select a major org for dev or config Open SF org if selected from the already connected list Init packages only if defined in config Enhance labels Save task: Notify that once the merge request is merged, you must create a new task that will create a new branch Improve login error messages Use latest version of MegaLinter [3.8.0] 2022-03-03 Manage deprecation of force:mdapi:legacy:deploy, replaced by force:mdapi:deploy Update default packageDeployOnce.xml when creating a new project (related to Overwrite management ) Update CI/CD documentation Initialize orgs Update labels of prompts when creating a new sfdx-hardis project [3.7.1] 2022-02-27 Use tooling API to retrieve ApexLogs for deletion, by @thvd in https://github.com/hardisgroupcom/sfdx-hardis/pull/321 [3.7.0] 2022-02-27 Add demo video about configuring authentication between CI and Salesforce orgs Update CI/CD documentation Update branding [3.6.0] 2022-02-23 Add sfdx sources to monitoring for better readability Change example of email addresses for prompts Update CI/CD recommendations in documentation [3.5.0] 2022-02-22 Update default overwrite config ( packageDeployOnce.xml ) Setup CI: Define default Azure pipelines YML files Fix notification logs for Azure Pipelines [3.4.0] 2022-02-21 Move documentation to https://sfdx-hardis.cloudity.com [3.3.2] 2022-02-17 Fix default monitoring for Azure pipelines Update CI documentation (Azure) [3.3.1] 2022-02-16 Fix check of newer package installed [3.3.0] 2022-02-14 Compliance of monitoring setup with Azure Pipelines hardis:org:retrieve:source:metadata enhancements new option --includemanaged , disabled by default, to avoid having too many items to retrieve during monitoring job allow to force monitoring additional tasks using env var SFDX_HARDIS_MONITORING set to \"true\" [3.2.0] 2022-02-10 Fix issue when logging to a new org during command hardis:source:retrieve Implement check of code coverage when calling sfdx hardis:project:deploy:sources:dx --check 75% minimum by default, overridable in property apexTestsMinCoverageOrgWide in .sfdx-hardis.yml, or using env var APEX_TESTS_MIN_COVERAGE_ORG_WIDE Add --checkcoverage option to wrapper command hardis:source:deploy Example: sfdx hardis:source:deploy -x manifest/package.xml --wait 60 --ignorewarnings --testlevel RunLocalTests --postdestructivechanges ./manifest/destructiveChanges.xml --targetusername nicolas.vuillamy@cloudity.com --checkonly --checkcoverage --verbose --coverageformatters json-summary [3.1.0] 2022-02-07 Reset local sfdx tracking when reusing a sandbox for a new task [3.0.0] 2022-02-07 Breaking change: SFDX_HARDIS_DEPLOY_IGNORE_SPLIT_PACKAGES is now \"true\" by default. If you want to apply the deploymentPlan in .sfdx-hardis, you need to define variable SFDX_HARDIS_DEPLOY_IGNORE_SPLIT_PACKAGES=\"false\" [2.100.0] 2022-02-07 hardis:work:new: : When creating a new task and using a source-tracked sandbox, ask user to push sources, assign permission sets and load data to initialize it. Add explicit error message when scratch org creation is caused by a limit reach Update default API version to 56.0 Improve labels when prompting to select an org Update CI/CD documentation [2.99.1] 2022-01-31 Fix hardis:project:clean:hiddenitems when multiple files in the same folder match the same glob pattern Update documentation, fix typos and dead links [2.99.0] 2022-01-30 Replace prompts library by inquirer , because prompts is buggy Dockerfile: Workaround for https://github.com/forcedotcom/salesforcedx-apex/issues/213 (force:apex:test:run with code coverage crashing on some Gitlab runners with Invalid time value ) Allow to override the proposed branch names when calling hardis:work:new , using property branchPrefixChoices hardis:project:clean:hiddenitems: Also clean LWC with hidden content Add yarn in dockerfile [2.98.1] 2022-01-23 Fix hardis:org:purge:flow when flow prompt selection is all [2.98.0] 2022-01-23 Documentation: Add CI/CD user guide and release manager guide, available at https://sfdx-hardis.cloudity.com/salesforce-ci-cd-home/ New .sfdx-hardis.yml config property allowedOrgTypes , allowing to define the type(s) or org that can be used for implementation: (sandbox and/or scratch) [2.97.3] 2022-11-30 QuickFix System.debug removal [2.97.2] 2022-11-30 QuickFix [2.97.1] 2022-11-30 QuickFix hardis:lint:access [2.97.0] 2022-11-30 New command hardis:lint:access to analyze of items in sources are not present within profiles and/or permission sets [2.96.1] 2022-11-17 Fix error when assigning already existing PS Update default CI config [2.96.0] 2022-11-09 Replace sfdx force:package:install with sfdx force:package:beta:install Do not cause deployment to fail when a deploying an older managed package version Instead, deployment will assume the newer version meets the requirement hardis:scratch:create : Avoid error in case of already existing assignment of PermissionSet SfdxHardisDeferSharingRecalc Update Node.js minimum version to 16.x [2.95.2] 2022-10-19 Replace use of sfpowerkit by default command sfdx force:source:manifest:create Manage cache for listing orgs Update hardis version:create to allow to install it later on an org immediately delete it New command hardis:project:metadata:findduplicates to detect when git messed during an automated merging of conflicts Factorize check of sfdx project existence Fix default gitlab-ci default pipeline Replace supportsDevhubUsername by requiresDevhubUsername in command classes when necessary Add parameters skipauth and websocket on sfdx hardis:project:metadata:duplicate Add missing parameter skipauth on sfdx hardis:package:install [2.94.3] 2022-09-15 Automate SSL certificate generation + force:source:deploy replaced by force:source:legacy:deploy [2.94.2] 2022-09-09 hardis:project:clean:minimizeprofiles : Do not strip tabVisibilities from Profiles [2.94.1] 2022-09-01 Lock sfpowerkit dependency to 4.2.13 to avoid error caused by deprecation of sfpowerkit:org:build:manifest [2.94.0] 2022-08-31 Update documentation to initialize scratch org Update JSON schema to add scratchOrgInitApexScripts Fix execution of scripts defined in scratchOrgInitApexScripts [2.93.0] 2022-08-02 Fix handling of new sfdx error format so we can again identify deployment tips New deployment tips: Cannot update a field to a Summary from something else [2.92.0] 2022-07-29 New command hardis:org:retrieve:source:analytics to retrieve all analytics (CRM Analytics/TCRM) sources New deployment tips (Wave analytics) Fix writePackageXml method when there is not an existing file [2.91.0] 2022-07-15 Fix issue when force:source command wrappers arguments contain spaces (#269) ) Upgrade MegaLinter to v6 Upgrade yarn dependencies [2.90.0] 2022-06-24 Events to open generated files when called from VsCode SFDX Hardis New deployTips [2.89.3] 2022-06-21 Fix exported file extension ( #266 ) [2.89.2] 2022-06-17 Build full manifest using sfpowerkit excluding ManagedContentTypeBundle because it is not managed by retrieve [2.89.1] 2022-06-16 Auto-update gitlab-ci.yml only if variable AUTO_UPDATE_GITLAB_CI_YML is set [2.89.0] 2022-06-12 hardis mergexml : New command to merge package.Xml files [2.88.0] 2022-06-11 hardis:project:clean:systemdebug : New command to comment or remove all System.debug from apex and triggers [2.87.5] 2022-05-18 toml2csv: Allow hardcoded values for concat Refactor internal CI to use 7.148.3 as recommended version [2.87.4] 2022-05-18 Fix configure org CI Hide auth info from console logs Fix Bulk Update job not closed [2.87.3] 2022-05-12 Auto-update .gitlab-ci.yml if a newest version exists [2.87.2] 2022-05-11 Refactor report directory management [2.87.1] 2022-05-11 Fix monitoring default pipeline [2.87.0] 2022-05-08 New command hardis:project:clean:xml allowing to automate the manual cleaning in the XML files using glob pattern and xPath Reorganize work:save command code + add auto mode Call Save command from Retrofit command to update package.xml files and make sure sources have been cleaned [2.86.1] 2022-05-06 hardis:work:new : Propose to reuse current scratch org when it is not in the local list hardis:work:save : Propose to push git branch on server when it is still untracked [2.86.0] 2022-05-03 New wrapper command: sfdx hardis:source:retrieve Quickfix toml2csv [2.85.2] 2022-05-02 Fix toml2csv error log Deployment tips Allow deployment with pending Apex Jobs Update Can not find folder [2.85.1] 2022-04-27 Enhance sfdx hardis:org:retrieve:sources:retrofit command + JSON schema updates [2.85.0] 2022-04-27 Enhance sfdx hardis:org:retrieve:sources:retrofit command Ad deployment tip: Invalid field in related list [2.84.0] 2022-04-27 Update deployTips: improve unknown custom field message New command sfdx hardis:doc:extract:permsetgroups to generate permission set groups documentation [2.83.6] 2022-04-26 Fix hardis:work:save who sometimes forgot to ask to push commits [2.83.5] 2022-04-24 Update deployment tips [2.83.0] 2022-04-20 New deployment tips: Not valid sharing model Improve purge flows for manual users Improve badwords detector Open scratch org when reusing one Hide prompt result when it contains sensitive information [2.82.2] 2022-04-19 New deployTip: Can not change type due to existing data Do not replace ListView Everything by Mine when we are just simulating deployment [2.82.1] 2022-04-16 QuickFix platform compatibility for sfdx hardis:org:fix:listviewmine [2.82.0] 2022-04-16 New command sfdx hardis:org:fix:listviewmine as a workaround to force:source:deploy not allowing ListView with scope Mine [2.81.0] 2022-04-15 New property autoRetrieveWhenPull to always retrieve some sources when calling hardis:source:pull (useful when sfdx tracking forgets some updates) [2.80.0] 2022-04-15 Simplify and document more hardis:work:new , hardis:work:pull and hardis:work:save Open org in browser when fetched from scratch org pool More deploymentTips Add customPlugins definition in json schema [2.79.0] 2022-04-10 New property extends in .sfdx-hardis.yml , to allow local config file to extend from remote file Add customCommands definition in json schema [2.78.4] 2022-04-09 Update documentation [2.78.3] 2022-04-08 Add a retrofit command to retrieve changes made directly in an org [2.78.2] 2022-04-08 Fix legacy API command display ( #225 ) [2.78.1] 2022-04-07 Fix CI & remove docker image with sfdx-cli@stable as it does not exists anymore [2.78.0] 2022-04-07 New parameter --skipauth on all hardis commands, to allow the auth check when a default username is required (allows advanced users to improve performances) Set user email when fetching a scratch org from scratch org pool [2.77.2] 2022-04-07 Fix bug when subtracting a package.xml from another [2.77.1] 2022-04-07 Fix error in packageDeployOnce.xml document (sfdx hardis:project:deploy:sources:dx) [2.77.0] 2022-04-05 Generate deployment tips documentation hardis:org:user:activateinvalid : new --profiles argument Update MsTeams WebHooks ENV variables MS_TEAMS_WEBHOOK_URL_CRITICAL MS_TEAMS_WEBHOOK_URL_SEVERE MS_TEAMS_WEBHOOK_URL_WARNING MS_TEAMS_WEBHOOK_URL_INFO Allow to install packages during deployment check using INSTALL_PACKAGES_DURING_CHECK_DEPLOY=true env variable Enhance prompt org labels [2.76.2] 2022-04-04 Improve activate invalid users commands (allow to select by profile(s)) [2.76.1] 2022-04-04 Improve activate invalid users commands [2.76.0] 2022-04-03 New command sfdx hardis:org:user:activateinvalid to activate invalid emails in sandbox Fix CI org authentication in case the default username is not the org that we want to configure Bypass error with force:source:legacy:pull / push hardis:work:save : Propose to manually commit files Fix hardis:org:select alias & user config Colorize command lines in logs Enhance new task with sandbox (not fully stable yet) New deployTips Please choose a different name [2.75.0] 2022-03-28 Property availableTargetBranches can be defined in .sfdx-hardis.yml to list the possible target branches for merge requests fix hardis:work:save to propose a git push when the current branch is ahead of origin branch New deployTips XML item appears more than once [2.74.2] 2022-03-26 Update legacy API detection labels [2.74.1] 2022-03-25 Manage crash when retrieving metadatas from CI jobs [2.74.0] 2022-03-24 Enhance hardis:work:save to request if the files has already been staged and committed Deploy manifest and destructive change in the same sfdx force:source:deploy call thanks to new argument postdestructivechanges More deployTips Improve MsTeams notifications management [2.73.0] 2022-03-21 Improve tips about how to fix deployments directly within error messages Wrapper commands to display tips in error logs force:source:deploy can be wrapped using hardis:source:deploy force:source:push can be wrapped using hardis:source:push force:mdapi:deploy can be wrapped using hardis:mdapi:deploy [2.72.0] 2022-03-21 Include tips about how to fix deployments directly within error messages [2.71.2] 2022-03-17 Update JSON schema for customCommands (used by VsCode SFDX Hardis) New property for scratch org pool config: maxScratchOrgsNumberToCreateOnce (max number of scratch orgs to create during one CI job) [2.71.0] 2022-03-15 New command hardis:org:data:delete to manage delete data workspaces of sfdmu New command hardis:scratch:pool:reset to delete all scratch orgs from a scratch orgs pool (like when a new project-scratch-def is delivered) [2.70.0] 2022-03-10 hardis:org:apex:test : allow command to succeed when no tests are present in the project, useful for new environments initialization [2.69.0] 2022-03-02 Scratch org pool: add history (fetch,auth) on ActiveScratchOrg devhub record [2.68.6] 2022-02-22 remove DEPLOY PROGRESS noisy lines from logs [2.68.5] 2022-02-18 Update mkdocs fix commit of files with spaces [2.68.4] 2022-02-18 hardis install Add -k, --installationkey CLI param and prompts user for it if not supplied [2.68.3] 2022-02-18 Fix hardis version:promote --auto [2.68.2] 2022-02-15 Fix minimize profiles command [2.68.1] 2022-02-02 Allow property autoRemoveUserPermissions in .sfdx-hardis.yml to clean profiles toml2csv: Add concatComposite option for column Add recordType option for column [2.68.0] 2022-01-31 Do not create log files in the current directory if it is empty More deployTips Clean MDAPI output logs from progression lines Add listViewMine in cleaning references toml2csv updates [2.67.1] 2022-01-20 Enhance documentation for hardis:scratch:pool:create command Fixes and enhancements on toml2csv command [2.67.0] 2022-01-18 hardis:misc:toml2csv enhancements (rename and copy files) fix minimizing of profiles new command hardis:project:clean:listview [2.66.2] 2022-01-13 hardis:misc:toml2csv enhancements [2.66.1] 2022-01-11 minimizeProfiles: do not remove userPermissions if profile is default Admin profile [2.66.0] 2022-01-07 Check deployment with metadata project [2.65.0] 2022-01-05 Fix contribution install by upgrading dependencies Use soqlQuery method everywhere Set devhub alias when available [2.64.1] 2021-12-29 Update default apiVersion to 53.0 Option to not remove empty types when subtracting package.xml [2.64.0] 2021-12-24 New command hardis:clean:minimizeprofiles New deployTip duplicate-value-platform-action-id-list Apply packageDeployOnce.xml and packageDeployOnChange.xml in all contexts Package.xml mixing: fix wildcard <members>*</members> management List metadatas of target org: complete with what sfpowerkit commands does not return (ListView,CustomLabel) [2.63.0] 2021-12-21 New event message refreshPlugins (used by VsCodeSFDX Hardis) Display Error message when unable to delete a temporary directory [2.62.0] 2021-12-14 Fix hardis:work:save crash when rebuilding deploymentPlan Fix XML indentation (#51). Can also be overridden by using env variable SFDX_XML_INDENT (ex: SFDX_INDENT=' ' ) [2.61.0] 2021-12-02 Use same XML indentation than Salesforce (#51) (requires also upgrade of sfdx-essentials, using sfdx plugins:install sfdx-essentials ) [2.60.3] 2021-11-08 Fix hardis:source:pull when there are errors [2.60.2] 2021-11-06 Allow to input URL to use to login [2.60.1] 2021-11-05 Fix hardis:scratch:pool:view when DevHub authentication is expired [2.60.0] 2021-11-03 Deployment failure: Tuning of error message + display of direct link to Deployment Status page in console logs When not in CI, prompt for the org to use to simulate deployments [2.59.0] 2021-11-03 (ALPHA,not really usable yet) Allow to use sandboxes for new task (create from production org, or clone from other sandbox) Fixes about scratch org initialization and JWT auth configuration [2.58.3] 2021-10-23 hardis:org:files:export: Fix file paths in logs [2.58.2] 2021-10-18 org:user:freeze : Prevent to freeze all profiles and current user profile [2.58.1] 2021-10-18 org:retrieve:sources:metadata : Manage locally defined remove-items-package.xml (that can handle wildcard members) [2.58.0] 2021-10-16 org:retrieve:sources:metadata : Run apex tests and legacy api check if we are in CI and in a repository named with monitoring Teams notifications for apex tests and legacy api failure [2.57.2] 2021-10-13 hardis:org:files:export Add file extension when missing replace .snote by .txt replace special characters in parent folder name and file name [2.57.1] 2021-10-12 Retry when BULK API Query returns a timeout hardis:org:files:export Use node-fetch-retry for direct downloads (retry up to 30 seconds by default) New argument --startchunknumber to start files extraction from a chunk position [2.57.0] 2021-10-11 Make hardis:org:user:freeze and hardis:org:user:unfreeze can now handle large volume of users, using Bulk API [2.56.0] 2021-10-10 Update auto-generated documentation to add a commands.md + its link in the menu [2.55.3] 2021-10-05 When not in CI, disable auto-update of .gitignore and .forceignore files because of a prompt library issue. To enable it, define AUTO_UPDATE env variable to \"true\" [2.55.2] 2021-10-03 Fix link to https://nicolas.vuillamy.fr/handle-salesforce-api-versions-deprecation-like-a-pro-335065f52238 [2.55.1] 2021-10-01 SFDX_HARDIS_DEBUG_ENV. If set to true, display env vars at startup [2.55.0] 2021-10-01 Manage env var SFDX_HARDIS_DEPLOY_IGNORE_SPLIT_PACKAGES. If \"true\", package.xmls are not split with deploymentPlan [2.54.0] 2021-09-27 Allow to override force:org:create waiting time using SCRATCH_ORG_WAIT en variable (default: 15mn) hardis:org:select : new parameter --scratch to allow to list only scratch orgs related to current Dev Hub hardis:org:retrieve:sources:dx2 : New parameter --template to use default package.xml files (ex: wave ) Scratch org pool: automatically delete too old ready-to-use scratch orgs Deploy Tips Wave deployment error [2.53.1] 2021-09-14 Update Object deployed when configuring scratch org pool (replace Html by LongTextArea) [2.53.0] 2021-09-14 Additional docker images, to use when stable and latest sfdx-cli versions arr broken hardisgroupcom/sfdx-hardis:latest-sfdx-recommended hardisgroupcom/sfdx-hardis:beta-sfdx-recommended hardisgroupcom/sfdx-hardis:alpha-sfdx-recommended [2.52.0] 2021-09-14 New command hardis:project:fix:v53flexipages to fix v53.0 broken ascending compatibility New command hardis:project:audit:duplicatefiles to detect doubling files in wrong sfdx folders [2.51.6] 2021-09-10 Take in account parameter --ignore-whitespace of sfdx-git-delta for packageOnChange.xml [2.51.5] 2021-09-10 hardis:org:diagnose:legacyapi: Provide additional report with unique list of ips, hostnames (when available) , and number of calls Fix hardis version:promote [2.51.4] 2021-09-03 hardis:org:diagnose:legacyapi: Allow to override default output reportfile with --outputfile argument [2.51.3] 2021-09-02 Improve authentication log + less cases when launching again the same command can be necessary if you define forceRestDeploy: true in config, restDeploy: false won't be set automatically anymore [2.51.2] 2021-08-31 Quick fixes hardis:doc:plugin:generate Fix crash when there are no license & changelog [2.51.1] 2021-08-31 Quick fixes hardis:doc:plugin:generate Handle when command.title or command.description is empty Add # Commands to the README.md truncate markers Fix hardis:org:retrieve:sources:dx Empty temp directories at the beginning of the command Add ForecastingType in the list of ignored metadatas for conversion to sfdx sources [2.51.0] 2021-08-31 Update hardis:doc:plugin:generate so main README part is displayed on doc index.md [2.50.0] 2021-08-30 New commands to freeze users before deployment then unfreeze users after deployment sfdx hardis:org:user:freeze sfdx hardis:org:user:unfreeze [2.49.1] 2021-08-30 QuickFix scratch org auth during CI [2.49.0] 2021-08-30 Manage scratch org pools to enhance performances Initialize configuration with hardis:scratch:pool:configure Fetch a new scratch org from the pool when requesting creation of a new scratch org [2.48.1] 2021-08-27 QuickFix hardis:org:files:export [2.48.0] 2021-08-27 New command hardis:org:files:export to download all files (ContentVersion) attached to records (ex: Opportunity) Generate text log file in hardis-report/commands when sfdx-hardis is not run from CI hardis:org:diagnose:legacyapi : simpler logs [2.47.3] 2021-08-23 hardis:org:diagnose:legacyapi: Add more summary and statistics [2.47.2] 2021-08-23 Fix hardis:org:diagnose:legacyapi (display raw logs when CSV builder is crashing) , using papaparse instead of objects-to-csv package [2.47.1] 2021-08-19 Use --permissivediff to call sfdx-git-delta if the argument is available Manage env vars SKIP_PACKAGE_DEPLOY_ON_CHANGE and SKIP_PACKAGE_DEPLOY_ONCE . If set to true, related packageDeployOnChange.xml and packageDeployOnce.xml are ignored Define locally method to remove package.xml from another, to improve performances [2.47.0] 2021-08-19 New feature: use packageDeployOnChange.xml, to skip deployment of items that has not been updated since last update Create docker images with sfdx-cli@stable version alpha-sfdx-stable beta-sfdx-stable latest-sfdx-stable [2.46.0] 2021-08-16 Allow to run git delta command on local updates Update labels of hardis:data commands New technical command: hardis:work:ws , to call VsCode Extension refresh from CLI [2.45.0] 2021-08-15 Refactor hardis:org:diagnose:legacyapi with jsforce to handle more log entries Do not display git branch -v in logs [2.44.0] 2021-08-14 New command hardis:org:diagnose:legacyapi : Detect use of deprecated API versions in production org [2.43.1] 2021-07-23 Update deployTips Update json schema [2.43.0] 2021-07-22 Better split of elements during hardis:work:save Display elapsed time for long running commands [2.42.2] 2021-07-20 Use relative path for sfdmu data import/export [2.42.1] 2021-07-19 Fix data import & export commands when spaces in folder names [2.42.0] 2021-07-12 New command sfdx hardis:project:lint Update .sfdx-hardis.yml configuration JsonSchema [2.41.2] 2021-07-12 QuickFix case when title is not set (use first line of description) [2.41.1] 2021-07-12 Quickfix default mkdocs.yml [2.41.0] 2021-07-12 Add JSON Schema for .sfdx-hardis.yml configuration files Automatic SFDX Plugin documentation generation for any SFDX Plugin [2.40.0] 2021-07-08 hardis:scratch:create : Initialize data using SFDMU, if defined in .sfdx-hardis.json dataPackages property with importInScratchOrgs: true Example dataPackages: - dataPath: scripts/data/LightningSchedulerConfig importInScratchOrgs: true Propose to update or not default target git branch List target git branches if defined in .sfdx-hardis.json availableTargetBranches property hardis:scratch:delete : Propose only scratch orgs related to currently selected Dev Hub New command hardis:org:configure:data to initialize a SFDMU project, sfdx-hardis flavored Display data package label & description, from SFDMU folder config.json properties sfdxHardisLabel and sfdxHardisDescription hardis:org:data:import & hardis:org:data:import : Allow to select current org or another when running data import/export commands Display Dev Hub username when listing orgs for selection [2.31.1] 2021-07-02 hardis:scratch:delete : Display instanceUrl & last usage of scratch orgs displayed before deletion [2.31.0] 2021-07-02 New command hardis:scratch:delete to delete scratch orgs locally referenced. [2.30.1] 2021-06-30 hardis:org:connect : Propose user to open org in browser if not in CI [2.30.0] 2021-06-30 Update hardis:org:retrieve:packageconfig so it allows to select an org, and to update sfdx-hardis configuration [2.29.0] 2021-06-29 New command hardis:org:retrieve:sources:dx2 to assist call to force:source:retrieve using a package.xml file Improve hardis:project:generate:gitdelta by allowing to select commits from their description Use magenta to display config file updates [2.28.0] 2021-06-23 CI: Check Docker image security with trivy Avoid git error when development branch is updated [2.27.1] 2021-06-21 Fix CountryCode when updating scratch org user. Default FR - France, can be updated with config defaultCountry and defaultCountryCode in .sfdx-hardis.yml [2.27.0] 2021-06-20 Clean Lookup filters before force:source:push, then restore them and push again Manage gitRootFolderPrefix config property, in case the root of git repository is at a parent level than sfdx project root Allow to override separate deployments using config property separateDeploymentsConfig Set git config core.quotepath to false to manage special characters in git files / folders Run sfdx git delta at the root of the git repository Rename DeferSharingCalc permission set into SfdxHardisDeferSharingCalc New Deployment tips Contributing documentation [2.26.4] 2021-06-18 Do not write user config when current folder is empty [2.26.1] 2021-06-17 Take in account testLevel from .sfdx-hardis.yml in deployments [2.26.0] 2021-06-16 New command hardis:project:generate:gitdelta to generate the package.xml calculated between two commits New command hardis:org:connect to connect to an org without selecting it (can be used to refresh expired token) Propose choice to to skip .gitignore & .forceignore files auto-update Define triggerNotification on Command class to trigger MsTeams notifs Update org type selection message [2.25.3] 2021-06-14 Fix bug when selecting an org from outside a SFDX project folder [2.25.2] 2021-06-14 Refresh VsCode Sfdx Hardis UI when creating / loading a SFDX Project [2.25.1] 2021-06-13 Check if folder is a git repo before updating git config [2.25.0] 2021-06-12 New parameter keepmetadatatypes for hardis:org:retrieve:sources:dx Check dependencies Improve performances Check application dependencies (git,openssl) [2.24.0] 2021-06-10 New command hardis:org:purge:apexlog to purge all Apex Logs of selected org [2.23.0] 2021-06-07 Manage installation key for unlocked packages installation Deployment: manage --canmodify SFDMU argument (define sfdmuCanDeploy in sfdx-hardis branch config file) [2.22.0] 2021-06-03 New command hardis:project:clean:orgmissingitems : Remove elements that are not existing in target org (only in ReportType for now) hardis:project:clean:references : Remove cleaned items from package.xml files Externalization of method to select an org (+ reorder of list of displayed orgs) [2.21.0] 2021-06-02 hardis:project:clean:references: Improve performances for removing files hardis:scratch:create : Shorten scratch org auto-generated name Authenticate to an org: Request user to set alias if not provided Update default gitlab-ci.yml New method promptProfiles [2.20.3] 2021-05-26 Set prompt UI timeout to 2h instead of 5mn [2.20.2] 2021-05-25 Fix call to sfdmu (add --noprompt) [2.20.1] 2021-05-23 Fix scratch org listing [2.20.0] 2021-05-21 hardis:work:save : Prompt user to pull from scratch org or not before saving Do not update package.json anymore hardis:scratch:create : Fix reuse scratch org prompt [2.19.0] 2021-05-20 Detect when auth token is expired More deploy tips Clean ProductRequest items [2.18.0] 2021-05-18 New commands hardis:org:retrieve:packageconfig : Retrieves .sfdx-hardis.yml property installedPackaged from an existing org hardis:project:clean:emptyitems : Delete empty items from SFD project hardis:project:clean:hiddenitems : Delete hidden items (from managed packages) from SFDX project Update default values for JWT connected app creation Manage --targetusername to be taken in account for all sfdx hardis commands More deployment tips hardis:project:clean:manageditems: New --namespace argument org:retrieve:source:dx : Do not erase .gitignore, .forceignore , README.md and project-scratch-def is already existing locally Remove shape temp folder to avoid a force:org:create bug [2.17.3] 2021-05-18 Fix .gitignore automatic update constraint [2.17.2] 2021-05-10 Default init scratch org using push and not deploy QuickFix mergeRequest links local storage [2.17.0] 2021-05-10 New command hardis:project:convert:profilestopermsets to convert all profiles into permission sets hardis:scratch:create : Fix permission set auto assignment when creating a scratch org (use property initPermissionSets in .sfdx-hardis.yml) [2.16.1] 2021-05-09 hardis:work:save : Fix storage in config file of Merge Request info Update deploy tips [2.16.0] 2021-05-08 hardis:project:clean:manageditems : Clean SFDX project from managed classes hardis:project:clean:retrievefolders: Clean/Complete SFDX project with missing folders (dashboard,email,reports) hardis:project:clean:standarditems : Clean SFDX project from objects with no custom within More deployment error tips New parameter websocket for all commands Indicating in logs when deployment is a simulation [2.15.1] 2021-05-02 QuickFix hardis:work:save [2.15.0] 2021-04-30 hardis:project:clean:references : New cleaning module dashboards removing reference to users in Dashboards sources [2.14.0] 2021-04-29 Manage manifest/packageDeployOnce.xml : all its items that are already present in target org will not be deployed again [2.13.4] 2021-04-26 New deploy tips Do not update local files when calling configure commands hardis:work:save : Fix branch update issue [2.13.3] 2021-04-23 Remove PMD rule : CyclomaticComplexity [2.13.2] 2021-04-22 QuickFix hardis version:promote --auto [2.13.0] 2021-04-21 hardis:work:save New parameter --nogit for expert developers who want to manage git operations themselves New parameter --noclean for expert developers who want to manage clean operations themselves Update default Mega-Linter config [2.12.0] 2021-04-19 New variable CI_DEPLOY_QUICK_ACTIONS_DUMMY set to \"true\" in CI variables when there are QuickActions dependent of Flows that are later in publication plan then set again to \"false\" and the deployment will pass :) hardis:project:clean:references : now deletes obsolete objects and objectTranslations hardis:work:save : More categories in interactive git add Improve authentication check performances New command hardis:config:get to return all config for project, branch or user New deployment errors tips [2.11.0] 2021-04-15 Delete scratch org when its initialization has failed during CI Clean obsolete object fields and objectTranslations [2.10.4] 2021-04-15 Provide password to user when creating new scratch org Update CI default config to allow to not delete scratch orgs (define CI_DELETE_SCRATCH_ORG: \"true\" in gitlab-ci-config.yml) New deploy tips: record type not found, picklist value not found [2.10.3] 2021-04-14 Allow advanced user to bypass auth check (set skipAuthCheck:true in config/user/***.sfdx-hardis.yml) Optimize check of force:config:set restDeploy: false hardis version:create : Store package installation password in project config + fixes [2.10.2] 2021-04-14 hardis:work:refresh : Make sure the user saved his work (commit) before merging another branch in current branch [2.10.1] 2021-04-11 hardis:org:test:apex : Fix regex to new Apex Test results stdout format [2.10.0] 2021-04-11 hardis:work:save : Automatic generation of split package.xml and deploymentPlan in .sfdx-hardis.yml hardis:work:save : Propose to export data when saving Remove duplicates from .gitignore and .forceignore Add chromium in dockerfile [2.9.4] 2021-04-09 Fix refresh Update project cleaning references [2.9.3] 2021-04-08 hardis:work:refresh : allow to refresh from another branch [2.9.2] 2021-04-08 hardis:work:save : Fix issue when trying to stage & commit ignored files after project cleaning hardis:project:configure:auth Improve error message when unable to upload ConnectedApp on production environment Update default Apex PMD ruleset Use replace and not replaceAll for node14 compatibility [2.9.1] 2021-04-07 Clean git reset before save Clean git stash before new task [2.9.0] 2021-04-06 New command hardis:project:create Refactor project cleaning and allow to use external config files (destructiveChanges-like.xml or json) Fixes hardis:work:save : Create destructiveChanges.xml if not existing hardis:work:save : call forceSourcePull method to propose to update .forceignore if errors are found hardis:project:configure:auth: call mdapi:deploy with RunLocalTests to manage production environments authentication: auth only to devHub if --devhub sent Disable spinner for restDeploy check [2.8.5] 2021-04-06 QuickFix question icon [2.8.4] 2021-04-06 Allow to skip pull before save New deployTip: code coverage items with 0% Fix DevHub auth when credential out of date Use latest sfdx-cli package Init git config only if we are not in CI [2.8.3] 2021-04-01 Fix package creation When using VsCode UI via WebSocket, display selected values in console logs [2.8.2] 2021-04-01 hardis:work:save : reset ongoing merge if existing Fix git reset call [2.8.0] 2021-03-31 Define git user.name and user.email if not set Define VsCode as git merge/diff tool if none is defined Unstash changes (git reset) at the beginning of hardis:work:save Deploy destructive changes after real deployment hardis:project:clean:references now works also to remove references to content of manifest/destructiveChanges.xml hardis:work:save : Clean sfdx project while saving it Factorize temp directory creation [2.7.2] 2021-03-30 Check user is sure to want to reuse an existing scratch org Fix hardis:work:refresh [2.7.1] 2021-03-29 Fix auto-fix of .gitignore and .forceignore Propose to auto-update .force ignore when there is a pull issue [2.7.0] 2021-03-29 Communicate with VsCode SFDX Hardis extension via WebSocket if server is found Send user input prompts to VsCode UI if WebSocket server found Send refreshStatus notifications when context is updated Arrange some messages for better display on UI [2.6.0] 2021-03-28 New command hardis:project:clean:references to clean SFDX project from data.com license references hardis:scratch:create : Load sfdmu workspace scripts/data/ScratchInit if existing in , to initialize scratch org data [2.5.0] 2021-03-28 New command hardis:source:push New command hardis:source:pull Various mini-fixes Move deploymentPlan.json within .sfdx-hardis.json Retry management for execCommand function. ex: retry: {retryDelay: 30,retryStringConstraint: 'some string present in output', retryMaxAttempts: 5} [2.4.0] 2021-03-27 Add sfdmu & sfdx-git-delta in dependencies & Dockerfile Import data with sfdmu Manage data import steps in deploymentPlan.json New command hardis:org:data:export New command hardis:org:data:import [2.3.0] 2021-03-26 hardis:work:save: Do not git add manifest files when they have not been updated Select type of org to connect: enhance label Multi-Select default to 9999 items displayed Display tips about deployment failures when they happen Create scratch org: When DeferSharingCalc in features, suspend and resume sharing calc during force:source:push Allow to define a file manifest/deploymentPlan.json to split the deployment into separate package.xml files Example: { \"packages\": [ { \"label\": \"SharingRulesAccount\", \"packageXmlFile\": \"splits/packageXmlSharingRulesAccount.xml\", \"order\": 10, \"waitAfter\": 60 }, { \"label\": \"SharingRulesVisit__c\", \"packageXmlFile\": \"splits/packageXmlSharingRulesAccountVisit__c.xml\", \"order\": 10 } ] } [2.2.1] 2021-03-23 QuickFix 2.2.1 Use RunLocalTests when deploying ConnectedApp metadata to production org [2.2.0] 2021-03-23 Enhance security by encrypting SSH private key [2.1.7] 2021-03-22 More categories for Interactive Git Add (Aura,LWC, Tech Config) Auto-update .forceignore Fix hardis:org:test:apex [2.1.6] 2021-03-20 Fix org authentication check [2.1.5] 2021-03-19 Unlimited list of items displayed during interactive git add Uniformize prompts to user [2.1.4] 2021-03-17 Deploy with --ignorewarnings [2.1.3] 2021-03-17 Fix hardis:retrieve:sources:dx when not in a DX project Fix deloyment of Connected App in production Display more options by page during interactive git add Sort files to git add by group and manage preselection [2.1.2] 2021-03-14 Improve package installation Allow to install a package not listed in sfdx-hardis Allow to configure automatic installation during deployments, or not Allow to configure automatic installation during scratch org initialisation, or not Reformat strings when no spaces are allowed in a user input [2.1.1] 2021-03-12 Fix hardis:scratch:create when initDataRequests [2.1.0] 2021-03-10 New command hardis:data:tree:export scratch:create : Import init data using .sfdx-hardis.yml initDataRequests property scratch:create : Assign to permission set (or PS groups) using .sfdx-hardis.yml initPermissionSets property [2.0.0] 2021-03-09 New command hardis create to create Managed and Unlocked packages Migrate from tslint to eslint Fix dependencies hell Fix hardis:org:purge:flow with new result format (#49) [1.6.1] 2021-03-09 Update sfdx-project.json when installing a package Refresh env & scratch org if same scratch org is reused Update default files for CI & monitoring projects Do not deploy packages from hardis:project:deploy:sources:dx when we are in --check mode ! Better output display for hardis:org:test:apex [1.6.0] - 2021-03-08 New package commands hardis install hardis version:create hardis version:list [1.5.1] - 2021-03-07 Use shared Mega-Linter configuration [1.5.0] 2021-03-05 New command hardis:org:select New command hardis:work:resetselection hardis:work:save : Upgrade package.xml and destructiveChanges.xml from git diff Improve console logging of git operations [1.4.1] 2021-03-03 Update default gitlab-ci.yml rename commands: hardis:work:new hardis:work:refresh hardis:work:save cosmetic enhancements [1.4.0] 2021-02-28 New work commands to make easier non technical users to use Hardis CI hardis:work:task:new hardis:work:task:save hardis:work:task:refresh [1.3.6] 2021-02-26 Quick fix hardis:org:configure:monitoring + colors [1.3.5] 2021-02-26 Workaround when --soapdeploy argument is not available [1.3.4] 2021-02-25 Reuse msTeamsWebhookUrl during sfdx:org:configure:monitoring prompts Allow to override CONFIG_BRANCH to get forced .sfdx.hardis.BRANCH.yml [1.3.3] 2021-02-24 Soap option for force:mdapi:deploy [1.3.2] 2021-02-24 Guide user to assign rights to Connected App in sfdx:org:configure:monitoring [1.3.1] 2021-02-24 Manage git clone & push for sfdx:org:configure:monitoring Manage upload of connected app metadata for sfdx:org:configure:monitoring [1.3.0] 2021-02-23 30: Remove use of sfdx-node New command sfdx:project:deploy:sources:metadata Generate .cache folder only when necessary New command sfdx:org:configure:monitoring [1.2.0] 2021-02-21 24: Change the way of listing installed packages 26: New command sfdx hardis:project:configure:deployments to configure Connected app 27: Check in manifest folder for package.xml Auto-generate alpha version of plugin package and associated docker image when publishing from branch alpha Manage cache storage for CI dependent jobs (cache, artifacts) .cache/sfdx-hardis/.sfdx .sfdx config/user Improve org authentication New command hardis:org:test Test org coverage and fail if < 75% Installed package management Factorize method Install packages during hardis:project:deploy:sources:dx Allow to reuse scratch org if previous creation failed. Force using --forcenew Improve auto-update of local project sfdx-hardis files Improve console logs Allow to store DevHubSfdxClientId in user sfdx-hardis.yml ( in /user folder) [1.1.3] 2021-02-17 Fix cases when directory is not git [1.1.0] 2021-02-17 New command hardis:project:deploy:sources:dx (alpha) New command hardis:project:audit:apiversion [1.0.1] 2021-02-15 Fix auth:login to avoid DevHub auth when not necessary [1.0.0] 2021-02-15 New command hardis:scratch:create Advanced project initialization using --shape argument for sfdx hardis:org:retrieve:sources:dx Automatic generation of .sfdx-hardis*.yml configuration files Automatic update of project package.json to add sfdx-hardis utilities [0.5.10] 2021-02-12 Allow purges to fail without making sfdx command fail [0.5.5] 2021-02-10 Check if installed sfdx-hardis is the latest version, else display a message to advise the user to upgrade to latest [0.5.4] 2021-02-09 Fixes: hardis:org:purge:flow : Do not crash in case the Flow is not deletable [0.5.2] 2021-02-07 Fixes: --no-prompt argument is ignored [0.5.1] 2021-02-04 Fixes: Add more items to metadatas not convertible to sfdx sources Issue when using --sandbox argument [0.5.0] 2021-02-03 New command hardis:project:audit:callincallout : Audit sfdx project (or metadatas) sources to list all CallIns and CallOuts from Apex / Triggers code parsing New command hardis:project:audit:remotesites : Audit sfdx project (or metadatas) sources to list all remote site settings of an org [0.4.1] 2021-02-01 Fix: Manage Hooks only from hardis namespace commands [0.4.0] 2021-02-01 Send MS Teams notifications if set environment variable MS_TEAMS_WEBHOOK_URL or msTeamsWebhookUrl in .sfdx-hardis.yml [0.3.1] 2021-01-31 Always regenerate full package.xml before retrieving metadatas [0.3.0] 2021-01-31 Build and upload nvuillam/sfdx-hardis docker image when releasing a new version New command force:auth:login + manage login using JWT for CI [0.2.0] 2021-01-31 New command sfdx hardis:org:retrieve:sources:metadata : Retrieve all metadata from an org [0.1.1] 2021-01-31 New command sfdx hardis:org:retrieve:sources:dx : Create SFDX project from remote org [0.0.1] 2021-01-26 New command sfdx hardis:org:purge:flow : Purge Obsolete flow versions to avoid the 50 max versions limit","title":"Changelog"},{"location":"CHANGELOG/#changelog","text":"","title":"Changelog"},{"location":"CHANGELOG/#beta-master","text":"Note: Can be used with sfdx plugins:install sfdx-hardis@beta and docker image hardisgroupcom/sfdx-hardis@beta","title":"[beta] (master)"},{"location":"CHANGELOG/#3170-2022-05-30","text":"New command hardis:org:generate:packagexmlfull to generate the full package.xml of a selected Salesforce org","title":"[3.17.0] 2022-05-30"},{"location":"CHANGELOG/#3161-2022-05-29","text":"Also remove standard fields when running hardis:project:clean:standarditems New Deployment tips Wrong api Version of a Metadata Unknown user Upgrade to MegaLinter v7","title":"[3.16.1] 2022-05-29"},{"location":"CHANGELOG/#3160-2022-05-24","text":"New ENV variables to override default wait on retrieve/deploy/test commands SFDX_RETRIEVE_WAIT_MINUTES SFDX_DEPLOY_WAIT_MINUTES SFDX_TEST_WAIT_MINUTES Update default .forceignore content","title":"[3.16.0] 2022-05-24"},{"location":"CHANGELOG/#3150-2022-05-11","text":"Allow to define property availableProjects so when user clicks on New task (hardis:work:new), he/she is asked to select a project, that will be used to build the new git branch name When creating new task, store the target branch so it is not prompted again when waiting to save/publish the task.","title":"[3.15.0] 2022-05-11"},{"location":"CHANGELOG/#3142-2022-05-03","text":"More explicit text to ask user if he/she wants to update its selected sandbox while creating a new task Do not ask to change default target branch if there are multiple available branches","title":"[3.14.2] 2022-05-03"},{"location":"CHANGELOG/#3141-2022-04-19","text":"Allow to override the default deployment wait time (60) using variable SFDX_DEPLOY_WAIT_MINUTES Update JSON schema to add customOrgColors","title":"[3.14.1] 2022-04-19"},{"location":"CHANGELOG/#3140-2022-04-14","text":"Fix breaking change of sfdx-git-delta (many thanks @scolladon !) Deploy tips Invalid report type Missing report Update missing email template message Add more space between error lines in PR/MR comments Upgrade xml2js dependency Update call to MegaLinter in Azure integrations","title":"[3.14.0] 2022-04-14"},{"location":"CHANGELOG/#3131-2022-04-12","text":"Fix missing sfdx-git-delta in Docker image","title":"[3.13.1] 2022-04-12"},{"location":"CHANGELOG/#3130-2022-04-06","text":"Change defaut package install mode to AdminsOnly When minimizing Profiles, do not remove the personAccountDefault=true elements Add new deploy tip: Error parsing file","title":"[3.13.0] 2022-04-06"},{"location":"CHANGELOG/#3123-2022-04-04","text":"Do not add EmailTemplate and Flows as separate items in deploymentPlan, as metadata API now can handle their deployment with the rest of the sources Add new deployTip: Missing multi-currency field Update label when creating a new task using an existing sandbox","title":"[3.12.3] 2022-04-04"},{"location":"CHANGELOG/#3122-2022-03-30","text":"New deployment error tips SortOrder must be in sequential order from 1. (Duplicate Rules issue) Invalid field:ACCOUNT.NAME in related list:RelatedContactAccountRelationList Add more matchers for duplicate detector","title":"[3.12.2] 2022-03-30"},{"location":"CHANGELOG/#3121-2022-03-29","text":"Fix false positive error in deployment job when there is no related Pull/Merge request","title":"[3.12.1] 2022-03-29"},{"location":"CHANGELOG/#3120-2022-03-23","text":"Integration with Azure Pipelines Pull Request threads hardis:work:new : Allow to select no org even of sandbox or scratch is forced on the project using config property allowedOrgTypes Doc: rename User Guide into Contributor Guide","title":"[3.12.0] 2022-03-23"},{"location":"CHANGELOG/#3111-2022-03-20","text":"Better fix for root path issues (internal error)","title":"[3.11.1] 2022-03-20"},{"location":"CHANGELOG/#3110-2022-03-20","text":"Fix root path issues (internal error)","title":"[3.11.0] 2022-03-20"},{"location":"CHANGELOG/#3102-2022-03-16","text":"Fix sandbox check when calling hardis:source:push","title":"[3.10.2] 2022-03-16"},{"location":"CHANGELOG/#3101-2022-03-15","text":"Quick fix Gitlab integration when there is no MR associated to a deployment","title":"[3.10.1] 2022-03-15"},{"location":"CHANGELOG/#3100-2022-03-15","text":"Post a Gitlab Merge Request note when checking a deployment (beta) Deployment errors with resolution tips Failing test classes Code coverage Do not remove then restore lookup filters when source:push on a source-tracked sandbox Catch and display errors when caused by internet connection issue","title":"[3.10.0] 2022-03-15"},{"location":"CHANGELOG/#392-2022-03-09","text":"Update deploy tips for error Unknown user permission: SendExternalEmailAvailable","title":"[3.9.2] 2022-03-09"},{"location":"CHANGELOG/#391-2022-03-08","text":"Improve logs for false positive after package installation failure Remove useless and scary log after a successful login :) Remove npm cache from Docker image","title":"[3.9.1] 2022-03-08"},{"location":"CHANGELOG/#390-2022-03-08","text":"New task with source tracked sandbox: Do not allow to select a major org for dev or config Open SF org if selected from the already connected list Init packages only if defined in config Enhance labels Save task: Notify that once the merge request is merged, you must create a new task that will create a new branch Improve login error messages Use latest version of MegaLinter","title":"[3.9.0] 2022-03-08"},{"location":"CHANGELOG/#380-2022-03-03","text":"Manage deprecation of force:mdapi:legacy:deploy, replaced by force:mdapi:deploy Update default packageDeployOnce.xml when creating a new project (related to Overwrite management ) Update CI/CD documentation Initialize orgs Update labels of prompts when creating a new sfdx-hardis project","title":"[3.8.0] 2022-03-03"},{"location":"CHANGELOG/#371-2022-02-27","text":"Use tooling API to retrieve ApexLogs for deletion, by @thvd in https://github.com/hardisgroupcom/sfdx-hardis/pull/321","title":"[3.7.1] 2022-02-27"},{"location":"CHANGELOG/#370-2022-02-27","text":"Add demo video about configuring authentication between CI and Salesforce orgs Update CI/CD documentation Update branding","title":"[3.7.0] 2022-02-27"},{"location":"CHANGELOG/#360-2022-02-23","text":"Add sfdx sources to monitoring for better readability Change example of email addresses for prompts Update CI/CD recommendations in documentation","title":"[3.6.0] 2022-02-23"},{"location":"CHANGELOG/#350-2022-02-22","text":"Update default overwrite config ( packageDeployOnce.xml ) Setup CI: Define default Azure pipelines YML files Fix notification logs for Azure Pipelines","title":"[3.5.0] 2022-02-22"},{"location":"CHANGELOG/#340-2022-02-21","text":"Move documentation to https://sfdx-hardis.cloudity.com","title":"[3.4.0] 2022-02-21"},{"location":"CHANGELOG/#332-2022-02-17","text":"Fix default monitoring for Azure pipelines Update CI documentation (Azure)","title":"[3.3.2] 2022-02-17"},{"location":"CHANGELOG/#331-2022-02-16","text":"Fix check of newer package installed","title":"[3.3.1] 2022-02-16"},{"location":"CHANGELOG/#330-2022-02-14","text":"Compliance of monitoring setup with Azure Pipelines hardis:org:retrieve:source:metadata enhancements new option --includemanaged , disabled by default, to avoid having too many items to retrieve during monitoring job allow to force monitoring additional tasks using env var SFDX_HARDIS_MONITORING set to \"true\"","title":"[3.3.0] 2022-02-14"},{"location":"CHANGELOG/#320-2022-02-10","text":"Fix issue when logging to a new org during command hardis:source:retrieve Implement check of code coverage when calling sfdx hardis:project:deploy:sources:dx --check 75% minimum by default, overridable in property apexTestsMinCoverageOrgWide in .sfdx-hardis.yml, or using env var APEX_TESTS_MIN_COVERAGE_ORG_WIDE Add --checkcoverage option to wrapper command hardis:source:deploy Example: sfdx hardis:source:deploy -x manifest/package.xml --wait 60 --ignorewarnings --testlevel RunLocalTests --postdestructivechanges ./manifest/destructiveChanges.xml --targetusername nicolas.vuillamy@cloudity.com --checkonly --checkcoverage --verbose --coverageformatters json-summary","title":"[3.2.0] 2022-02-10"},{"location":"CHANGELOG/#310-2022-02-07","text":"Reset local sfdx tracking when reusing a sandbox for a new task","title":"[3.1.0] 2022-02-07"},{"location":"CHANGELOG/#300-2022-02-07","text":"Breaking change: SFDX_HARDIS_DEPLOY_IGNORE_SPLIT_PACKAGES is now \"true\" by default. If you want to apply the deploymentPlan in .sfdx-hardis, you need to define variable SFDX_HARDIS_DEPLOY_IGNORE_SPLIT_PACKAGES=\"false\"","title":"[3.0.0] 2022-02-07"},{"location":"CHANGELOG/#21000-2022-02-07","text":"hardis:work:new: : When creating a new task and using a source-tracked sandbox, ask user to push sources, assign permission sets and load data to initialize it. Add explicit error message when scratch org creation is caused by a limit reach Update default API version to 56.0 Improve labels when prompting to select an org Update CI/CD documentation","title":"[2.100.0] 2022-02-07"},{"location":"CHANGELOG/#2991-2022-01-31","text":"Fix hardis:project:clean:hiddenitems when multiple files in the same folder match the same glob pattern Update documentation, fix typos and dead links","title":"[2.99.1] 2022-01-31"},{"location":"CHANGELOG/#2990-2022-01-30","text":"Replace prompts library by inquirer , because prompts is buggy Dockerfile: Workaround for https://github.com/forcedotcom/salesforcedx-apex/issues/213 (force:apex:test:run with code coverage crashing on some Gitlab runners with Invalid time value ) Allow to override the proposed branch names when calling hardis:work:new , using property branchPrefixChoices hardis:project:clean:hiddenitems: Also clean LWC with hidden content Add yarn in dockerfile","title":"[2.99.0] 2022-01-30"},{"location":"CHANGELOG/#2981-2022-01-23","text":"Fix hardis:org:purge:flow when flow prompt selection is all","title":"[2.98.1] 2022-01-23"},{"location":"CHANGELOG/#2980-2022-01-23","text":"Documentation: Add CI/CD user guide and release manager guide, available at https://sfdx-hardis.cloudity.com/salesforce-ci-cd-home/ New .sfdx-hardis.yml config property allowedOrgTypes , allowing to define the type(s) or org that can be used for implementation: (sandbox and/or scratch)","title":"[2.98.0] 2022-01-23"},{"location":"CHANGELOG/#2973-2022-11-30","text":"QuickFix System.debug removal","title":"[2.97.3] 2022-11-30"},{"location":"CHANGELOG/#2972-2022-11-30","text":"QuickFix","title":"[2.97.2] 2022-11-30"},{"location":"CHANGELOG/#2971-2022-11-30","text":"QuickFix hardis:lint:access","title":"[2.97.1] 2022-11-30"},{"location":"CHANGELOG/#2970-2022-11-30","text":"New command hardis:lint:access to analyze of items in sources are not present within profiles and/or permission sets","title":"[2.97.0] 2022-11-30"},{"location":"CHANGELOG/#2961-2022-11-17","text":"Fix error when assigning already existing PS Update default CI config","title":"[2.96.1] 2022-11-17"},{"location":"CHANGELOG/#2960-2022-11-09","text":"Replace sfdx force:package:install with sfdx force:package:beta:install Do not cause deployment to fail when a deploying an older managed package version Instead, deployment will assume the newer version meets the requirement hardis:scratch:create : Avoid error in case of already existing assignment of PermissionSet SfdxHardisDeferSharingRecalc Update Node.js minimum version to 16.x","title":"[2.96.0] 2022-11-09"},{"location":"CHANGELOG/#2952-2022-10-19","text":"Replace use of sfpowerkit by default command sfdx force:source:manifest:create Manage cache for listing orgs Update hardis version:create to allow to install it later on an org immediately delete it New command hardis:project:metadata:findduplicates to detect when git messed during an automated merging of conflicts Factorize check of sfdx project existence Fix default gitlab-ci default pipeline Replace supportsDevhubUsername by requiresDevhubUsername in command classes when necessary Add parameters skipauth and websocket on sfdx hardis:project:metadata:duplicate Add missing parameter skipauth on sfdx hardis:package:install","title":"[2.95.2] 2022-10-19"},{"location":"CHANGELOG/#2943-2022-09-15","text":"Automate SSL certificate generation + force:source:deploy replaced by force:source:legacy:deploy","title":"[2.94.3] 2022-09-15"},{"location":"CHANGELOG/#2942-2022-09-09","text":"hardis:project:clean:minimizeprofiles : Do not strip tabVisibilities from Profiles","title":"[2.94.2] 2022-09-09"},{"location":"CHANGELOG/#2941-2022-09-01","text":"Lock sfpowerkit dependency to 4.2.13 to avoid error caused by deprecation of sfpowerkit:org:build:manifest","title":"[2.94.1] 2022-09-01"},{"location":"CHANGELOG/#2940-2022-08-31","text":"Update documentation to initialize scratch org Update JSON schema to add scratchOrgInitApexScripts Fix execution of scripts defined in scratchOrgInitApexScripts","title":"[2.94.0] 2022-08-31"},{"location":"CHANGELOG/#2930-2022-08-02","text":"Fix handling of new sfdx error format so we can again identify deployment tips New deployment tips: Cannot update a field to a Summary from something else","title":"[2.93.0] 2022-08-02"},{"location":"CHANGELOG/#2920-2022-07-29","text":"New command hardis:org:retrieve:source:analytics to retrieve all analytics (CRM Analytics/TCRM) sources New deployment tips (Wave analytics) Fix writePackageXml method when there is not an existing file","title":"[2.92.0] 2022-07-29"},{"location":"CHANGELOG/#2910-2022-07-15","text":"Fix issue when force:source command wrappers arguments contain spaces (#269) ) Upgrade MegaLinter to v6 Upgrade yarn dependencies","title":"[2.91.0] 2022-07-15"},{"location":"CHANGELOG/#2900-2022-06-24","text":"Events to open generated files when called from VsCode SFDX Hardis New deployTips","title":"[2.90.0] 2022-06-24"},{"location":"CHANGELOG/#2893-2022-06-21","text":"Fix exported file extension ( #266 )","title":"[2.89.3] 2022-06-21"},{"location":"CHANGELOG/#2892-2022-06-17","text":"Build full manifest using sfpowerkit excluding ManagedContentTypeBundle because it is not managed by retrieve","title":"[2.89.2] 2022-06-17"},{"location":"CHANGELOG/#2891-2022-06-16","text":"Auto-update gitlab-ci.yml only if variable AUTO_UPDATE_GITLAB_CI_YML is set","title":"[2.89.1] 2022-06-16"},{"location":"CHANGELOG/#2890-2022-06-12","text":"hardis mergexml : New command to merge package.Xml files","title":"[2.89.0] 2022-06-12"},{"location":"CHANGELOG/#2880-2022-06-11","text":"hardis:project:clean:systemdebug : New command to comment or remove all System.debug from apex and triggers","title":"[2.88.0] 2022-06-11"},{"location":"CHANGELOG/#2875-2022-05-18","text":"toml2csv: Allow hardcoded values for concat Refactor internal CI to use 7.148.3 as recommended version","title":"[2.87.5] 2022-05-18"},{"location":"CHANGELOG/#2874-2022-05-18","text":"Fix configure org CI Hide auth info from console logs Fix Bulk Update job not closed","title":"[2.87.4] 2022-05-18"},{"location":"CHANGELOG/#2873-2022-05-12","text":"Auto-update .gitlab-ci.yml if a newest version exists","title":"[2.87.3] 2022-05-12"},{"location":"CHANGELOG/#2872-2022-05-11","text":"Refactor report directory management","title":"[2.87.2] 2022-05-11"},{"location":"CHANGELOG/#2871-2022-05-11","text":"Fix monitoring default pipeline","title":"[2.87.1] 2022-05-11"},{"location":"CHANGELOG/#2870-2022-05-08","text":"New command hardis:project:clean:xml allowing to automate the manual cleaning in the XML files using glob pattern and xPath Reorganize work:save command code + add auto mode Call Save command from Retrofit command to update package.xml files and make sure sources have been cleaned","title":"[2.87.0] 2022-05-08"},{"location":"CHANGELOG/#2861-2022-05-06","text":"hardis:work:new : Propose to reuse current scratch org when it is not in the local list hardis:work:save : Propose to push git branch on server when it is still untracked","title":"[2.86.1] 2022-05-06"},{"location":"CHANGELOG/#2860-2022-05-03","text":"New wrapper command: sfdx hardis:source:retrieve Quickfix toml2csv","title":"[2.86.0] 2022-05-03"},{"location":"CHANGELOG/#2852-2022-05-02","text":"Fix toml2csv error log Deployment tips Allow deployment with pending Apex Jobs Update Can not find folder","title":"[2.85.2] 2022-05-02"},{"location":"CHANGELOG/#2851-2022-04-27","text":"Enhance sfdx hardis:org:retrieve:sources:retrofit command + JSON schema updates","title":"[2.85.1] 2022-04-27"},{"location":"CHANGELOG/#2850-2022-04-27","text":"Enhance sfdx hardis:org:retrieve:sources:retrofit command Ad deployment tip: Invalid field in related list","title":"[2.85.0] 2022-04-27"},{"location":"CHANGELOG/#2840-2022-04-27","text":"Update deployTips: improve unknown custom field message New command sfdx hardis:doc:extract:permsetgroups to generate permission set groups documentation","title":"[2.84.0] 2022-04-27"},{"location":"CHANGELOG/#2836-2022-04-26","text":"Fix hardis:work:save who sometimes forgot to ask to push commits","title":"[2.83.6] 2022-04-26"},{"location":"CHANGELOG/#2835-2022-04-24","text":"Update deployment tips","title":"[2.83.5] 2022-04-24"},{"location":"CHANGELOG/#2830-2022-04-20","text":"New deployment tips: Not valid sharing model Improve purge flows for manual users Improve badwords detector Open scratch org when reusing one Hide prompt result when it contains sensitive information","title":"[2.83.0] 2022-04-20"},{"location":"CHANGELOG/#2822-2022-04-19","text":"New deployTip: Can not change type due to existing data Do not replace ListView Everything by Mine when we are just simulating deployment","title":"[2.82.2] 2022-04-19"},{"location":"CHANGELOG/#2821-2022-04-16","text":"QuickFix platform compatibility for sfdx hardis:org:fix:listviewmine","title":"[2.82.1] 2022-04-16"},{"location":"CHANGELOG/#2820-2022-04-16","text":"New command sfdx hardis:org:fix:listviewmine as a workaround to force:source:deploy not allowing ListView with scope Mine","title":"[2.82.0] 2022-04-16"},{"location":"CHANGELOG/#2810-2022-04-15","text":"New property autoRetrieveWhenPull to always retrieve some sources when calling hardis:source:pull (useful when sfdx tracking forgets some updates)","title":"[2.81.0] 2022-04-15"},{"location":"CHANGELOG/#2800-2022-04-15","text":"Simplify and document more hardis:work:new , hardis:work:pull and hardis:work:save Open org in browser when fetched from scratch org pool More deploymentTips Add customPlugins definition in json schema","title":"[2.80.0] 2022-04-15"},{"location":"CHANGELOG/#2790-2022-04-10","text":"New property extends in .sfdx-hardis.yml , to allow local config file to extend from remote file Add customCommands definition in json schema","title":"[2.79.0] 2022-04-10"},{"location":"CHANGELOG/#2784-2022-04-09","text":"Update documentation","title":"[2.78.4] 2022-04-09"},{"location":"CHANGELOG/#2783-2022-04-08","text":"Add a retrofit command to retrieve changes made directly in an org","title":"[2.78.3] 2022-04-08"},{"location":"CHANGELOG/#2782-2022-04-08","text":"Fix legacy API command display ( #225 )","title":"[2.78.2] 2022-04-08"},{"location":"CHANGELOG/#2781-2022-04-07","text":"Fix CI & remove docker image with sfdx-cli@stable as it does not exists anymore","title":"[2.78.1] 2022-04-07"},{"location":"CHANGELOG/#2780-2022-04-07","text":"New parameter --skipauth on all hardis commands, to allow the auth check when a default username is required (allows advanced users to improve performances) Set user email when fetching a scratch org from scratch org pool","title":"[2.78.0] 2022-04-07"},{"location":"CHANGELOG/#2772-2022-04-07","text":"Fix bug when subtracting a package.xml from another","title":"[2.77.2] 2022-04-07"},{"location":"CHANGELOG/#2771-2022-04-07","text":"Fix error in packageDeployOnce.xml document (sfdx hardis:project:deploy:sources:dx)","title":"[2.77.1] 2022-04-07"},{"location":"CHANGELOG/#2770-2022-04-05","text":"Generate deployment tips documentation hardis:org:user:activateinvalid : new --profiles argument Update MsTeams WebHooks ENV variables MS_TEAMS_WEBHOOK_URL_CRITICAL MS_TEAMS_WEBHOOK_URL_SEVERE MS_TEAMS_WEBHOOK_URL_WARNING MS_TEAMS_WEBHOOK_URL_INFO Allow to install packages during deployment check using INSTALL_PACKAGES_DURING_CHECK_DEPLOY=true env variable Enhance prompt org labels","title":"[2.77.0] 2022-04-05"},{"location":"CHANGELOG/#2762-2022-04-04","text":"Improve activate invalid users commands (allow to select by profile(s))","title":"[2.76.2] 2022-04-04"},{"location":"CHANGELOG/#2761-2022-04-04","text":"Improve activate invalid users commands","title":"[2.76.1] 2022-04-04"},{"location":"CHANGELOG/#2760-2022-04-03","text":"New command sfdx hardis:org:user:activateinvalid to activate invalid emails in sandbox Fix CI org authentication in case the default username is not the org that we want to configure Bypass error with force:source:legacy:pull / push hardis:work:save : Propose to manually commit files Fix hardis:org:select alias & user config Colorize command lines in logs Enhance new task with sandbox (not fully stable yet) New deployTips Please choose a different name","title":"[2.76.0] 2022-04-03"},{"location":"CHANGELOG/#2750-2022-03-28","text":"Property availableTargetBranches can be defined in .sfdx-hardis.yml to list the possible target branches for merge requests fix hardis:work:save to propose a git push when the current branch is ahead of origin branch New deployTips XML item appears more than once","title":"[2.75.0] 2022-03-28"},{"location":"CHANGELOG/#2742-2022-03-26","text":"Update legacy API detection labels","title":"[2.74.2] 2022-03-26"},{"location":"CHANGELOG/#2741-2022-03-25","text":"Manage crash when retrieving metadatas from CI jobs","title":"[2.74.1] 2022-03-25"},{"location":"CHANGELOG/#2740-2022-03-24","text":"Enhance hardis:work:save to request if the files has already been staged and committed Deploy manifest and destructive change in the same sfdx force:source:deploy call thanks to new argument postdestructivechanges More deployTips Improve MsTeams notifications management","title":"[2.74.0] 2022-03-24"},{"location":"CHANGELOG/#2730-2022-03-21","text":"Improve tips about how to fix deployments directly within error messages Wrapper commands to display tips in error logs force:source:deploy can be wrapped using hardis:source:deploy force:source:push can be wrapped using hardis:source:push force:mdapi:deploy can be wrapped using hardis:mdapi:deploy","title":"[2.73.0] 2022-03-21"},{"location":"CHANGELOG/#2720-2022-03-21","text":"Include tips about how to fix deployments directly within error messages","title":"[2.72.0] 2022-03-21"},{"location":"CHANGELOG/#2712-2022-03-17","text":"Update JSON schema for customCommands (used by VsCode SFDX Hardis) New property for scratch org pool config: maxScratchOrgsNumberToCreateOnce (max number of scratch orgs to create during one CI job)","title":"[2.71.2] 2022-03-17"},{"location":"CHANGELOG/#2710-2022-03-15","text":"New command hardis:org:data:delete to manage delete data workspaces of sfdmu New command hardis:scratch:pool:reset to delete all scratch orgs from a scratch orgs pool (like when a new project-scratch-def is delivered)","title":"[2.71.0] 2022-03-15"},{"location":"CHANGELOG/#2700-2022-03-10","text":"hardis:org:apex:test : allow command to succeed when no tests are present in the project, useful for new environments initialization","title":"[2.70.0] 2022-03-10"},{"location":"CHANGELOG/#2690-2022-03-02","text":"Scratch org pool: add history (fetch,auth) on ActiveScratchOrg devhub record","title":"[2.69.0] 2022-03-02"},{"location":"CHANGELOG/#2686-2022-02-22","text":"remove DEPLOY PROGRESS noisy lines from logs","title":"[2.68.6] 2022-02-22"},{"location":"CHANGELOG/#2685-2022-02-18","text":"Update mkdocs fix commit of files with spaces","title":"[2.68.5] 2022-02-18"},{"location":"CHANGELOG/#2684-2022-02-18","text":"hardis install Add -k, --installationkey CLI param and prompts user for it if not supplied","title":"[2.68.4] 2022-02-18"},{"location":"CHANGELOG/#2683-2022-02-18","text":"Fix hardis version:promote --auto","title":"[2.68.3] 2022-02-18"},{"location":"CHANGELOG/#2682-2022-02-15","text":"Fix minimize profiles command","title":"[2.68.2] 2022-02-15"},{"location":"CHANGELOG/#2681-2022-02-02","text":"Allow property autoRemoveUserPermissions in .sfdx-hardis.yml to clean profiles toml2csv: Add concatComposite option for column Add recordType option for column","title":"[2.68.1] 2022-02-02"},{"location":"CHANGELOG/#2680-2022-01-31","text":"Do not create log files in the current directory if it is empty More deployTips Clean MDAPI output logs from progression lines Add listViewMine in cleaning references toml2csv updates","title":"[2.68.0] 2022-01-31"},{"location":"CHANGELOG/#2671-2022-01-20","text":"Enhance documentation for hardis:scratch:pool:create command Fixes and enhancements on toml2csv command","title":"[2.67.1] 2022-01-20"},{"location":"CHANGELOG/#2670-2022-01-18","text":"hardis:misc:toml2csv enhancements (rename and copy files) fix minimizing of profiles new command hardis:project:clean:listview","title":"[2.67.0] 2022-01-18"},{"location":"CHANGELOG/#2662-2022-01-13","text":"hardis:misc:toml2csv enhancements","title":"[2.66.2] 2022-01-13"},{"location":"CHANGELOG/#2661-2022-01-11","text":"minimizeProfiles: do not remove userPermissions if profile is default Admin profile","title":"[2.66.1] 2022-01-11"},{"location":"CHANGELOG/#2660-2022-01-07","text":"Check deployment with metadata project","title":"[2.66.0] 2022-01-07"},{"location":"CHANGELOG/#2650-2022-01-05","text":"Fix contribution install by upgrading dependencies Use soqlQuery method everywhere Set devhub alias when available","title":"[2.65.0] 2022-01-05"},{"location":"CHANGELOG/#2641-2021-12-29","text":"Update default apiVersion to 53.0 Option to not remove empty types when subtracting package.xml","title":"[2.64.1] 2021-12-29"},{"location":"CHANGELOG/#2640-2021-12-24","text":"New command hardis:clean:minimizeprofiles New deployTip duplicate-value-platform-action-id-list Apply packageDeployOnce.xml and packageDeployOnChange.xml in all contexts Package.xml mixing: fix wildcard <members>*</members> management List metadatas of target org: complete with what sfpowerkit commands does not return (ListView,CustomLabel)","title":"[2.64.0] 2021-12-24"},{"location":"CHANGELOG/#2630-2021-12-21","text":"New event message refreshPlugins (used by VsCodeSFDX Hardis) Display Error message when unable to delete a temporary directory","title":"[2.63.0] 2021-12-21"},{"location":"CHANGELOG/#2620-2021-12-14","text":"Fix hardis:work:save crash when rebuilding deploymentPlan Fix XML indentation (#51). Can also be overridden by using env variable SFDX_XML_INDENT (ex: SFDX_INDENT=' ' )","title":"[2.62.0] 2021-12-14"},{"location":"CHANGELOG/#2610-2021-12-02","text":"Use same XML indentation than Salesforce (#51) (requires also upgrade of sfdx-essentials, using sfdx plugins:install sfdx-essentials )","title":"[2.61.0] 2021-12-02"},{"location":"CHANGELOG/#2603-2021-11-08","text":"Fix hardis:source:pull when there are errors","title":"[2.60.3] 2021-11-08"},{"location":"CHANGELOG/#2602-2021-11-06","text":"Allow to input URL to use to login","title":"[2.60.2] 2021-11-06"},{"location":"CHANGELOG/#2601-2021-11-05","text":"Fix hardis:scratch:pool:view when DevHub authentication is expired","title":"[2.60.1] 2021-11-05"},{"location":"CHANGELOG/#2600-2021-11-03","text":"Deployment failure: Tuning of error message + display of direct link to Deployment Status page in console logs When not in CI, prompt for the org to use to simulate deployments","title":"[2.60.0] 2021-11-03"},{"location":"CHANGELOG/#2590-2021-11-03","text":"(ALPHA,not really usable yet) Allow to use sandboxes for new task (create from production org, or clone from other sandbox) Fixes about scratch org initialization and JWT auth configuration","title":"[2.59.0] 2021-11-03"},{"location":"CHANGELOG/#2583-2021-10-23","text":"hardis:org:files:export: Fix file paths in logs","title":"[2.58.3] 2021-10-23"},{"location":"CHANGELOG/#2582-2021-10-18","text":"org:user:freeze : Prevent to freeze all profiles and current user profile","title":"[2.58.2] 2021-10-18"},{"location":"CHANGELOG/#2581-2021-10-18","text":"org:retrieve:sources:metadata : Manage locally defined remove-items-package.xml (that can handle wildcard members)","title":"[2.58.1] 2021-10-18"},{"location":"CHANGELOG/#2580-2021-10-16","text":"org:retrieve:sources:metadata : Run apex tests and legacy api check if we are in CI and in a repository named with monitoring Teams notifications for apex tests and legacy api failure","title":"[2.58.0] 2021-10-16"},{"location":"CHANGELOG/#2572-2021-10-13","text":"hardis:org:files:export Add file extension when missing replace .snote by .txt replace special characters in parent folder name and file name","title":"[2.57.2] 2021-10-13"},{"location":"CHANGELOG/#2571-2021-10-12","text":"Retry when BULK API Query returns a timeout hardis:org:files:export Use node-fetch-retry for direct downloads (retry up to 30 seconds by default) New argument --startchunknumber to start files extraction from a chunk position","title":"[2.57.1] 2021-10-12"},{"location":"CHANGELOG/#2570-2021-10-11","text":"Make hardis:org:user:freeze and hardis:org:user:unfreeze can now handle large volume of users, using Bulk API","title":"[2.57.0] 2021-10-11"},{"location":"CHANGELOG/#2560-2021-10-10","text":"Update auto-generated documentation to add a commands.md + its link in the menu","title":"[2.56.0] 2021-10-10"},{"location":"CHANGELOG/#2553-2021-10-05","text":"When not in CI, disable auto-update of .gitignore and .forceignore files because of a prompt library issue. To enable it, define AUTO_UPDATE env variable to \"true\"","title":"[2.55.3] 2021-10-05"},{"location":"CHANGELOG/#2552-2021-10-03","text":"Fix link to https://nicolas.vuillamy.fr/handle-salesforce-api-versions-deprecation-like-a-pro-335065f52238","title":"[2.55.2] 2021-10-03"},{"location":"CHANGELOG/#2551-2021-10-01","text":"SFDX_HARDIS_DEBUG_ENV. If set to true, display env vars at startup","title":"[2.55.1] 2021-10-01"},{"location":"CHANGELOG/#2550-2021-10-01","text":"Manage env var SFDX_HARDIS_DEPLOY_IGNORE_SPLIT_PACKAGES. If \"true\", package.xmls are not split with deploymentPlan","title":"[2.55.0] 2021-10-01"},{"location":"CHANGELOG/#2540-2021-09-27","text":"Allow to override force:org:create waiting time using SCRATCH_ORG_WAIT en variable (default: 15mn) hardis:org:select : new parameter --scratch to allow to list only scratch orgs related to current Dev Hub hardis:org:retrieve:sources:dx2 : New parameter --template to use default package.xml files (ex: wave ) Scratch org pool: automatically delete too old ready-to-use scratch orgs Deploy Tips Wave deployment error","title":"[2.54.0] 2021-09-27"},{"location":"CHANGELOG/#2531-2021-09-14","text":"Update Object deployed when configuring scratch org pool (replace Html by LongTextArea)","title":"[2.53.1] 2021-09-14"},{"location":"CHANGELOG/#2530-2021-09-14","text":"Additional docker images, to use when stable and latest sfdx-cli versions arr broken hardisgroupcom/sfdx-hardis:latest-sfdx-recommended hardisgroupcom/sfdx-hardis:beta-sfdx-recommended hardisgroupcom/sfdx-hardis:alpha-sfdx-recommended","title":"[2.53.0] 2021-09-14"},{"location":"CHANGELOG/#2520-2021-09-14","text":"New command hardis:project:fix:v53flexipages to fix v53.0 broken ascending compatibility New command hardis:project:audit:duplicatefiles to detect doubling files in wrong sfdx folders","title":"[2.52.0] 2021-09-14"},{"location":"CHANGELOG/#2516-2021-09-10","text":"Take in account parameter --ignore-whitespace of sfdx-git-delta for packageOnChange.xml","title":"[2.51.6] 2021-09-10"},{"location":"CHANGELOG/#2515-2021-09-10","text":"hardis:org:diagnose:legacyapi: Provide additional report with unique list of ips, hostnames (when available) , and number of calls Fix hardis version:promote","title":"[2.51.5] 2021-09-10"},{"location":"CHANGELOG/#2514-2021-09-03","text":"hardis:org:diagnose:legacyapi: Allow to override default output reportfile with --outputfile argument","title":"[2.51.4] 2021-09-03"},{"location":"CHANGELOG/#2513-2021-09-02","text":"Improve authentication log + less cases when launching again the same command can be necessary if you define forceRestDeploy: true in config, restDeploy: false won't be set automatically anymore","title":"[2.51.3] 2021-09-02"},{"location":"CHANGELOG/#2512-2021-08-31","text":"Quick fixes hardis:doc:plugin:generate Fix crash when there are no license & changelog","title":"[2.51.2] 2021-08-31"},{"location":"CHANGELOG/#2511-2021-08-31","text":"Quick fixes hardis:doc:plugin:generate Handle when command.title or command.description is empty Add # Commands to the README.md truncate markers Fix hardis:org:retrieve:sources:dx Empty temp directories at the beginning of the command Add ForecastingType in the list of ignored metadatas for conversion to sfdx sources","title":"[2.51.1] 2021-08-31"},{"location":"CHANGELOG/#2510-2021-08-31","text":"Update hardis:doc:plugin:generate so main README part is displayed on doc index.md","title":"[2.51.0] 2021-08-31"},{"location":"CHANGELOG/#2500-2021-08-30","text":"New commands to freeze users before deployment then unfreeze users after deployment sfdx hardis:org:user:freeze sfdx hardis:org:user:unfreeze","title":"[2.50.0] 2021-08-30"},{"location":"CHANGELOG/#2491-2021-08-30","text":"QuickFix scratch org auth during CI","title":"[2.49.1] 2021-08-30"},{"location":"CHANGELOG/#2490-2021-08-30","text":"Manage scratch org pools to enhance performances Initialize configuration with hardis:scratch:pool:configure Fetch a new scratch org from the pool when requesting creation of a new scratch org","title":"[2.49.0] 2021-08-30"},{"location":"CHANGELOG/#2481-2021-08-27","text":"QuickFix hardis:org:files:export","title":"[2.48.1] 2021-08-27"},{"location":"CHANGELOG/#2480-2021-08-27","text":"New command hardis:org:files:export to download all files (ContentVersion) attached to records (ex: Opportunity) Generate text log file in hardis-report/commands when sfdx-hardis is not run from CI hardis:org:diagnose:legacyapi : simpler logs","title":"[2.48.0] 2021-08-27"},{"location":"CHANGELOG/#2473-2021-08-23","text":"hardis:org:diagnose:legacyapi: Add more summary and statistics","title":"[2.47.3] 2021-08-23"},{"location":"CHANGELOG/#2472-2021-08-23","text":"Fix hardis:org:diagnose:legacyapi (display raw logs when CSV builder is crashing) , using papaparse instead of objects-to-csv package","title":"[2.47.2] 2021-08-23"},{"location":"CHANGELOG/#2471-2021-08-19","text":"Use --permissivediff to call sfdx-git-delta if the argument is available Manage env vars SKIP_PACKAGE_DEPLOY_ON_CHANGE and SKIP_PACKAGE_DEPLOY_ONCE . If set to true, related packageDeployOnChange.xml and packageDeployOnce.xml are ignored Define locally method to remove package.xml from another, to improve performances","title":"[2.47.1] 2021-08-19"},{"location":"CHANGELOG/#2470-2021-08-19","text":"New feature: use packageDeployOnChange.xml, to skip deployment of items that has not been updated since last update Create docker images with sfdx-cli@stable version alpha-sfdx-stable beta-sfdx-stable latest-sfdx-stable","title":"[2.47.0] 2021-08-19"},{"location":"CHANGELOG/#2460-2021-08-16","text":"Allow to run git delta command on local updates Update labels of hardis:data commands New technical command: hardis:work:ws , to call VsCode Extension refresh from CLI","title":"[2.46.0] 2021-08-16"},{"location":"CHANGELOG/#2450-2021-08-15","text":"Refactor hardis:org:diagnose:legacyapi with jsforce to handle more log entries Do not display git branch -v in logs","title":"[2.45.0] 2021-08-15"},{"location":"CHANGELOG/#2440-2021-08-14","text":"New command hardis:org:diagnose:legacyapi : Detect use of deprecated API versions in production org","title":"[2.44.0] 2021-08-14"},{"location":"CHANGELOG/#2431-2021-07-23","text":"Update deployTips Update json schema","title":"[2.43.1] 2021-07-23"},{"location":"CHANGELOG/#2430-2021-07-22","text":"Better split of elements during hardis:work:save Display elapsed time for long running commands","title":"[2.43.0] 2021-07-22"},{"location":"CHANGELOG/#2422-2021-07-20","text":"Use relative path for sfdmu data import/export","title":"[2.42.2] 2021-07-20"},{"location":"CHANGELOG/#2421-2021-07-19","text":"Fix data import & export commands when spaces in folder names","title":"[2.42.1] 2021-07-19"},{"location":"CHANGELOG/#2420-2021-07-12","text":"New command sfdx hardis:project:lint Update .sfdx-hardis.yml configuration JsonSchema","title":"[2.42.0] 2021-07-12"},{"location":"CHANGELOG/#2412-2021-07-12","text":"QuickFix case when title is not set (use first line of description)","title":"[2.41.2] 2021-07-12"},{"location":"CHANGELOG/#2411-2021-07-12","text":"Quickfix default mkdocs.yml","title":"[2.41.1] 2021-07-12"},{"location":"CHANGELOG/#2410-2021-07-12","text":"Add JSON Schema for .sfdx-hardis.yml configuration files Automatic SFDX Plugin documentation generation for any SFDX Plugin","title":"[2.41.0] 2021-07-12"},{"location":"CHANGELOG/#2400-2021-07-08","text":"hardis:scratch:create : Initialize data using SFDMU, if defined in .sfdx-hardis.json dataPackages property with importInScratchOrgs: true Example dataPackages: - dataPath: scripts/data/LightningSchedulerConfig importInScratchOrgs: true Propose to update or not default target git branch List target git branches if defined in .sfdx-hardis.json availableTargetBranches property hardis:scratch:delete : Propose only scratch orgs related to currently selected Dev Hub New command hardis:org:configure:data to initialize a SFDMU project, sfdx-hardis flavored Display data package label & description, from SFDMU folder config.json properties sfdxHardisLabel and sfdxHardisDescription hardis:org:data:import & hardis:org:data:import : Allow to select current org or another when running data import/export commands Display Dev Hub username when listing orgs for selection","title":"[2.40.0] 2021-07-08"},{"location":"CHANGELOG/#2311-2021-07-02","text":"hardis:scratch:delete : Display instanceUrl & last usage of scratch orgs displayed before deletion","title":"[2.31.1] 2021-07-02"},{"location":"CHANGELOG/#2310-2021-07-02","text":"New command hardis:scratch:delete to delete scratch orgs locally referenced.","title":"[2.31.0] 2021-07-02"},{"location":"CHANGELOG/#2301-2021-06-30","text":"hardis:org:connect : Propose user to open org in browser if not in CI","title":"[2.30.1] 2021-06-30"},{"location":"CHANGELOG/#2300-2021-06-30","text":"Update hardis:org:retrieve:packageconfig so it allows to select an org, and to update sfdx-hardis configuration","title":"[2.30.0] 2021-06-30"},{"location":"CHANGELOG/#2290-2021-06-29","text":"New command hardis:org:retrieve:sources:dx2 to assist call to force:source:retrieve using a package.xml file Improve hardis:project:generate:gitdelta by allowing to select commits from their description Use magenta to display config file updates","title":"[2.29.0] 2021-06-29"},{"location":"CHANGELOG/#2280-2021-06-23","text":"CI: Check Docker image security with trivy Avoid git error when development branch is updated","title":"[2.28.0] 2021-06-23"},{"location":"CHANGELOG/#2271-2021-06-21","text":"Fix CountryCode when updating scratch org user. Default FR - France, can be updated with config defaultCountry and defaultCountryCode in .sfdx-hardis.yml","title":"[2.27.1] 2021-06-21"},{"location":"CHANGELOG/#2270-2021-06-20","text":"Clean Lookup filters before force:source:push, then restore them and push again Manage gitRootFolderPrefix config property, in case the root of git repository is at a parent level than sfdx project root Allow to override separate deployments using config property separateDeploymentsConfig Set git config core.quotepath to false to manage special characters in git files / folders Run sfdx git delta at the root of the git repository Rename DeferSharingCalc permission set into SfdxHardisDeferSharingCalc New Deployment tips Contributing documentation","title":"[2.27.0] 2021-06-20"},{"location":"CHANGELOG/#2264-2021-06-18","text":"Do not write user config when current folder is empty","title":"[2.26.4] 2021-06-18"},{"location":"CHANGELOG/#2261-2021-06-17","text":"Take in account testLevel from .sfdx-hardis.yml in deployments","title":"[2.26.1] 2021-06-17"},{"location":"CHANGELOG/#2260-2021-06-16","text":"New command hardis:project:generate:gitdelta to generate the package.xml calculated between two commits New command hardis:org:connect to connect to an org without selecting it (can be used to refresh expired token) Propose choice to to skip .gitignore & .forceignore files auto-update Define triggerNotification on Command class to trigger MsTeams notifs Update org type selection message","title":"[2.26.0] 2021-06-16"},{"location":"CHANGELOG/#2253-2021-06-14","text":"Fix bug when selecting an org from outside a SFDX project folder","title":"[2.25.3] 2021-06-14"},{"location":"CHANGELOG/#2252-2021-06-14","text":"Refresh VsCode Sfdx Hardis UI when creating / loading a SFDX Project","title":"[2.25.2] 2021-06-14"},{"location":"CHANGELOG/#2251-2021-06-13","text":"Check if folder is a git repo before updating git config","title":"[2.25.1] 2021-06-13"},{"location":"CHANGELOG/#2250-2021-06-12","text":"New parameter keepmetadatatypes for hardis:org:retrieve:sources:dx Check dependencies Improve performances Check application dependencies (git,openssl)","title":"[2.25.0] 2021-06-12"},{"location":"CHANGELOG/#2240-2021-06-10","text":"New command hardis:org:purge:apexlog to purge all Apex Logs of selected org","title":"[2.24.0] 2021-06-10"},{"location":"CHANGELOG/#2230-2021-06-07","text":"Manage installation key for unlocked packages installation Deployment: manage --canmodify SFDMU argument (define sfdmuCanDeploy in sfdx-hardis branch config file)","title":"[2.23.0] 2021-06-07"},{"location":"CHANGELOG/#2220-2021-06-03","text":"New command hardis:project:clean:orgmissingitems : Remove elements that are not existing in target org (only in ReportType for now) hardis:project:clean:references : Remove cleaned items from package.xml files Externalization of method to select an org (+ reorder of list of displayed orgs)","title":"[2.22.0] 2021-06-03"},{"location":"CHANGELOG/#2210-2021-06-02","text":"hardis:project:clean:references: Improve performances for removing files hardis:scratch:create : Shorten scratch org auto-generated name Authenticate to an org: Request user to set alias if not provided Update default gitlab-ci.yml New method promptProfiles","title":"[2.21.0] 2021-06-02"},{"location":"CHANGELOG/#2203-2021-05-26","text":"Set prompt UI timeout to 2h instead of 5mn","title":"[2.20.3] 2021-05-26"},{"location":"CHANGELOG/#2202-2021-05-25","text":"Fix call to sfdmu (add --noprompt)","title":"[2.20.2] 2021-05-25"},{"location":"CHANGELOG/#2201-2021-05-23","text":"Fix scratch org listing","title":"[2.20.1] 2021-05-23"},{"location":"CHANGELOG/#2200-2021-05-21","text":"hardis:work:save : Prompt user to pull from scratch org or not before saving Do not update package.json anymore hardis:scratch:create : Fix reuse scratch org prompt","title":"[2.20.0] 2021-05-21"},{"location":"CHANGELOG/#2190-2021-05-20","text":"Detect when auth token is expired More deploy tips Clean ProductRequest items","title":"[2.19.0] 2021-05-20"},{"location":"CHANGELOG/#2180-2021-05-18","text":"New commands hardis:org:retrieve:packageconfig : Retrieves .sfdx-hardis.yml property installedPackaged from an existing org hardis:project:clean:emptyitems : Delete empty items from SFD project hardis:project:clean:hiddenitems : Delete hidden items (from managed packages) from SFDX project Update default values for JWT connected app creation Manage --targetusername to be taken in account for all sfdx hardis commands More deployment tips hardis:project:clean:manageditems: New --namespace argument org:retrieve:source:dx : Do not erase .gitignore, .forceignore , README.md and project-scratch-def is already existing locally Remove shape temp folder to avoid a force:org:create bug","title":"[2.18.0] 2021-05-18"},{"location":"CHANGELOG/#2173-2021-05-18","text":"Fix .gitignore automatic update constraint","title":"[2.17.3] 2021-05-18"},{"location":"CHANGELOG/#2172-2021-05-10","text":"Default init scratch org using push and not deploy QuickFix mergeRequest links local storage","title":"[2.17.2] 2021-05-10"},{"location":"CHANGELOG/#2170-2021-05-10","text":"New command hardis:project:convert:profilestopermsets to convert all profiles into permission sets hardis:scratch:create : Fix permission set auto assignment when creating a scratch org (use property initPermissionSets in .sfdx-hardis.yml)","title":"[2.17.0] 2021-05-10"},{"location":"CHANGELOG/#2161-2021-05-09","text":"hardis:work:save : Fix storage in config file of Merge Request info Update deploy tips","title":"[2.16.1] 2021-05-09"},{"location":"CHANGELOG/#2160-2021-05-08","text":"hardis:project:clean:manageditems : Clean SFDX project from managed classes hardis:project:clean:retrievefolders: Clean/Complete SFDX project with missing folders (dashboard,email,reports) hardis:project:clean:standarditems : Clean SFDX project from objects with no custom within More deployment error tips New parameter websocket for all commands Indicating in logs when deployment is a simulation","title":"[2.16.0] 2021-05-08"},{"location":"CHANGELOG/#2151-2021-05-02","text":"QuickFix hardis:work:save","title":"[2.15.1] 2021-05-02"},{"location":"CHANGELOG/#2150-2021-04-30","text":"hardis:project:clean:references : New cleaning module dashboards removing reference to users in Dashboards sources","title":"[2.15.0] 2021-04-30"},{"location":"CHANGELOG/#2140-2021-04-29","text":"Manage manifest/packageDeployOnce.xml : all its items that are already present in target org will not be deployed again","title":"[2.14.0] 2021-04-29"},{"location":"CHANGELOG/#2134-2021-04-26","text":"New deploy tips Do not update local files when calling configure commands hardis:work:save : Fix branch update issue","title":"[2.13.4] 2021-04-26"},{"location":"CHANGELOG/#2133-2021-04-23","text":"Remove PMD rule : CyclomaticComplexity","title":"[2.13.3] 2021-04-23"},{"location":"CHANGELOG/#2132-2021-04-22","text":"QuickFix hardis version:promote --auto","title":"[2.13.2] 2021-04-22"},{"location":"CHANGELOG/#2130-2021-04-21","text":"hardis:work:save New parameter --nogit for expert developers who want to manage git operations themselves New parameter --noclean for expert developers who want to manage clean operations themselves Update default Mega-Linter config","title":"[2.13.0] 2021-04-21"},{"location":"CHANGELOG/#2120-2021-04-19","text":"New variable CI_DEPLOY_QUICK_ACTIONS_DUMMY set to \"true\" in CI variables when there are QuickActions dependent of Flows that are later in publication plan then set again to \"false\" and the deployment will pass :) hardis:project:clean:references : now deletes obsolete objects and objectTranslations hardis:work:save : More categories in interactive git add Improve authentication check performances New command hardis:config:get to return all config for project, branch or user New deployment errors tips","title":"[2.12.0] 2021-04-19"},{"location":"CHANGELOG/#2110-2021-04-15","text":"Delete scratch org when its initialization has failed during CI Clean obsolete object fields and objectTranslations","title":"[2.11.0] 2021-04-15"},{"location":"CHANGELOG/#2104-2021-04-15","text":"Provide password to user when creating new scratch org Update CI default config to allow to not delete scratch orgs (define CI_DELETE_SCRATCH_ORG: \"true\" in gitlab-ci-config.yml) New deploy tips: record type not found, picklist value not found","title":"[2.10.4] 2021-04-15"},{"location":"CHANGELOG/#2103-2021-04-14","text":"Allow advanced user to bypass auth check (set skipAuthCheck:true in config/user/***.sfdx-hardis.yml) Optimize check of force:config:set restDeploy: false hardis version:create : Store package installation password in project config + fixes","title":"[2.10.3] 2021-04-14"},{"location":"CHANGELOG/#2102-2021-04-14","text":"hardis:work:refresh : Make sure the user saved his work (commit) before merging another branch in current branch","title":"[2.10.2] 2021-04-14"},{"location":"CHANGELOG/#2101-2021-04-11","text":"hardis:org:test:apex : Fix regex to new Apex Test results stdout format","title":"[2.10.1] 2021-04-11"},{"location":"CHANGELOG/#2100-2021-04-11","text":"hardis:work:save : Automatic generation of split package.xml and deploymentPlan in .sfdx-hardis.yml hardis:work:save : Propose to export data when saving Remove duplicates from .gitignore and .forceignore Add chromium in dockerfile","title":"[2.10.0] 2021-04-11"},{"location":"CHANGELOG/#294-2021-04-09","text":"Fix refresh Update project cleaning references","title":"[2.9.4] 2021-04-09"},{"location":"CHANGELOG/#293-2021-04-08","text":"hardis:work:refresh : allow to refresh from another branch","title":"[2.9.3] 2021-04-08"},{"location":"CHANGELOG/#292-2021-04-08","text":"hardis:work:save : Fix issue when trying to stage & commit ignored files after project cleaning hardis:project:configure:auth Improve error message when unable to upload ConnectedApp on production environment Update default Apex PMD ruleset Use replace and not replaceAll for node14 compatibility","title":"[2.9.2] 2021-04-08"},{"location":"CHANGELOG/#291-2021-04-07","text":"Clean git reset before save Clean git stash before new task","title":"[2.9.1] 2021-04-07"},{"location":"CHANGELOG/#290-2021-04-06","text":"New command hardis:project:create Refactor project cleaning and allow to use external config files (destructiveChanges-like.xml or json) Fixes hardis:work:save : Create destructiveChanges.xml if not existing hardis:work:save : call forceSourcePull method to propose to update .forceignore if errors are found hardis:project:configure:auth: call mdapi:deploy with RunLocalTests to manage production environments authentication: auth only to devHub if --devhub sent Disable spinner for restDeploy check","title":"[2.9.0] 2021-04-06"},{"location":"CHANGELOG/#285-2021-04-06","text":"QuickFix question icon","title":"[2.8.5] 2021-04-06"},{"location":"CHANGELOG/#284-2021-04-06","text":"Allow to skip pull before save New deployTip: code coverage items with 0% Fix DevHub auth when credential out of date Use latest sfdx-cli package Init git config only if we are not in CI","title":"[2.8.4] 2021-04-06"},{"location":"CHANGELOG/#283-2021-04-01","text":"Fix package creation When using VsCode UI via WebSocket, display selected values in console logs","title":"[2.8.3] 2021-04-01"},{"location":"CHANGELOG/#282-2021-04-01","text":"hardis:work:save : reset ongoing merge if existing Fix git reset call","title":"[2.8.2] 2021-04-01"},{"location":"CHANGELOG/#280-2021-03-31","text":"Define git user.name and user.email if not set Define VsCode as git merge/diff tool if none is defined Unstash changes (git reset) at the beginning of hardis:work:save Deploy destructive changes after real deployment hardis:project:clean:references now works also to remove references to content of manifest/destructiveChanges.xml hardis:work:save : Clean sfdx project while saving it Factorize temp directory creation","title":"[2.8.0] 2021-03-31"},{"location":"CHANGELOG/#272-2021-03-30","text":"Check user is sure to want to reuse an existing scratch org Fix hardis:work:refresh","title":"[2.7.2] 2021-03-30"},{"location":"CHANGELOG/#271-2021-03-29","text":"Fix auto-fix of .gitignore and .forceignore Propose to auto-update .force ignore when there is a pull issue","title":"[2.7.1] 2021-03-29"},{"location":"CHANGELOG/#270-2021-03-29","text":"Communicate with VsCode SFDX Hardis extension via WebSocket if server is found Send user input prompts to VsCode UI if WebSocket server found Send refreshStatus notifications when context is updated Arrange some messages for better display on UI","title":"[2.7.0] 2021-03-29"},{"location":"CHANGELOG/#260-2021-03-28","text":"New command hardis:project:clean:references to clean SFDX project from data.com license references hardis:scratch:create : Load sfdmu workspace scripts/data/ScratchInit if existing in , to initialize scratch org data","title":"[2.6.0] 2021-03-28"},{"location":"CHANGELOG/#250-2021-03-28","text":"New command hardis:source:push New command hardis:source:pull Various mini-fixes Move deploymentPlan.json within .sfdx-hardis.json Retry management for execCommand function. ex: retry: {retryDelay: 30,retryStringConstraint: 'some string present in output', retryMaxAttempts: 5}","title":"[2.5.0] 2021-03-28"},{"location":"CHANGELOG/#240-2021-03-27","text":"Add sfdmu & sfdx-git-delta in dependencies & Dockerfile Import data with sfdmu Manage data import steps in deploymentPlan.json New command hardis:org:data:export New command hardis:org:data:import","title":"[2.4.0] 2021-03-27"},{"location":"CHANGELOG/#230-2021-03-26","text":"hardis:work:save: Do not git add manifest files when they have not been updated Select type of org to connect: enhance label Multi-Select default to 9999 items displayed Display tips about deployment failures when they happen Create scratch org: When DeferSharingCalc in features, suspend and resume sharing calc during force:source:push Allow to define a file manifest/deploymentPlan.json to split the deployment into separate package.xml files Example: { \"packages\": [ { \"label\": \"SharingRulesAccount\", \"packageXmlFile\": \"splits/packageXmlSharingRulesAccount.xml\", \"order\": 10, \"waitAfter\": 60 }, { \"label\": \"SharingRulesVisit__c\", \"packageXmlFile\": \"splits/packageXmlSharingRulesAccountVisit__c.xml\", \"order\": 10 } ] }","title":"[2.3.0] 2021-03-26"},{"location":"CHANGELOG/#221-2021-03-23","text":"QuickFix 2.2.1 Use RunLocalTests when deploying ConnectedApp metadata to production org","title":"[2.2.1] 2021-03-23"},{"location":"CHANGELOG/#220-2021-03-23","text":"Enhance security by encrypting SSH private key","title":"[2.2.0] 2021-03-23"},{"location":"CHANGELOG/#217-2021-03-22","text":"More categories for Interactive Git Add (Aura,LWC, Tech Config) Auto-update .forceignore Fix hardis:org:test:apex","title":"[2.1.7] 2021-03-22"},{"location":"CHANGELOG/#216-2021-03-20","text":"Fix org authentication check","title":"[2.1.6] 2021-03-20"},{"location":"CHANGELOG/#215-2021-03-19","text":"Unlimited list of items displayed during interactive git add Uniformize prompts to user","title":"[2.1.5] 2021-03-19"},{"location":"CHANGELOG/#214-2021-03-17","text":"Deploy with --ignorewarnings","title":"[2.1.4] 2021-03-17"},{"location":"CHANGELOG/#213-2021-03-17","text":"Fix hardis:retrieve:sources:dx when not in a DX project Fix deloyment of Connected App in production Display more options by page during interactive git add Sort files to git add by group and manage preselection","title":"[2.1.3] 2021-03-17"},{"location":"CHANGELOG/#212-2021-03-14","text":"Improve package installation Allow to install a package not listed in sfdx-hardis Allow to configure automatic installation during deployments, or not Allow to configure automatic installation during scratch org initialisation, or not Reformat strings when no spaces are allowed in a user input","title":"[2.1.2] 2021-03-14"},{"location":"CHANGELOG/#211-2021-03-12","text":"Fix hardis:scratch:create when initDataRequests","title":"[2.1.1] 2021-03-12"},{"location":"CHANGELOG/#210-2021-03-10","text":"New command hardis:data:tree:export scratch:create : Import init data using .sfdx-hardis.yml initDataRequests property scratch:create : Assign to permission set (or PS groups) using .sfdx-hardis.yml initPermissionSets property","title":"[2.1.0] 2021-03-10"},{"location":"CHANGELOG/#200-2021-03-09","text":"New command hardis create to create Managed and Unlocked packages Migrate from tslint to eslint Fix dependencies hell Fix hardis:org:purge:flow with new result format (#49)","title":"[2.0.0] 2021-03-09"},{"location":"CHANGELOG/#161-2021-03-09","text":"Update sfdx-project.json when installing a package Refresh env & scratch org if same scratch org is reused Update default files for CI & monitoring projects Do not deploy packages from hardis:project:deploy:sources:dx when we are in --check mode ! Better output display for hardis:org:test:apex","title":"[1.6.1] 2021-03-09"},{"location":"CHANGELOG/#160-2021-03-08","text":"New package commands hardis install hardis version:create hardis version:list","title":"[1.6.0] - 2021-03-08"},{"location":"CHANGELOG/#151-2021-03-07","text":"Use shared Mega-Linter configuration","title":"[1.5.1] - 2021-03-07"},{"location":"CHANGELOG/#150-2021-03-05","text":"New command hardis:org:select New command hardis:work:resetselection hardis:work:save : Upgrade package.xml and destructiveChanges.xml from git diff Improve console logging of git operations","title":"[1.5.0] 2021-03-05"},{"location":"CHANGELOG/#141-2021-03-03","text":"Update default gitlab-ci.yml rename commands: hardis:work:new hardis:work:refresh hardis:work:save cosmetic enhancements","title":"[1.4.1] 2021-03-03"},{"location":"CHANGELOG/#140-2021-02-28","text":"New work commands to make easier non technical users to use Hardis CI hardis:work:task:new hardis:work:task:save hardis:work:task:refresh","title":"[1.4.0] 2021-02-28"},{"location":"CHANGELOG/#136-2021-02-26","text":"Quick fix hardis:org:configure:monitoring + colors","title":"[1.3.6] 2021-02-26"},{"location":"CHANGELOG/#135-2021-02-26","text":"Workaround when --soapdeploy argument is not available","title":"[1.3.5] 2021-02-26"},{"location":"CHANGELOG/#134-2021-02-25","text":"Reuse msTeamsWebhookUrl during sfdx:org:configure:monitoring prompts Allow to override CONFIG_BRANCH to get forced .sfdx.hardis.BRANCH.yml","title":"[1.3.4] 2021-02-25"},{"location":"CHANGELOG/#133-2021-02-24","text":"Soap option for force:mdapi:deploy","title":"[1.3.3] 2021-02-24"},{"location":"CHANGELOG/#132-2021-02-24","text":"Guide user to assign rights to Connected App in sfdx:org:configure:monitoring","title":"[1.3.2] 2021-02-24"},{"location":"CHANGELOG/#131-2021-02-24","text":"Manage git clone & push for sfdx:org:configure:monitoring Manage upload of connected app metadata for sfdx:org:configure:monitoring","title":"[1.3.1] 2021-02-24"},{"location":"CHANGELOG/#130-2021-02-23","text":"","title":"[1.3.0] 2021-02-23"},{"location":"CHANGELOG/#30-remove-use-of-sfdx-node","text":"New command sfdx:project:deploy:sources:metadata Generate .cache folder only when necessary New command sfdx:org:configure:monitoring","title":"30: Remove use of sfdx-node"},{"location":"CHANGELOG/#120-2021-02-21","text":"","title":"[1.2.0] 2021-02-21"},{"location":"CHANGELOG/#24-change-the-way-of-listing-installed-packages","text":"","title":"24: Change the way of listing installed packages"},{"location":"CHANGELOG/#26-new-command-sfdx-hardisprojectconfiguredeployments-to-configure-connected-app","text":"","title":"26: New command sfdx hardis:project:configure:deployments to configure Connected app"},{"location":"CHANGELOG/#27-check-in-manifest-folder-for-packagexml","text":"Auto-generate alpha version of plugin package and associated docker image when publishing from branch alpha Manage cache storage for CI dependent jobs (cache, artifacts) .cache/sfdx-hardis/.sfdx .sfdx config/user Improve org authentication New command hardis:org:test Test org coverage and fail if < 75% Installed package management Factorize method Install packages during hardis:project:deploy:sources:dx Allow to reuse scratch org if previous creation failed. Force using --forcenew Improve auto-update of local project sfdx-hardis files Improve console logs Allow to store DevHubSfdxClientId in user sfdx-hardis.yml ( in /user folder)","title":"27: Check in manifest folder for package.xml"},{"location":"CHANGELOG/#113-2021-02-17","text":"Fix cases when directory is not git","title":"[1.1.3] 2021-02-17"},{"location":"CHANGELOG/#110-2021-02-17","text":"New command hardis:project:deploy:sources:dx (alpha) New command hardis:project:audit:apiversion","title":"[1.1.0] 2021-02-17"},{"location":"CHANGELOG/#101-2021-02-15","text":"Fix auth:login to avoid DevHub auth when not necessary","title":"[1.0.1] 2021-02-15"},{"location":"CHANGELOG/#100-2021-02-15","text":"New command hardis:scratch:create Advanced project initialization using --shape argument for sfdx hardis:org:retrieve:sources:dx Automatic generation of .sfdx-hardis*.yml configuration files Automatic update of project package.json to add sfdx-hardis utilities","title":"[1.0.0] 2021-02-15"},{"location":"CHANGELOG/#0510-2021-02-12","text":"Allow purges to fail without making sfdx command fail","title":"[0.5.10] 2021-02-12"},{"location":"CHANGELOG/#055-2021-02-10","text":"Check if installed sfdx-hardis is the latest version, else display a message to advise the user to upgrade to latest","title":"[0.5.5] 2021-02-10"},{"location":"CHANGELOG/#054-2021-02-09","text":"Fixes: hardis:org:purge:flow : Do not crash in case the Flow is not deletable","title":"[0.5.4] 2021-02-09"},{"location":"CHANGELOG/#052-2021-02-07","text":"Fixes: --no-prompt argument is ignored","title":"[0.5.2] 2021-02-07"},{"location":"CHANGELOG/#051-2021-02-04","text":"Fixes: Add more items to metadatas not convertible to sfdx sources Issue when using --sandbox argument","title":"[0.5.1] 2021-02-04"},{"location":"CHANGELOG/#050-2021-02-03","text":"New command hardis:project:audit:callincallout : Audit sfdx project (or metadatas) sources to list all CallIns and CallOuts from Apex / Triggers code parsing New command hardis:project:audit:remotesites : Audit sfdx project (or metadatas) sources to list all remote site settings of an org","title":"[0.5.0] 2021-02-03"},{"location":"CHANGELOG/#041-2021-02-01","text":"Fix: Manage Hooks only from hardis namespace commands","title":"[0.4.1] 2021-02-01"},{"location":"CHANGELOG/#040-2021-02-01","text":"Send MS Teams notifications if set environment variable MS_TEAMS_WEBHOOK_URL or msTeamsWebhookUrl in .sfdx-hardis.yml","title":"[0.4.0] 2021-02-01"},{"location":"CHANGELOG/#031-2021-01-31","text":"Always regenerate full package.xml before retrieving metadatas","title":"[0.3.1] 2021-01-31"},{"location":"CHANGELOG/#030-2021-01-31","text":"Build and upload nvuillam/sfdx-hardis docker image when releasing a new version New command force:auth:login + manage login using JWT for CI","title":"[0.3.0] 2021-01-31"},{"location":"CHANGELOG/#020-2021-01-31","text":"New command sfdx hardis:org:retrieve:sources:metadata : Retrieve all metadata from an org","title":"[0.2.0] 2021-01-31"},{"location":"CHANGELOG/#011-2021-01-31","text":"New command sfdx hardis:org:retrieve:sources:dx : Create SFDX project from remote org","title":"[0.1.1] 2021-01-31"},{"location":"CHANGELOG/#001-2021-01-26","text":"New command sfdx hardis:org:purge:flow : Purge Obsolete flow versions to avoid the 50 max versions limit","title":"[0.0.1] 2021-01-26"},{"location":"commands/","text":"Commands hardis:auth Command Title hardis:auth:login Login hardis:cache Command Title hardis:cache:clear Clear sfdx-hardis cache hardis:config Command Title hardis:config:get Deploy metadata sources to org hardis:doc Command Title hardis:doc:extract:permsetgroups Generate project documentation hardis:doc:plugin:generate Generate SFDX Plugin Documentation hardis:lint Command Title hardis:lint:access check permission access hardis:mdapi Command Title hardis:mdapi:deploy sfdx-hardis wrapper for sfdx force:mdapi:deploy that displays tips to solve deployment errors. hardis:misc Command Title hardis:misc:toml2csv TOML to CSV hardis:org Command Title hardis:org:configure:data Configure Data project hardis:org:configure:files Configure File export project hardis:org:configure:monitoring Configure org monitoring hardis:org:connect Connect to an org hardis:org:create Create sandbox org hardis:org:data:delete Delete data hardis:org:data:export Export data hardis:org:data:import Import data hardis:org:diagnose:legacyapi Check for legacy API use hardis:org:files:export Export files hardis:org:fix:listviewmine Fix listviews with hardis:org:generate:packagexmlfull Generate Full Org package.xml hardis:org:purge:apexlog Purge Apex Logs hardis:org:purge:flow Purge Flow versions hardis:org:retrieve:packageconfig Retrieve package configuration from an org hardis:org:retrieve:sources:analytics Retrieve CRM Analytics configuration from an org hardis:org:retrieve:sources:dx Retrieve sfdx sources from org hardis:org:retrieve:sources:dx2 Retrieve sfdx sources from org (2) hardis:org:retrieve:sources:metadata Retrieve sfdx sources from org hardis:org:retrieve:sources:retrofit Retrofit changes from an org hardis:org:select Select org hardis:org:test:apex Run apex tests hardis:org:user:activateinvalid Reactivate sandbox invalid users hardis:org:user:freeze Freeze user logins hardis:org:user:unfreeze Unfreeze user logins hardis:package Command Title hardis create Create a new package hardis install Install packages in an org hardis mergexml Merge package.xml files hardis version:create Create a new version of a package hardis version:list Create a new version of a package hardis version:promote Promote new versions of package(s) hardis:project Command Title hardis:project:audit:apiversion Audit Metadatas API Version hardis:project:audit:callincallout Audit CallIns and CallOuts hardis:project:audit:duplicatefiles Find duplicate sfdx files hardis:project:audit:remotesites Audit Remote Sites hardis:project:clean:emptyitems Clean retrieved empty items in dx sources hardis:project:clean:hiddenitems Clean retrieved hidden items in dx sources hardis:project:clean:listviews Replace Mine by Everything in ListViews hardis:project:clean:manageditems Clean retrieved managed items in dx sources hardis:project:clean:minimizeprofiles Clean profiles of Permission Set attributes hardis:project:clean:orgmissingitems Clean SFDX items using target org definition hardis:project:clean:references Clean references in dx sources hardis:project:clean:retrievefolders Retrieve dashboards, documents and report folders in DX sources hardis:project:clean:standarditems Clean retrieved standard items in dx sources hardis:project:clean:systemdebug Clean System debug hardis:project:clean:xml Clean retrieved empty items in dx sources hardis:project:configure:auth Configure authentication hardis:project:convert:profilestopermsets Convert Profiles into Permission Sets hardis:project:create Login hardis:project:deploy:sources:dx Deploy sfdx sources to org hardis:project:deploy:sources:metadata Deploy metadata sources to org hardis:project:fix:v53flexipages Fix flexipages for v53 hardis:project:generate:gitdelta Generate Git Delta hardis:project:lint Lint hardis:project:metadata:findduplicates XML duplicate values finder hardis:scratch Command Title hardis:scratch:create Create and initialize scratch org hardis:scratch:delete Delete scratch orgs(s) hardis:scratch:pool:create Create and configure scratch org pool hardis:scratch:pool:localauth Authenticate locally to scratch org pool hardis:scratch:pool:refresh Refresh scratch org pool hardis:scratch:pool:reset Reset scratch org pool hardis:scratch:pool:view View scratch org pool info hardis:scratch:pull Scratch PULL hardis:scratch:push Scratch PUSH hardis:source Command Title hardis:source:deploy sfdx-hardis wrapper for sfdx force:source:deploy that displays tips to solve deployment errors. hardis:source:push sfdx-hardis wrapper for sfdx force:source:push that displays tips to solve deployment errors. hardis:source:retrieve sfdx-hardis wrapper for sfdx force:source:retrieve hardis:work Command Title hardis:work:new New work task hardis:work:refresh Refresh work task hardis:work:resetselection Select again hardis:work:save Save work task hardis:work:ws WebSocket operations","title":"All commands"},{"location":"commands/#commands","text":"","title":"Commands"},{"location":"commands/#hardisauth","text":"Command Title hardis:auth:login Login","title":"hardis:auth"},{"location":"commands/#hardiscache","text":"Command Title hardis:cache:clear Clear sfdx-hardis cache","title":"hardis:cache"},{"location":"commands/#hardisconfig","text":"Command Title hardis:config:get Deploy metadata sources to org","title":"hardis:config"},{"location":"commands/#hardisdoc","text":"Command Title hardis:doc:extract:permsetgroups Generate project documentation hardis:doc:plugin:generate Generate SFDX Plugin Documentation","title":"hardis:doc"},{"location":"commands/#hardislint","text":"Command Title hardis:lint:access check permission access","title":"hardis:lint"},{"location":"commands/#hardismdapi","text":"Command Title hardis:mdapi:deploy sfdx-hardis wrapper for sfdx force:mdapi:deploy that displays tips to solve deployment errors.","title":"hardis:mdapi"},{"location":"commands/#hardismisc","text":"Command Title hardis:misc:toml2csv TOML to CSV","title":"hardis:misc"},{"location":"commands/#hardisorg","text":"Command Title hardis:org:configure:data Configure Data project hardis:org:configure:files Configure File export project hardis:org:configure:monitoring Configure org monitoring hardis:org:connect Connect to an org hardis:org:create Create sandbox org hardis:org:data:delete Delete data hardis:org:data:export Export data hardis:org:data:import Import data hardis:org:diagnose:legacyapi Check for legacy API use hardis:org:files:export Export files hardis:org:fix:listviewmine Fix listviews with hardis:org:generate:packagexmlfull Generate Full Org package.xml hardis:org:purge:apexlog Purge Apex Logs hardis:org:purge:flow Purge Flow versions hardis:org:retrieve:packageconfig Retrieve package configuration from an org hardis:org:retrieve:sources:analytics Retrieve CRM Analytics configuration from an org hardis:org:retrieve:sources:dx Retrieve sfdx sources from org hardis:org:retrieve:sources:dx2 Retrieve sfdx sources from org (2) hardis:org:retrieve:sources:metadata Retrieve sfdx sources from org hardis:org:retrieve:sources:retrofit Retrofit changes from an org hardis:org:select Select org hardis:org:test:apex Run apex tests hardis:org:user:activateinvalid Reactivate sandbox invalid users hardis:org:user:freeze Freeze user logins hardis:org:user:unfreeze Unfreeze user logins","title":"hardis:org"},{"location":"commands/#hardispackage","text":"Command Title hardis create Create a new package hardis install Install packages in an org hardis mergexml Merge package.xml files hardis version:create Create a new version of a package hardis version:list Create a new version of a package hardis version:promote Promote new versions of package(s)","title":"hardis:package"},{"location":"commands/#hardisproject","text":"Command Title hardis:project:audit:apiversion Audit Metadatas API Version hardis:project:audit:callincallout Audit CallIns and CallOuts hardis:project:audit:duplicatefiles Find duplicate sfdx files hardis:project:audit:remotesites Audit Remote Sites hardis:project:clean:emptyitems Clean retrieved empty items in dx sources hardis:project:clean:hiddenitems Clean retrieved hidden items in dx sources hardis:project:clean:listviews Replace Mine by Everything in ListViews hardis:project:clean:manageditems Clean retrieved managed items in dx sources hardis:project:clean:minimizeprofiles Clean profiles of Permission Set attributes hardis:project:clean:orgmissingitems Clean SFDX items using target org definition hardis:project:clean:references Clean references in dx sources hardis:project:clean:retrievefolders Retrieve dashboards, documents and report folders in DX sources hardis:project:clean:standarditems Clean retrieved standard items in dx sources hardis:project:clean:systemdebug Clean System debug hardis:project:clean:xml Clean retrieved empty items in dx sources hardis:project:configure:auth Configure authentication hardis:project:convert:profilestopermsets Convert Profiles into Permission Sets hardis:project:create Login hardis:project:deploy:sources:dx Deploy sfdx sources to org hardis:project:deploy:sources:metadata Deploy metadata sources to org hardis:project:fix:v53flexipages Fix flexipages for v53 hardis:project:generate:gitdelta Generate Git Delta hardis:project:lint Lint hardis:project:metadata:findduplicates XML duplicate values finder","title":"hardis:project"},{"location":"commands/#hardisscratch","text":"Command Title hardis:scratch:create Create and initialize scratch org hardis:scratch:delete Delete scratch orgs(s) hardis:scratch:pool:create Create and configure scratch org pool hardis:scratch:pool:localauth Authenticate locally to scratch org pool hardis:scratch:pool:refresh Refresh scratch org pool hardis:scratch:pool:reset Reset scratch org pool hardis:scratch:pool:view View scratch org pool info hardis:scratch:pull Scratch PULL hardis:scratch:push Scratch PUSH","title":"hardis:scratch"},{"location":"commands/#hardissource","text":"Command Title hardis:source:deploy sfdx-hardis wrapper for sfdx force:source:deploy that displays tips to solve deployment errors. hardis:source:push sfdx-hardis wrapper for sfdx force:source:push that displays tips to solve deployment errors. hardis:source:retrieve sfdx-hardis wrapper for sfdx force:source:retrieve","title":"hardis:source"},{"location":"commands/#hardiswork","text":"Command Title hardis:work:new New work task hardis:work:refresh Refresh work task hardis:work:resetselection Select again hardis:work:save Save work task hardis:work:ws WebSocket operations","title":"hardis:work"},{"location":"deployTips/","text":"Salesforce deployment errors tips This page summarizes all errors that can be detected by sfdx-hardis wrapper commands sfdx command sfdx-hardis wrapper command sfdx force:source:deploy sfdx hardis:source:deploy sfdx force:source:push sfdx hardis:source:push sfdx force:mdapi:deploy sfdx hardis:mdapi:deploy You can also use this function on a sfdx-hardis Salesforce CI/CD project If you see a deployment error which is not here yet, please add it in this file :) Example: API Version error Error (.*) The (.*) apiVersion can't be \"([0-9]+)\" Resolution tip {1} metadata has probably been created/updated in a sandbox already upgraded to next platform version (ex: Sandbox in Summer'23 and Production in Spring'23) - First, try to update the api version in the XML of {1} metadata file (decrement the number in <apiVersion>{3}.0</apiVersion>) - If it still doesn't work because the metadata structure has changed between version, you may try a force:source:retrieve of the metadata by forcing --apiversion at the end of the command. Allow deployment with pending Apex Jobs You can bypass this error by allowing deployments with Apex jobs in the Deployment Settings page in Setup. Resolution tip Go to target org, in Setup -> Deployment Settings -> Activate option \"Allow deployments of components when corresponding Apex jobs are pending or in progress.\" Can not change field type to a formula field Error (.*) Cannot update a field from a Formula to something else Resolution tip You need to manually delete or rename the field in the target org to allow the deployment to pass - First, try to manually delete field {1} in the target org - if you can't delete {1}, rename it into {1}_ToDel, then once the deployment done, delete {1}_ToDel Can not change type due to existing data Error (.*) Cannot change type due to existing data Resolution tip It is usually not recommended to change types of fields, but if it's really necessary you can: - Manually change the type of {1} in the target org - If you can't manually change the type: - you may modify the dependencies (Formulas, Flows...) using {1}, so they don't use this field - you can also delete dependencies (Formulas, Flows...) using {1}, but make sure they are deployed again later - More help: https://help.salesforce.com/s/articleView?id=000327186&type=1 Can not change field type with picklist Error (.*) Cannot change which global value set this picklist uses Resolution tip You probably updated the type of field {1}, and Salesforce does not allows that with deployments. You can: - Try to manually change the type of {1} directly in target org, but it may not be technically possible - Delete field {1} in target org: it will be recreated after deployment (but you will loose data on existing records, so be careful if your target is a production org) - Create another field with desired type and manage data recovery if the target is a production org Can not delete custom field This (.*) is referenced elsewhere in salesforce.com Le champ personnalis\u00e9 (.*) est utilis\u00e9 dans (.*) Resolution tip Custom field {1} can not be deleted because it is used elsewhere. Remove its references ans try again THIS MAY BE A FALSE POSITIVE if you are just testing the deployment, as destructiveChanges are deployed separately from updated items deployment check Can not delete record type Error (.*) Cannot delete record type through API Resolution tip You need to manually delete record type {1} in target org - Edit record type {1}, uncheck \"Active\" - Delete record type {1} Can not find folder Error (.*) Cannot find folder:(.*) Resolution tip Folder {2} is missing. - If folder {2} is existing in sources, add it in related package.xml - If folder {2} is not existing in DX sources, please use sfdx hardis:project:clean:retrievefolders to retrieve it - If both previous solutions did not work, go create manually folder {2} in target org Can not find user Error (.*) Cannot find a user that matches any of the following usernames Resolution tip You made reference to username(s) in {1}, and those users probably do not exist in target org. - Do not use named users, but user public groups for assignments -> https://help.salesforce.com/s/articleView?id=sf.creating_and_editing_groups.htm&type=5 - or Create matching user(s) in the target deployment org - or Remove the XML part referring to hardcoded usernames Example of XML you have to remove in {1}: <folderShares> <accessLevel>Manage</accessLevel> <sharedTo>nicolas.vuillamy@hardis-scratch-po-tgci-root-develop_20220412_0604.com</sharedTo> <sharedToType>User</sharedToType> </folderShares> Can not find user (2) Error (.*) In field: (.*) - no User named (.*) found Resolution tip You made reference to username {3} in {1}, and it probably does not exist in the target org. - Do not use named users, but user public groups for assignments -> https://help.salesforce.com/s/articleView?id=sf.creating_and_editing_groups.htm&type=5 - or Create matching user {3} in the target deployment org - or open {1} metadata and remove the XML part referring to hardcoded username {3} Cannot update a field to a Summary from something else Error (.*) Cannot update a field to a (.*) from something else Resolution tip You probably updated the type of field {1} to type {2}, and Salesforce does not allows that with deployments. You can: - Try to manually change the type of {1} directly in target org, but it may not be technically possible - Delete field {1} in target org: it will be recreated after deployment (but you will loose data on existing records, so be careful if your target is a production org) - Create another field with desired type and manage data recovery if the target is a production org Custom object not found Error (.*) In field: field - no CustomObject named (.*) found Resolution tip A reference to a custom object {2} is not found in {1}: - If you renamed the custom object, do a search/replace in sources with previous object name and new object name - If you deleted the custom object, or if you don't want to deploy it, do a search on the custom object name, and remove XML elements referencing it - If the object should exist, make sure it is in force-app/main/default/objects and that the object name is in manifest/package.xml in CustomObject section You may also have a look to command sfdx hardis:project:clean:references Custom field not found Error (.*) In field: (.*) - no CustomField named (.*)\\.(.*) found Resolution tip A reference to a custom field {3}.{4} is not found in {1}: - If you renamed {3}.{4}, do a search/replace in {1} with previous field name and {4} - If you deleted {3}.{4}, or if you don't want to deploy it, do a search on {4} in all sources, and remove all XML elements referring to {3}.{4} (except in destructiveChanges.xml) - If {3}.{4} should exist, make sure it is in force-app/main/default/objects/{3}/fields and that {3}.{4} is in manifest/package.xml in CustomField section - If {3}.{4} is standard, the error is because {3}.{4} is not available in the org you are trying to deploy to. You can: - Remove the reference to {4} in the XML of {1} ( maybe sfdx hardis:project:clean:references can clean automatically for you ! ) - Activate the required features/license in the target org Mandatory custom field can not be in a profile/permission set Error (.*) You cannot deploy to a required field: (.*) Resolution tip - Search for {2} in source file XML of {1}, then remove the entries matching the results Example of element to delete: <fieldPermissions> <editable>true</editable> <field>{2}</field> <readable>true</readable> </fieldPermissions> Custom metadata entry not found Error (.*) In field: (.*) - no CustomMetadata named (.*) found Resolution tip A reference to a custom metadata {3} of type {2} is not found in {1}: - Are you sure you deployed {3} ? - If you use a package.xml, is {3} present within type CustomMetadata ? Dependent class is invalid and needs recompilation Error (.*) Dependent class is invalid and needs recompilation Resolution tip Solve the other errors and this one will disappear ! Duplicate value Platform Action Id List duplicate value found: PlatformActionListId duplicates value on record with id Resolution tip There are probably issue with conflict management. Open the XML of the source item, and replace all <sortOrder> numbers to make an ascending order, starting with 0 Duplicate label Error (.*) Duplicate label: (.*) Resolution tip You probably renamed the picklist API name for {2}. Please update manually the picklist {1} in the target org to avoid to have a duplicate label Missing e-mail template In field: template - no EmailTemplate named (.*) found Resolution tip An email template should be present in the sources. To retrieve it, you can run: sfdx force:source:retrieve -m EmailTemplate:{1} -u YOUR_ORG_USERNAME Empty source items Required field is missing: sharingOwnerRules Required field is missing: standardValue Required field is missing: valueTranslation Resolution tip You probably retrieved empty items, that must not be included within the SFDX project To remove them, please run sfdx:hardis:project:clean:emptyitems Enable CRM Analytics It should be created by enabling the CRM Analytics Cloud preference Resolution tip You must enable CRM Analytics (ex Wave, Einstein Analytics & Tableau CRM) in the target org. You probably also need to add CRM Analytics Admin Permission Set assignment to the deployment user Error parsing file Error (.*) Error parsing file: (.*) Resolution tip There has been an error parsing the XML file of {1}: {2} - Open file {1} and look where the error can be ! (merge issue, typo, XML tag not closed...) Formula picklist field issue Field:(.*) must not be Required Resolution tip You probably made read only field {1} that was required before. Find field {1} in the layout source XML, then replace Required by Readonly Field not available for element Field (.*) is not available for Resolution tip You probably changed the type of field {1}. Find field {1} in the source XML, and remove the section using it Formula picklist field issue Les champs de liste de s\u00e9lection sont pris en charge uniquement dans certaines fonctions. Resolution tip You probably changed the type of a field that is used in a formula. Update the formula to use a field compliant with formulas. More details at https://help.salesforce.com/articleView?id=sf.tips_on_building_formulas.htm&type=5 Flow must be deleted manually .flow (.*) insufficient access rights on cross-reference id Resolution tip Flow {1} can not be deleted using deployments, please delete it manually in the target org using menu Setup -> Flows , context menu on {1} -> View details and versions -> Deactivate all versions -> Delete flow Insufficient access rights on cross-reference id Error (.*) insufficient access rights on cross-reference id Resolution tip If {1} is a Flow, it can not be deleted using deployments, please delete it manually in the target org using menu Setup -> Flows , context menu on {1} -> View details and versions -> Deactivate all versions -> Delete flow Invalid report type Error (.*) invalid report type Resolution tip Report type is missing for report {1} - Open report {1} to se what report type is used - Retrieve the report type from an org and add it to the sfdx sources Invalid scope:Mine, not allowed Invalid scope:Mine, not allowed Resolution tip Replace Mine by Everything in the list view SFDX source XML. Have a look at this command to manage that automatically :) https://sfdx-hardis.cloudity.com/hardis/org/fix/listviewmine/ Invalid field in related list Error (.*) Invalid field:(.*) in related list:(.*) Resolution tip Field {2} is unknown. You can: - Activate the related feature license or option to make {2} existing in target org - Update XML of {1} to remove reference to field {2} in the related list {3} - Update XML of {1} to remove the whole related list {3} Example of XML to remove: <relatedLists> <fields>SOLUTION.ISSUE</fields> <fields>SOLUTION.SOLUTION_NUMBER</fields> <fields>SOLUTION.STATUS</fields> <fields>CORE.USERS.ALIAS</fields> <relatedList>RelatedSolutionList</relatedList> </relatedLists> Invalid field for upsert Error (.*) Invalid field for upsert, must be an External Id custom or standard indexed field: (.*) \\((.*)\\) Resolution tip You tried to use field {2} for an upsert call in {1}. - Is it declared as externalId ? - Is the customIndex source file present in the deployment ? - If it is declared as externalId and customIndex is present, you may have to go manually define the field as externalId in the target org Invalid type Error (.*) Invalid type: (.*) \\((.*)\\) Resolution tip Apex error in {1} with unknown type {2} at position {3}. If {2} is a class name, try to fix it, or maybe it is missing in the files or in package.xml ! Campaign can not be updated The object \"Campaign\" can't be updated Resolution tip Add \"MarketingUser\" in project-scratch-def.json features If it is already done, you may manually check \"MarketingUser\" field on the scratch org user Missing field MiddleName field MiddleName Variable does not exist: MiddleName Resolution tip MiddleNames must be activated in the target org. - Help: https://help.salesforce.com/articleView?id=000332623&type=1&mode=1 - Scratch org setting: \"nameSettings\": { \"enableMiddleName\": true } Missing field Suffix field Suffix Resolution tip Suffix must be activated in the target org. - Help: https://help.salesforce.com/articleView?id=000332623&type=1&mode=1 - Scratch org setting: \"nameSettings\": { \"enableNameSuffix\": true }, Missing field SyncedQuoteId field SyncedQuoteId Error force-app/main/default/objects/Quote/Quote.object-meta.xml Error force-app/main/default/objects/Opportunity/fields/SyncedQuoteId.field-meta.xml Resolution tip Quotes must be activated in the target org. - Help: https://help.salesforce.com/articleView?id=sf.quotes_enable.htm&type=5 - Scratch org setting: \"quoteSettings\": { \"enableQuote\": true } Missing feature ContactToMultipleAccounts no CustomObject named AccountContactRelation found Invalid field:ACCOUNT.NAME in related list:RelatedContactAccountRelationList Resolution tip Contacts to multiple accounts be activated in the target org. - Help: https://help.salesforce.com/articleView?id=sf.shared_contacts_set_up.htm&type=5 - Scratch org setting: \"features\": [\"ContactsToMultipleAccounts\"] Missing feature Chatter Collaboration Group CollaborationGroup Resolution tip Quotes must be activated in the target org. - Org: Setup -> Chatter settings -> Allow Records in Groups - Scratch org setting: \"chatterSettings\": { \"allowRecordsInChatterGroup\": true }, Missing feature Enhanced notes FeedItem.ContentNote Resolution tip Enhanced Notes must be activated in the target org. - Org: Setup -> Notes settings -> Enable Notes - Scratch org setting: \"enhancedNotesSettings\": { \"enableEnhancedNotes\": true }, Missing feature Ideas notes Idea.InternalIdeasIdeaRecordType Resolution tip Ideas must be activated in the target org. - Org: https://help.salesforce.com/articleView?id=networks_enable_ideas.htm&type=0 - Scratch org setting: \"ideasSettings\": { \"enableIdeas\": true } Missing feature Live Agent FeedItem.ContentNote Resolution tip Live Agent must be activated in the target org. - Org: Setup -> Live Agent Settings -> Enable Live Agent - Scratch org feature: LiveAgent Missing feature Product Request ProductRequest Resolution tip ProductRequest object is not available in the target org. Maybe you would like to clean its references within Profiles / PS using the following command ? sfdx hardis:project:clean:references , then select \"ProductRequest references\" Missing feature Social Customer Service SocialPersona.AreWeFollowing Resolution tip Social Custom Service must be activated in the target org. - Org: Setup -> https://help.salesforce.com/articleView?id=sf.social_customer_service_setup_enable.htm&type=5 - Scratch org feature: SocialCustomerService Missing feature Translation Workbench report-meta.xml(.*)filterlanguage Resolution tip Translation workbench must be activated in the target org. - Org: Setup -> https://help.salesforce.com/articleView?id=sf.customize_wbench.htm&type=5 - Scratch org: \"languageSettings\": { \"enableTranslationWorkbench\": true, \"enableEndUserLanguages\": true } Missing feature Opportunity Teams OpportunityTeam Resolution tip Opportunity Teams must be activated in the target org. - Org: Setup -> Opportunity Team Settings -> Enable Team Selling - Scratch org: \"opportunitySettings\": { \"enableOpportunityTeam\": true } Missing Feature Work.Com WorkBadgeDefinition Resolution tip Work.com feature must be activated in the target org. - Org & Scratch: https://developer.salesforce.com/docs/atlas.en-us.workdotcom_dev_guide.meta/workdotcom_dev_guide/wdc_cc_setup_dev_org.htm Missing multi-currency field A reference to a custom field (.*)CurrencyIsoCode Resolution tip You probably need to activate MultiCurrency (from Setup -> Company information) Missing object referenced in package.xml An object (.*) of type (.*) was named in package.xml, but was not found in zipped directory Resolution tip You can either: - Update the package.xml to remove the reference to the missing {2} {1} - Add the missing {2} {1} in your project source files Missing Quick Action Error (.*) In field: QuickAction - no QuickAction named (.*) found Resolution tip QuickAction {2} referred in {1} is unknown. You can either: - Make sure your QuickAction {2} is present in source files and in package.xml - If {2} is a standard QuickAction, activate related feature in target org - Solve other errors that could impact QuickAction {2} - Remove QuickAction {2} in the source XML of {1}. Example of XML to remove below: <quickActionListItems> <quickActionName>FeedItem.RypplePost</quickActionName> </quickActionListItems> Missing report Error (.*) The (.*) report chart has a problem with the \"reportName\" field Resolution tip {1} is referring to unknown report {2}. To retrieve it, you can run: - sfdx force:source:retrieve -m Report:{2} -u YOUR_ORG_USERNAME - If it fails, looks for the report folder and add it before report name to the retrieve command (ex: MYFOLDER/MYREPORTNAME) Missing Sales Team related list:RelatedAccountSalesTeam Resolution tip Account Teams must be activated in the target org. - Org: Setup -> Account Teams -> Enable - Scratch org setting: \"accountSettings\": { \"enableAccountTeams\": true } } sharing operation already in progress sharing operation already in progress Resolution tip You can not deploy multiple SharingRules at the same time. You can either: - Remove SharingOwnerRules and SharingRule from package.xml (so it becomes a manual operation) - Use sfdx hardis:work:save to generate a deploymentPlan in .sfdx-hardis.json, - If you are trying to create a scratch org, add DeferSharingCalc in features in project-scratch-def.json Not available for deploy for this organization Error (.*) Not available for deploy for this organization Resolution tip The user you use for deployments probably lacks of the rights (Profiles, Permission sets...) to manage {1}. - Assign the deployment user to the good Permission Sets, or modify its profile rights, then try again Not valid sharing model Error (.*) (.*) is not a valid sharing model for (.*) when (.*) sharing model is (.*) Resolution tip It seems that Sharing Models of {1} and {4} are not compatible in target org. - Use compatible sharing models between {1} and {4} by updating Sharing model of {1} or {4} - Make sure that sfdx sources {1}.object-meta.xml and {4}.object-meta.xml and in the files, and that {1} and {4} are in package.xml in CustomObject block - You may directly update sharingModel in XML. For example, replace <sharingModel>ReadWrite</sharingModel> by <sharingModel>Private</sharingModel> in {3}.object-meta.xml Picklist sharing is not supported Picklist sharing is not supported Resolution tip You probably changed the type of a field. Go manually make the change in the target org, so the deployment will pass Picklist value not found Picklist value: (.*) in picklist: (.*) not found Resolution tip Sources have references to value {1} of picklist {2} - If picklist {2} is standard, add the picklist to sfdx sources by using \"sfdx force:source:retrieve -m StandardValueSet:{2}\", then save again - Else, perform a search in all code of {1}, then remove XML tags referring to {1} (for example in record types metadatas) Please choose a different name Error (.*) This (.*) already exists or has been previously used(.*)Please choose a different name. Resolution tip - Rename {1} in the target org, then try again the deployment. if it succeeds, delete the renamed item. - or Delete {1} in the target org, then try again the deployment Missing profile default application You can't remove the only default app from the profile. Resolution tip You must have a default application for a profile. You can: - Update it in UI - Update the XML of the profile to set \"true\" in the <default> tag of one of the applicationVisibilities item. Ex: <applicationVisibilities> <application>standard__LightningSales</application> <default>true</default> <visible>true</visible> </applicationVisibilities> CRM Analytics: A Recipe must specify a DataFlow Error (.*) A Recipe must specify a Dataflow Resolution tip You must include related WaveDataFlow {1} in sources (and probably in package.xml too). To retrieve it, run: sfdx force:source:retrieve -m WaveDataFlow:{1} -u SOURCE_ORG_USERNAME You can also retrieve all analytics sources in one shot using sfdx hardis:org:retrieve:source:analytics -u SOURCE_ORG_USERNAME - https://salesforce.stackexchange.com/a/365453/33522 - https://help.salesforce.com/s/articleView?id=000319274&type=1 Record Type not found Error (.*) In field: recordType - no RecordType named (.*) found Resolution tip An unknown record type {2} is referenced in {1} - If record type {2} is not supposed to exist, perform a search in all files of {1}, then remove matching XML elements referring to this record type - If record type {2} is supposed to exist, you may have to create it manually in the target org to make the deployment pass Objects rights on a role is below org default access level below organization default Resolution tip Your org wide settings default must be lower than the level defined in roles: - If you are in a scratch org, it can be fixable using \"objectProperties\" in project-scratch-def.json (see \"Set Object-Level Sharing Settings\" paragraph in page https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_scratch_orgs_def_file.htm) - If you are in a sandbox/dev/prod org, you need to update default org wide settings before deployment. See https://www.sfdcpoint.com/salesforce/organization-wide-defaults-owd-in-salesforce/ Unsupported sharing configuration not supported for (.*) since it's org wide default is Resolution tip Consistency error between {1} sharing settings and {1} object configuration Please check https://salesforce.stackexchange.com/questions/260923/sfdx-deploying-contact-sharing-rules-on-a-fresh-deployment If you already did that, please try again to run the job A sharing rule may be useless Required field is missing: sharingCriteriaRules Resolution tip Are you sure you need this sharing rule ? You may remove it from the sfdx project Sharing recalculation lock because it interferes with another operation already in progress Le calcul de partage demand\u00e9 ne peut \u00eatre trait\u00e9 maintenant car il interf\u00e8re avec une autre op\u00e9ration en cours Resolution tip If you changed a field from MasterDetail to Lookup, you must do it manually in the target org before being able to deploy Send email is disabled Send Email is disabled or activities are not allowed Unknown user permission: SendExternalEmailAvailable Resolution tip Go to Email -> Deliverability -> Select value \"All emails\" Sort order must be in sequential order Error (.*) SortOrder must be in sequential order from Resolution tip You probably have a default DuplicateRule in the target org. Retrieve it from target org, or delete it manually in target org, so you can deploy. Ref: https://developer.salesforce.com/forums/?id=9060G000000I6SoQAK Async exception in test class System.AsyncException: (.*) Apex Resolution tip This may be a test class implementation issue in {1}. Please check https://developer.salesforce.com/forums/?id=9060G0000005kVLQAY Test classes with 0% coverage 0% Resolution tip Please make sure that none of the test classes are 0% covered Can not test item deployment in simulation mode Test only deployment cannot update Resolution tip THIS IS A FALSE POSITIVE When effective deployment will happen, it should pass Unknown user permission: CreateAuditFields Unknown user permission: CreateAuditFields Resolution tip You need to enable the \"Create audit field\" permission in the target org Please check https://help.salesforce.com/articleView?id=000334139&type=1&mode=1 Unknown user permission: FieldServiceAccess Unknown user permission: FieldServiceAccess Resolution tip You need to enable the \"Field Service Access\" permission in the target org Please check https://help.salesforce.com/articleView?id=sf.fs_enable.htm&type=5 Unknown user permission Unknown user permission: Resolution tip You can: - enable the related permission in the target org - or remove references to the permission in source XML files (Probably a Profile or a Permission set) Variable does not exist Error (.*) Variable does not exist: (.*) \\((.*)\\) Resolution tip Apex error in {1} with unknown variable {2} at position {3}. If {2} is a class name, try to fix it, or maybe it is missing in the files or in package.xml ! Tableau CRM / Wave digest error Fix the sfdcDigest node errors and then upload the file again Resolution tip Go to the target org, open profile \"Analytics Cloud Integration User\" and add READ rights to the missing object fields XML item appears more than once Error (.*) Field:(.*), value:(.*) appears more than once Resolution tip You probably made an error while merging conflicts Look for {3} in the XML of {1} If you see two {2} XML blocks with {3}, please decide which one you keep and remove the other one","title":"Deployment errors tips"},{"location":"deployTips/#salesforce-deployment-errors-tips","text":"This page summarizes all errors that can be detected by sfdx-hardis wrapper commands sfdx command sfdx-hardis wrapper command sfdx force:source:deploy sfdx hardis:source:deploy sfdx force:source:push sfdx hardis:source:push sfdx force:mdapi:deploy sfdx hardis:mdapi:deploy You can also use this function on a sfdx-hardis Salesforce CI/CD project If you see a deployment error which is not here yet, please add it in this file :) Example:","title":"Salesforce deployment errors tips"},{"location":"deployTips/#api-version-error","text":"Error (.*) The (.*) apiVersion can't be \"([0-9]+)\" Resolution tip {1} metadata has probably been created/updated in a sandbox already upgraded to next platform version (ex: Sandbox in Summer'23 and Production in Spring'23) - First, try to update the api version in the XML of {1} metadata file (decrement the number in <apiVersion>{3}.0</apiVersion>) - If it still doesn't work because the metadata structure has changed between version, you may try a force:source:retrieve of the metadata by forcing --apiversion at the end of the command.","title":"API Version error"},{"location":"deployTips/#allow-deployment-with-pending-apex-jobs","text":"You can bypass this error by allowing deployments with Apex jobs in the Deployment Settings page in Setup. Resolution tip Go to target org, in Setup -> Deployment Settings -> Activate option \"Allow deployments of components when corresponding Apex jobs are pending or in progress.\"","title":"Allow deployment with pending Apex Jobs"},{"location":"deployTips/#can-not-change-field-type-to-a-formula-field","text":"Error (.*) Cannot update a field from a Formula to something else Resolution tip You need to manually delete or rename the field in the target org to allow the deployment to pass - First, try to manually delete field {1} in the target org - if you can't delete {1}, rename it into {1}_ToDel, then once the deployment done, delete {1}_ToDel","title":"Can not change field type to a formula field"},{"location":"deployTips/#can-not-change-type-due-to-existing-data","text":"Error (.*) Cannot change type due to existing data Resolution tip It is usually not recommended to change types of fields, but if it's really necessary you can: - Manually change the type of {1} in the target org - If you can't manually change the type: - you may modify the dependencies (Formulas, Flows...) using {1}, so they don't use this field - you can also delete dependencies (Formulas, Flows...) using {1}, but make sure they are deployed again later - More help: https://help.salesforce.com/s/articleView?id=000327186&type=1","title":"Can not change type due to existing data"},{"location":"deployTips/#can-not-change-field-type-with-picklist","text":"Error (.*) Cannot change which global value set this picklist uses Resolution tip You probably updated the type of field {1}, and Salesforce does not allows that with deployments. You can: - Try to manually change the type of {1} directly in target org, but it may not be technically possible - Delete field {1} in target org: it will be recreated after deployment (but you will loose data on existing records, so be careful if your target is a production org) - Create another field with desired type and manage data recovery if the target is a production org","title":"Can not change field type with picklist"},{"location":"deployTips/#can-not-delete-custom-field","text":"This (.*) is referenced elsewhere in salesforce.com Le champ personnalis\u00e9 (.*) est utilis\u00e9 dans (.*) Resolution tip Custom field {1} can not be deleted because it is used elsewhere. Remove its references ans try again THIS MAY BE A FALSE POSITIVE if you are just testing the deployment, as destructiveChanges are deployed separately from updated items deployment check","title":"Can not delete custom field"},{"location":"deployTips/#can-not-delete-record-type","text":"Error (.*) Cannot delete record type through API Resolution tip You need to manually delete record type {1} in target org - Edit record type {1}, uncheck \"Active\" - Delete record type {1}","title":"Can not delete record type"},{"location":"deployTips/#can-not-find-folder","text":"Error (.*) Cannot find folder:(.*) Resolution tip Folder {2} is missing. - If folder {2} is existing in sources, add it in related package.xml - If folder {2} is not existing in DX sources, please use sfdx hardis:project:clean:retrievefolders to retrieve it - If both previous solutions did not work, go create manually folder {2} in target org","title":"Can not find folder"},{"location":"deployTips/#can-not-find-user","text":"Error (.*) Cannot find a user that matches any of the following usernames Resolution tip You made reference to username(s) in {1}, and those users probably do not exist in target org. - Do not use named users, but user public groups for assignments -> https://help.salesforce.com/s/articleView?id=sf.creating_and_editing_groups.htm&type=5 - or Create matching user(s) in the target deployment org - or Remove the XML part referring to hardcoded usernames Example of XML you have to remove in {1}: <folderShares> <accessLevel>Manage</accessLevel> <sharedTo>nicolas.vuillamy@hardis-scratch-po-tgci-root-develop_20220412_0604.com</sharedTo> <sharedToType>User</sharedToType> </folderShares>","title":"Can not find user"},{"location":"deployTips/#can-not-find-user-2","text":"Error (.*) In field: (.*) - no User named (.*) found Resolution tip You made reference to username {3} in {1}, and it probably does not exist in the target org. - Do not use named users, but user public groups for assignments -> https://help.salesforce.com/s/articleView?id=sf.creating_and_editing_groups.htm&type=5 - or Create matching user {3} in the target deployment org - or open {1} metadata and remove the XML part referring to hardcoded username {3}","title":"Can not find user (2)"},{"location":"deployTips/#cannot-update-a-field-to-a-summary-from-something-else","text":"Error (.*) Cannot update a field to a (.*) from something else Resolution tip You probably updated the type of field {1} to type {2}, and Salesforce does not allows that with deployments. You can: - Try to manually change the type of {1} directly in target org, but it may not be technically possible - Delete field {1} in target org: it will be recreated after deployment (but you will loose data on existing records, so be careful if your target is a production org) - Create another field with desired type and manage data recovery if the target is a production org","title":"Cannot update a field to a Summary from something else"},{"location":"deployTips/#custom-object-not-found","text":"Error (.*) In field: field - no CustomObject named (.*) found Resolution tip A reference to a custom object {2} is not found in {1}: - If you renamed the custom object, do a search/replace in sources with previous object name and new object name - If you deleted the custom object, or if you don't want to deploy it, do a search on the custom object name, and remove XML elements referencing it - If the object should exist, make sure it is in force-app/main/default/objects and that the object name is in manifest/package.xml in CustomObject section You may also have a look to command sfdx hardis:project:clean:references","title":"Custom object not found"},{"location":"deployTips/#custom-field-not-found","text":"Error (.*) In field: (.*) - no CustomField named (.*)\\.(.*) found Resolution tip A reference to a custom field {3}.{4} is not found in {1}: - If you renamed {3}.{4}, do a search/replace in {1} with previous field name and {4} - If you deleted {3}.{4}, or if you don't want to deploy it, do a search on {4} in all sources, and remove all XML elements referring to {3}.{4} (except in destructiveChanges.xml) - If {3}.{4} should exist, make sure it is in force-app/main/default/objects/{3}/fields and that {3}.{4} is in manifest/package.xml in CustomField section - If {3}.{4} is standard, the error is because {3}.{4} is not available in the org you are trying to deploy to. You can: - Remove the reference to {4} in the XML of {1} ( maybe sfdx hardis:project:clean:references can clean automatically for you ! ) - Activate the required features/license in the target org","title":"Custom field not found"},{"location":"deployTips/#mandatory-custom-field-can-not-be-in-a-profilepermission-set","text":"Error (.*) You cannot deploy to a required field: (.*) Resolution tip - Search for {2} in source file XML of {1}, then remove the entries matching the results Example of element to delete: <fieldPermissions> <editable>true</editable> <field>{2}</field> <readable>true</readable> </fieldPermissions>","title":"Mandatory custom field can not be in a profile/permission set"},{"location":"deployTips/#custom-metadata-entry-not-found","text":"Error (.*) In field: (.*) - no CustomMetadata named (.*) found Resolution tip A reference to a custom metadata {3} of type {2} is not found in {1}: - Are you sure you deployed {3} ? - If you use a package.xml, is {3} present within type CustomMetadata ?","title":"Custom metadata entry not found"},{"location":"deployTips/#dependent-class-is-invalid-and-needs-recompilation","text":"Error (.*) Dependent class is invalid and needs recompilation Resolution tip Solve the other errors and this one will disappear !","title":"Dependent class is invalid and needs recompilation"},{"location":"deployTips/#duplicate-value-platform-action-id-list","text":"duplicate value found: PlatformActionListId duplicates value on record with id Resolution tip There are probably issue with conflict management. Open the XML of the source item, and replace all <sortOrder> numbers to make an ascending order, starting with 0","title":"Duplicate value Platform Action Id List"},{"location":"deployTips/#duplicate-label","text":"Error (.*) Duplicate label: (.*) Resolution tip You probably renamed the picklist API name for {2}. Please update manually the picklist {1} in the target org to avoid to have a duplicate label","title":"Duplicate label"},{"location":"deployTips/#missing-e-mail-template","text":"In field: template - no EmailTemplate named (.*) found Resolution tip An email template should be present in the sources. To retrieve it, you can run: sfdx force:source:retrieve -m EmailTemplate:{1} -u YOUR_ORG_USERNAME","title":"Missing e-mail template"},{"location":"deployTips/#empty-source-items","text":"Required field is missing: sharingOwnerRules Required field is missing: standardValue Required field is missing: valueTranslation Resolution tip You probably retrieved empty items, that must not be included within the SFDX project To remove them, please run sfdx:hardis:project:clean:emptyitems","title":"Empty source items"},{"location":"deployTips/#enable-crm-analytics","text":"It should be created by enabling the CRM Analytics Cloud preference Resolution tip You must enable CRM Analytics (ex Wave, Einstein Analytics & Tableau CRM) in the target org. You probably also need to add CRM Analytics Admin Permission Set assignment to the deployment user","title":"Enable CRM Analytics"},{"location":"deployTips/#error-parsing-file","text":"Error (.*) Error parsing file: (.*) Resolution tip There has been an error parsing the XML file of {1}: {2} - Open file {1} and look where the error can be ! (merge issue, typo, XML tag not closed...)","title":"Error parsing file"},{"location":"deployTips/#formula-picklist-field-issue","text":"Field:(.*) must not be Required Resolution tip You probably made read only field {1} that was required before. Find field {1} in the layout source XML, then replace Required by Readonly","title":"Formula picklist field issue"},{"location":"deployTips/#field-not-available-for-element","text":"Field (.*) is not available for Resolution tip You probably changed the type of field {1}. Find field {1} in the source XML, and remove the section using it","title":"Field not available for element"},{"location":"deployTips/#formula-picklist-field-issue_1","text":"Les champs de liste de s\u00e9lection sont pris en charge uniquement dans certaines fonctions. Resolution tip You probably changed the type of a field that is used in a formula. Update the formula to use a field compliant with formulas. More details at https://help.salesforce.com/articleView?id=sf.tips_on_building_formulas.htm&type=5","title":"Formula picklist field issue"},{"location":"deployTips/#flow-must-be-deleted-manually","text":".flow (.*) insufficient access rights on cross-reference id Resolution tip Flow {1} can not be deleted using deployments, please delete it manually in the target org using menu Setup -> Flows , context menu on {1} -> View details and versions -> Deactivate all versions -> Delete flow","title":"Flow must be deleted manually"},{"location":"deployTips/#insufficient-access-rights-on-cross-reference-id","text":"Error (.*) insufficient access rights on cross-reference id Resolution tip If {1} is a Flow, it can not be deleted using deployments, please delete it manually in the target org using menu Setup -> Flows , context menu on {1} -> View details and versions -> Deactivate all versions -> Delete flow","title":"Insufficient access rights on cross-reference id"},{"location":"deployTips/#invalid-report-type","text":"Error (.*) invalid report type Resolution tip Report type is missing for report {1} - Open report {1} to se what report type is used - Retrieve the report type from an org and add it to the sfdx sources","title":"Invalid report type"},{"location":"deployTips/#invalid-scopemine-not-allowed","text":"Invalid scope:Mine, not allowed Resolution tip Replace Mine by Everything in the list view SFDX source XML. Have a look at this command to manage that automatically :) https://sfdx-hardis.cloudity.com/hardis/org/fix/listviewmine/","title":"Invalid scope:Mine, not allowed"},{"location":"deployTips/#invalid-field-in-related-list","text":"Error (.*) Invalid field:(.*) in related list:(.*) Resolution tip Field {2} is unknown. You can: - Activate the related feature license or option to make {2} existing in target org - Update XML of {1} to remove reference to field {2} in the related list {3} - Update XML of {1} to remove the whole related list {3} Example of XML to remove: <relatedLists> <fields>SOLUTION.ISSUE</fields> <fields>SOLUTION.SOLUTION_NUMBER</fields> <fields>SOLUTION.STATUS</fields> <fields>CORE.USERS.ALIAS</fields> <relatedList>RelatedSolutionList</relatedList> </relatedLists>","title":"Invalid field in related list"},{"location":"deployTips/#invalid-field-for-upsert","text":"Error (.*) Invalid field for upsert, must be an External Id custom or standard indexed field: (.*) \\((.*)\\) Resolution tip You tried to use field {2} for an upsert call in {1}. - Is it declared as externalId ? - Is the customIndex source file present in the deployment ? - If it is declared as externalId and customIndex is present, you may have to go manually define the field as externalId in the target org","title":"Invalid field for upsert"},{"location":"deployTips/#invalid-type","text":"Error (.*) Invalid type: (.*) \\((.*)\\) Resolution tip Apex error in {1} with unknown type {2} at position {3}. If {2} is a class name, try to fix it, or maybe it is missing in the files or in package.xml !","title":"Invalid type"},{"location":"deployTips/#campaign-can-not-be-updated","text":"The object \"Campaign\" can't be updated Resolution tip Add \"MarketingUser\" in project-scratch-def.json features If it is already done, you may manually check \"MarketingUser\" field on the scratch org user","title":"Campaign can not be updated"},{"location":"deployTips/#missing-field-middlename","text":"field MiddleName Variable does not exist: MiddleName Resolution tip MiddleNames must be activated in the target org. - Help: https://help.salesforce.com/articleView?id=000332623&type=1&mode=1 - Scratch org setting: \"nameSettings\": { \"enableMiddleName\": true }","title":"Missing field MiddleName"},{"location":"deployTips/#missing-field-suffix","text":"field Suffix Resolution tip Suffix must be activated in the target org. - Help: https://help.salesforce.com/articleView?id=000332623&type=1&mode=1 - Scratch org setting: \"nameSettings\": { \"enableNameSuffix\": true },","title":"Missing field Suffix"},{"location":"deployTips/#missing-field-syncedquoteid","text":"field SyncedQuoteId Error force-app/main/default/objects/Quote/Quote.object-meta.xml Error force-app/main/default/objects/Opportunity/fields/SyncedQuoteId.field-meta.xml Resolution tip Quotes must be activated in the target org. - Help: https://help.salesforce.com/articleView?id=sf.quotes_enable.htm&type=5 - Scratch org setting: \"quoteSettings\": { \"enableQuote\": true }","title":"Missing field SyncedQuoteId"},{"location":"deployTips/#missing-feature-contacttomultipleaccounts","text":"no CustomObject named AccountContactRelation found Invalid field:ACCOUNT.NAME in related list:RelatedContactAccountRelationList Resolution tip Contacts to multiple accounts be activated in the target org. - Help: https://help.salesforce.com/articleView?id=sf.shared_contacts_set_up.htm&type=5 - Scratch org setting: \"features\": [\"ContactsToMultipleAccounts\"]","title":"Missing feature ContactToMultipleAccounts"},{"location":"deployTips/#missing-feature-chatter-collaboration-group","text":"CollaborationGroup Resolution tip Quotes must be activated in the target org. - Org: Setup -> Chatter settings -> Allow Records in Groups - Scratch org setting: \"chatterSettings\": { \"allowRecordsInChatterGroup\": true },","title":"Missing feature Chatter Collaboration Group"},{"location":"deployTips/#missing-feature-enhanced-notes","text":"FeedItem.ContentNote Resolution tip Enhanced Notes must be activated in the target org. - Org: Setup -> Notes settings -> Enable Notes - Scratch org setting: \"enhancedNotesSettings\": { \"enableEnhancedNotes\": true },","title":"Missing feature Enhanced notes"},{"location":"deployTips/#missing-feature-ideas-notes","text":"Idea.InternalIdeasIdeaRecordType Resolution tip Ideas must be activated in the target org. - Org: https://help.salesforce.com/articleView?id=networks_enable_ideas.htm&type=0 - Scratch org setting: \"ideasSettings\": { \"enableIdeas\": true }","title":"Missing feature Ideas notes"},{"location":"deployTips/#missing-feature-live-agent","text":"FeedItem.ContentNote Resolution tip Live Agent must be activated in the target org. - Org: Setup -> Live Agent Settings -> Enable Live Agent - Scratch org feature: LiveAgent","title":"Missing feature Live Agent"},{"location":"deployTips/#missing-feature-product-request","text":"ProductRequest Resolution tip ProductRequest object is not available in the target org. Maybe you would like to clean its references within Profiles / PS using the following command ? sfdx hardis:project:clean:references , then select \"ProductRequest references\"","title":"Missing feature Product Request"},{"location":"deployTips/#missing-feature-social-customer-service","text":"SocialPersona.AreWeFollowing Resolution tip Social Custom Service must be activated in the target org. - Org: Setup -> https://help.salesforce.com/articleView?id=sf.social_customer_service_setup_enable.htm&type=5 - Scratch org feature: SocialCustomerService","title":"Missing feature Social Customer Service"},{"location":"deployTips/#missing-feature-translation-workbench","text":"report-meta.xml(.*)filterlanguage Resolution tip Translation workbench must be activated in the target org. - Org: Setup -> https://help.salesforce.com/articleView?id=sf.customize_wbench.htm&type=5 - Scratch org: \"languageSettings\": { \"enableTranslationWorkbench\": true, \"enableEndUserLanguages\": true }","title":"Missing feature Translation Workbench"},{"location":"deployTips/#missing-feature-opportunity-teams","text":"OpportunityTeam Resolution tip Opportunity Teams must be activated in the target org. - Org: Setup -> Opportunity Team Settings -> Enable Team Selling - Scratch org: \"opportunitySettings\": { \"enableOpportunityTeam\": true }","title":"Missing feature Opportunity Teams"},{"location":"deployTips/#missing-feature-workcom","text":"WorkBadgeDefinition Resolution tip Work.com feature must be activated in the target org. - Org & Scratch: https://developer.salesforce.com/docs/atlas.en-us.workdotcom_dev_guide.meta/workdotcom_dev_guide/wdc_cc_setup_dev_org.htm","title":"Missing Feature Work.Com"},{"location":"deployTips/#missing-multi-currency-field","text":"A reference to a custom field (.*)CurrencyIsoCode Resolution tip You probably need to activate MultiCurrency (from Setup -> Company information)","title":"Missing multi-currency field"},{"location":"deployTips/#missing-object-referenced-in-packagexml","text":"An object (.*) of type (.*) was named in package.xml, but was not found in zipped directory Resolution tip You can either: - Update the package.xml to remove the reference to the missing {2} {1} - Add the missing {2} {1} in your project source files","title":"Missing object referenced in package.xml"},{"location":"deployTips/#missing-quick-action","text":"Error (.*) In field: QuickAction - no QuickAction named (.*) found Resolution tip QuickAction {2} referred in {1} is unknown. You can either: - Make sure your QuickAction {2} is present in source files and in package.xml - If {2} is a standard QuickAction, activate related feature in target org - Solve other errors that could impact QuickAction {2} - Remove QuickAction {2} in the source XML of {1}. Example of XML to remove below: <quickActionListItems> <quickActionName>FeedItem.RypplePost</quickActionName> </quickActionListItems>","title":"Missing Quick Action"},{"location":"deployTips/#missing-report","text":"Error (.*) The (.*) report chart has a problem with the \"reportName\" field Resolution tip {1} is referring to unknown report {2}. To retrieve it, you can run: - sfdx force:source:retrieve -m Report:{2} -u YOUR_ORG_USERNAME - If it fails, looks for the report folder and add it before report name to the retrieve command (ex: MYFOLDER/MYREPORTNAME)","title":"Missing report"},{"location":"deployTips/#missing-sales-team","text":"related list:RelatedAccountSalesTeam Resolution tip Account Teams must be activated in the target org. - Org: Setup -> Account Teams -> Enable - Scratch org setting: \"accountSettings\": { \"enableAccountTeams\": true } }","title":"Missing Sales Team"},{"location":"deployTips/#sharing-operation-already-in-progress","text":"sharing operation already in progress Resolution tip You can not deploy multiple SharingRules at the same time. You can either: - Remove SharingOwnerRules and SharingRule from package.xml (so it becomes a manual operation) - Use sfdx hardis:work:save to generate a deploymentPlan in .sfdx-hardis.json, - If you are trying to create a scratch org, add DeferSharingCalc in features in project-scratch-def.json","title":"sharing operation already in progress"},{"location":"deployTips/#not-available-for-deploy-for-this-organization","text":"Error (.*) Not available for deploy for this organization Resolution tip The user you use for deployments probably lacks of the rights (Profiles, Permission sets...) to manage {1}. - Assign the deployment user to the good Permission Sets, or modify its profile rights, then try again","title":"Not available for deploy for this organization"},{"location":"deployTips/#not-valid-sharing-model","text":"Error (.*) (.*) is not a valid sharing model for (.*) when (.*) sharing model is (.*) Resolution tip It seems that Sharing Models of {1} and {4} are not compatible in target org. - Use compatible sharing models between {1} and {4} by updating Sharing model of {1} or {4} - Make sure that sfdx sources {1}.object-meta.xml and {4}.object-meta.xml and in the files, and that {1} and {4} are in package.xml in CustomObject block - You may directly update sharingModel in XML. For example, replace <sharingModel>ReadWrite</sharingModel> by <sharingModel>Private</sharingModel> in {3}.object-meta.xml","title":"Not valid sharing model"},{"location":"deployTips/#picklist-sharing-is-not-supported","text":"Picklist sharing is not supported Resolution tip You probably changed the type of a field. Go manually make the change in the target org, so the deployment will pass","title":"Picklist sharing is not supported"},{"location":"deployTips/#picklist-value-not-found","text":"Picklist value: (.*) in picklist: (.*) not found Resolution tip Sources have references to value {1} of picklist {2} - If picklist {2} is standard, add the picklist to sfdx sources by using \"sfdx force:source:retrieve -m StandardValueSet:{2}\", then save again - Else, perform a search in all code of {1}, then remove XML tags referring to {1} (for example in record types metadatas)","title":"Picklist value not found"},{"location":"deployTips/#please-choose-a-different-name","text":"Error (.*) This (.*) already exists or has been previously used(.*)Please choose a different name. Resolution tip - Rename {1} in the target org, then try again the deployment. if it succeeds, delete the renamed item. - or Delete {1} in the target org, then try again the deployment","title":"Please choose a different name"},{"location":"deployTips/#missing-profile-default-application","text":"You can't remove the only default app from the profile. Resolution tip You must have a default application for a profile. You can: - Update it in UI - Update the XML of the profile to set \"true\" in the <default> tag of one of the applicationVisibilities item. Ex: <applicationVisibilities> <application>standard__LightningSales</application> <default>true</default> <visible>true</visible> </applicationVisibilities>","title":"Missing profile default application"},{"location":"deployTips/#crm-analytics-a-recipe-must-specify-a-dataflow","text":"Error (.*) A Recipe must specify a Dataflow Resolution tip You must include related WaveDataFlow {1} in sources (and probably in package.xml too). To retrieve it, run: sfdx force:source:retrieve -m WaveDataFlow:{1} -u SOURCE_ORG_USERNAME You can also retrieve all analytics sources in one shot using sfdx hardis:org:retrieve:source:analytics -u SOURCE_ORG_USERNAME - https://salesforce.stackexchange.com/a/365453/33522 - https://help.salesforce.com/s/articleView?id=000319274&type=1","title":"CRM Analytics: A Recipe must specify a DataFlow"},{"location":"deployTips/#record-type-not-found","text":"Error (.*) In field: recordType - no RecordType named (.*) found Resolution tip An unknown record type {2} is referenced in {1} - If record type {2} is not supposed to exist, perform a search in all files of {1}, then remove matching XML elements referring to this record type - If record type {2} is supposed to exist, you may have to create it manually in the target org to make the deployment pass","title":"Record Type not found"},{"location":"deployTips/#objects-rights-on-a-role-is-below-org-default","text":"access level below organization default Resolution tip Your org wide settings default must be lower than the level defined in roles: - If you are in a scratch org, it can be fixable using \"objectProperties\" in project-scratch-def.json (see \"Set Object-Level Sharing Settings\" paragraph in page https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_scratch_orgs_def_file.htm) - If you are in a sandbox/dev/prod org, you need to update default org wide settings before deployment. See https://www.sfdcpoint.com/salesforce/organization-wide-defaults-owd-in-salesforce/","title":"Objects rights on a role is below org default"},{"location":"deployTips/#unsupported-sharing-configuration","text":"not supported for (.*) since it's org wide default is Resolution tip Consistency error between {1} sharing settings and {1} object configuration Please check https://salesforce.stackexchange.com/questions/260923/sfdx-deploying-contact-sharing-rules-on-a-fresh-deployment If you already did that, please try again to run the job","title":"Unsupported sharing configuration"},{"location":"deployTips/#a-sharing-rule-may-be-useless","text":"Required field is missing: sharingCriteriaRules Resolution tip Are you sure you need this sharing rule ? You may remove it from the sfdx project","title":"A sharing rule may be useless"},{"location":"deployTips/#sharing-recalculation-lock","text":"because it interferes with another operation already in progress Le calcul de partage demand\u00e9 ne peut \u00eatre trait\u00e9 maintenant car il interf\u00e8re avec une autre op\u00e9ration en cours Resolution tip If you changed a field from MasterDetail to Lookup, you must do it manually in the target org before being able to deploy","title":"Sharing recalculation lock"},{"location":"deployTips/#send-email-is-disabled","text":"Send Email is disabled or activities are not allowed Unknown user permission: SendExternalEmailAvailable Resolution tip Go to Email -> Deliverability -> Select value \"All emails\"","title":"Send email is disabled"},{"location":"deployTips/#sort-order-must-be-in-sequential-order","text":"Error (.*) SortOrder must be in sequential order from Resolution tip You probably have a default DuplicateRule in the target org. Retrieve it from target org, or delete it manually in target org, so you can deploy. Ref: https://developer.salesforce.com/forums/?id=9060G000000I6SoQAK","title":"Sort order must be in sequential order"},{"location":"deployTips/#async-exception-in-test-class","text":"System.AsyncException: (.*) Apex Resolution tip This may be a test class implementation issue in {1}. Please check https://developer.salesforce.com/forums/?id=9060G0000005kVLQAY","title":"Async exception in test class"},{"location":"deployTips/#test-classes-with-0-coverage","text":"0% Resolution tip Please make sure that none of the test classes are 0% covered","title":"Test classes with 0% coverage"},{"location":"deployTips/#can-not-test-item-deployment-in-simulation-mode","text":"Test only deployment cannot update Resolution tip THIS IS A FALSE POSITIVE When effective deployment will happen, it should pass","title":"Can not test item deployment in simulation mode"},{"location":"deployTips/#unknown-user-permission-createauditfields","text":"Unknown user permission: CreateAuditFields Resolution tip You need to enable the \"Create audit field\" permission in the target org Please check https://help.salesforce.com/articleView?id=000334139&type=1&mode=1","title":"Unknown user permission: CreateAuditFields"},{"location":"deployTips/#unknown-user-permission-fieldserviceaccess","text":"Unknown user permission: FieldServiceAccess Resolution tip You need to enable the \"Field Service Access\" permission in the target org Please check https://help.salesforce.com/articleView?id=sf.fs_enable.htm&type=5","title":"Unknown user permission: FieldServiceAccess"},{"location":"deployTips/#unknown-user-permission","text":"Unknown user permission: Resolution tip You can: - enable the related permission in the target org - or remove references to the permission in source XML files (Probably a Profile or a Permission set)","title":"Unknown user permission"},{"location":"deployTips/#variable-does-not-exist","text":"Error (.*) Variable does not exist: (.*) \\((.*)\\) Resolution tip Apex error in {1} with unknown variable {2} at position {3}. If {2} is a class name, try to fix it, or maybe it is missing in the files or in package.xml !","title":"Variable does not exist"},{"location":"deployTips/#tableau-crm-wave-digest-error","text":"Fix the sfdcDigest node errors and then upload the file again Resolution tip Go to the target org, open profile \"Analytics Cloud Integration User\" and add READ rights to the missing object fields","title":"Tableau CRM / Wave digest error"},{"location":"deployTips/#xml-item-appears-more-than-once","text":"Error (.*) Field:(.*), value:(.*) appears more than once Resolution tip You probably made an error while merging conflicts Look for {3} in the XML of {1} If you see two {2} XML blocks with {3}, please decide which one you keep and remove the other one","title":"XML item appears more than once"},{"location":"license/","text":"GNU AFFERO GENERAL PUBLIC LICENSE Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/ Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble The GNU Affero General Public License is a free, copyleft license for software and other kinds of works, specifically designed to ensure cooperation with the community in the case of network server software. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, our General Public Licenses are intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. Developers that use our General Public Licenses protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License which gives you legal permission to copy, distribute and/or modify the software. A secondary benefit of defending all users' freedom is that improvements made in alternate versions of the program, if they receive widespread use, become available for other developers to incorporate. Many developers of free software are heartened and encouraged by the resulting cooperation. However, in the case of software used on network servers, this result may fail to come about. The GNU General Public License permits making a modified version and letting the public access it on a server without ever releasing its source code to the public. The GNU Affero General Public License is designed specifically to ensure that, in such cases, the modified source code becomes available to the community. It requires the operator of a network server to provide the source code of the modified version running there to the users of that server. Therefore, public use of a modified version, on a publicly accessible server, gives the public access to the source code of the modified version. An older license, called the Affero General Public License and published by Affero, was designed to accomplish similar goals. This is a different license, not a version of the Affero GPL, but Affero has released a new version of the Affero GPL which permits relicensing under this license. The precise terms and conditions for copying, distribution and modification follow. TERMS AND CONDITIONS 0. Definitions. \"This License\" refers to version 3 of the GNU Affero General Public License. \"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \"The Program\" refers to any copyrightable work licensed under this License. Each licensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals or organizations. To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work. A \"covered work\" means either the unmodified Program or a work based on the Program. To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion. 1. Source Code. The \"source code\" for a work means the preferred form of the work for making modifications to it. \"Object code\" means any non-source form of a work. A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work. 2. Basic Permissions. All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary. 3. Protecting Users' Legal Rights From Anti-Circumvention Law. No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures. When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures. 4. Conveying Verbatim Copies. You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee. 5. Conveying Modified Source Versions. You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: a) The work must carry prominent notices stating that you modified it, and giving a relevant date. b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \"keep intact all notices\". c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it. d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate. 6. Conveying Non-Source Forms. You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b. d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work. A \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product. \"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made. If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM). The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying. 7. Additional Terms. \"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or d) Limiting the use for publicity purposes of names of licensors or authors of the material; or e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms. Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way. 8. Termination. You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11). However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10. 9. Acceptance Not Required for Having Copies. You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so. 10. Automatic Licensing of Downstream Recipients. Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License. An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it. 11. Patents. A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \"contributor version\". A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License. Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version. In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party. If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it. A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law. 12. No Surrender of Others' Freedom. If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program. 13. Remote Network Interaction; Use with the GNU General Public License. Notwithstanding any other provision of this License, if you modify the Program, your modified version must prominently offer all users interacting with it remotely through a computer network (if your version supports such interaction) an opportunity to receive the Corresponding Source of your version by providing access to the Corresponding Source from a network server at no charge, through some standard or customary means of facilitating copying of software. This Corresponding Source shall include the Corresponding Source for any work covered by version 3 of the GNU General Public License that is incorporated pursuant to the following paragraph. Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the work with which it is combined will remain governed by version 3 of the GNU General Public License. 14. Revised Versions of this License. The Free Software Foundation may publish revised and/or new versions of the GNU Affero General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU Affero General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU Affero General Public License, you may choose any version ever published by the Free Software Foundation. If the Program specifies that a proxy can decide which future versions of the GNU Affero General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program. Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version. 15. Disclaimer of Warranty. THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. Limitation of Liability. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. 17. Interpretation of Sections 15 and 16. If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee. END OF TERMS AND CONDITIONS How to Apply These Terms to Your New Programs If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms. To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found. <one line to give the program's name and a brief idea of what it does.> Copyright (C) <year> <name of author> This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see <https://www.gnu.org/licenses/>. Also add information on how to contact you by electronic and paper mail. If your software can interact with users remotely through a computer network, you should also make sure that it provides a way for users to get its source. For example, if your program is a web application, its interface could display a \"Source\" link that leads users to an archive of the code. There are many ways you could offer source, and different solutions will be better for different programs; see section 13 for the specific requirements. You should also get your employer (if you work as a programmer) or school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. For more information on this, and how to apply and follow the GNU AGPL, see https://www.gnu.org/licenses/ .","title":"License"},{"location":"salesforce-ci-cd-clone-repository/","text":"Pre-requisites Clone the repository Pre-requisites You need to access to a Git repository and the url of the repository to clone. The release manager of the project can provide it. It looks like the following: https://github.com/trailheadapps/dreamhouse-lwc.git Clone the repository In Visual Studio Code, hit CTRL+Shirt+P then look for command Git clone then click to select it. Paste the url of your git repository then hit ENTER If you are asked for a directory and you don't have one yet, create an empty directory at the root of your hard drive, and select it (examples: C:/git or D:/git ) Click on the Open notification in VsCode You are now ready to create a new task !","title":"Clone the repository"},{"location":"salesforce-ci-cd-clone-repository/#pre-requisites","text":"You need to access to a Git repository and the url of the repository to clone. The release manager of the project can provide it. It looks like the following: https://github.com/trailheadapps/dreamhouse-lwc.git","title":"Pre-requisites"},{"location":"salesforce-ci-cd-clone-repository/#clone-the-repository","text":"In Visual Studio Code, hit CTRL+Shirt+P then look for command Git clone then click to select it. Paste the url of your git repository then hit ENTER If you are asked for a directory and you don't have one yet, create an empty directory at the root of your hard drive, and select it (examples: C:/git or D:/git ) Click on the Open notification in VsCode You are now ready to create a new task !","title":"Clone the repository"},{"location":"salesforce-ci-cd-config-cleaning/","text":"Why cleaning sources ? Dashboards Destructive Changes List Views Mine Minimize Profiles System.debug Named metadatas Case Entitlement DataDotCom Local Field Product Request Why cleaning sources ? Salesforce CI/CD Pipelines does not natively work without many manual operations to update the XML... so the deployments passes ! sfdx-hardis provides a set of commands to automate those boring XML updates that can be called every time a user prepares a merge request using command sfdx hardis:work:save Here is the list of available automated cleanings, that can also be called manually using command Example of cleaning config in a .sfdx-hardis.yml config file: autoCleanTypes: - destructivechanges - datadotcom - minimizeProfiles - listViewsMine Dashboards Property: dashboards Removes hardcoded user ids from Dashboards Destructive Changes Property: destructivechanges Any file corresponding to an element existing in manifest/destructiveChanges.xml is deleted. List Views Mine Property: listViewsMine List views with scope Mine can not be deployed. As a workaround, scope is set back to Everything in XML, but the list view reference is kept in a property listViewsToSetToMine in .sfdx-hardis.yml, and after deployment, manual clicks are simulated to set back their scope to Mine ! Minimize Profiles Property: minimizeProfiles It is a bad practice to define on Profiles elements that can be defined on Permission Sets. Salesforce will deprecate such capability in Spring 26 . Don't wait for that, and use minimizeProfiles cleaning to automatically remove from Profiles any permission that exists on a Permission Set ! The following XML tags are removed automatically: classAccesses customMetadataTypeAccesses externalDataSourceAccesses fieldPermissions objectPermissions pageAccesses userPermissions (except on Admin Profile) You can override this list by defining a property minimizeProfilesNodesToRemove in your .sfdx-hardis.yml config file. __ System.debug Property: systemDebug System.debug are useless, as explained in this article Comments automatically all System.debug in the code to enhance performances. Named metadatas Cleaning can remove files related to named elements. Case Entitlement Property: caseentitlement Removes all Case Entitlement related fields , like Case.EntitlementId and Case.MilestoneStatus DataDotCom Property: datadotcom Removes all Case Data.com related fields , like Account.DandbCompanyId and Account.Jigsaw Local Field Property: localfields Removes all Local fields , like Account.NameLocal and Lead.CompanyLocal Product Request Property: productrequest Removes all Local fields , like ProductRequest.ShipToAddress and ProductRequest.ShipmentType","title":"Automated cleaning"},{"location":"salesforce-ci-cd-config-cleaning/#why-cleaning-sources","text":"Salesforce CI/CD Pipelines does not natively work without many manual operations to update the XML... so the deployments passes ! sfdx-hardis provides a set of commands to automate those boring XML updates that can be called every time a user prepares a merge request using command sfdx hardis:work:save Here is the list of available automated cleanings, that can also be called manually using command Example of cleaning config in a .sfdx-hardis.yml config file: autoCleanTypes: - destructivechanges - datadotcom - minimizeProfiles - listViewsMine","title":"Why cleaning sources ?"},{"location":"salesforce-ci-cd-config-cleaning/#dashboards","text":"Property: dashboards Removes hardcoded user ids from Dashboards","title":"Dashboards"},{"location":"salesforce-ci-cd-config-cleaning/#destructive-changes","text":"Property: destructivechanges Any file corresponding to an element existing in manifest/destructiveChanges.xml is deleted.","title":"Destructive Changes"},{"location":"salesforce-ci-cd-config-cleaning/#list-views-mine","text":"Property: listViewsMine List views with scope Mine can not be deployed. As a workaround, scope is set back to Everything in XML, but the list view reference is kept in a property listViewsToSetToMine in .sfdx-hardis.yml, and after deployment, manual clicks are simulated to set back their scope to Mine !","title":"List Views Mine"},{"location":"salesforce-ci-cd-config-cleaning/#minimize-profiles","text":"Property: minimizeProfiles It is a bad practice to define on Profiles elements that can be defined on Permission Sets. Salesforce will deprecate such capability in Spring 26 . Don't wait for that, and use minimizeProfiles cleaning to automatically remove from Profiles any permission that exists on a Permission Set ! The following XML tags are removed automatically: classAccesses customMetadataTypeAccesses externalDataSourceAccesses fieldPermissions objectPermissions pageAccesses userPermissions (except on Admin Profile) You can override this list by defining a property minimizeProfilesNodesToRemove in your .sfdx-hardis.yml config file. __","title":"Minimize Profiles"},{"location":"salesforce-ci-cd-config-cleaning/#systemdebug","text":"Property: systemDebug System.debug are useless, as explained in this article Comments automatically all System.debug in the code to enhance performances.","title":"System.debug"},{"location":"salesforce-ci-cd-config-cleaning/#named-metadatas","text":"Cleaning can remove files related to named elements.","title":"Named metadatas"},{"location":"salesforce-ci-cd-config-cleaning/#case-entitlement","text":"Property: caseentitlement Removes all Case Entitlement related fields , like Case.EntitlementId and Case.MilestoneStatus","title":"Case Entitlement"},{"location":"salesforce-ci-cd-config-cleaning/#datadotcom","text":"Property: datadotcom Removes all Case Data.com related fields , like Account.DandbCompanyId and Account.Jigsaw","title":"DataDotCom"},{"location":"salesforce-ci-cd-config-cleaning/#local-field","text":"Property: localfields Removes all Local fields , like Account.NameLocal and Lead.CompanyLocal","title":"Local Field"},{"location":"salesforce-ci-cd-config-cleaning/#product-request","text":"Property: productrequest Removes all Local fields , like ProductRequest.ShipToAddress and ProductRequest.ShipmentType","title":"Product Request"},{"location":"salesforce-ci-cd-config-home/","text":"Package.xml destructiveChanges.xml Automated sources cleaning All configuration properties Package.xml A Salesforce CI/CD repository contains a file manifest/package.xml . It contains all metadatas that will be deployed by the CI server . It is automatically updated when preparing merge requests by command hardis:work:save It is highly recommended to configure overwrite management , to avoid to overwrite metadatas that are maintained directly in production on purpose Dashboards Reports Remote site settings Named credentials ... See Overwrite management configuration documentation destructiveChanges.xml A Salesforce CI/CD repository contains a file manifest/destructiveChanges.xml . It contains all metadatas that will be deleted by the CI server . It is automatically updated when preparing merge requests by command hardis:work:save Automated sources cleaning You can configure automated cleaning of sources before creating merge requests, using command hardis:work:save Those cleanings can be: Deletion of sources existing in destructiveChanges.xml Remove from Profiles elements that are existing in Permission Sets, like Objects access configuration. etc ... See Overwrite cleaning configuration documentation All configuration properties .sfdx-hardis.yml allows to make your project highly configuration. Have a look at its list of configuration properties !","title":"CI/CD Config Home"},{"location":"salesforce-ci-cd-config-home/#packagexml","text":"A Salesforce CI/CD repository contains a file manifest/package.xml . It contains all metadatas that will be deployed by the CI server . It is automatically updated when preparing merge requests by command hardis:work:save It is highly recommended to configure overwrite management , to avoid to overwrite metadatas that are maintained directly in production on purpose Dashboards Reports Remote site settings Named credentials ... See Overwrite management configuration documentation","title":"Package.xml"},{"location":"salesforce-ci-cd-config-home/#destructivechangesxml","text":"A Salesforce CI/CD repository contains a file manifest/destructiveChanges.xml . It contains all metadatas that will be deleted by the CI server . It is automatically updated when preparing merge requests by command hardis:work:save","title":"destructiveChanges.xml"},{"location":"salesforce-ci-cd-config-home/#automated-sources-cleaning","text":"You can configure automated cleaning of sources before creating merge requests, using command hardis:work:save Those cleanings can be: Deletion of sources existing in destructiveChanges.xml Remove from Profiles elements that are existing in Permission Sets, like Objects access configuration. etc ... See Overwrite cleaning configuration documentation","title":"Automated sources cleaning"},{"location":"salesforce-ci-cd-config-home/#all-configuration-properties","text":".sfdx-hardis.yml allows to make your project highly configuration. Have a look at its list of configuration properties !","title":"All configuration properties"},{"location":"salesforce-ci-cd-config-overwrite/","text":"packageDeployOnce.xml Definition Example packageDeployOnChange.xml packageDeployOnce.xml Definition For different reasons, many metadatas are maintained manually , using production Salesforce org Setup To avoid to overwrite manual updates in setup, you must define at least a manifest/packageDeployOnce.xml file. The rule is simple and must be learnt by heart: Every item which is existing in package.xml AND matching packageDeployOnce.xml AND existing in the target deployment org will NOT be deployed . This means that an item matching packageDeployOnce.xml will be deployed the first time , but never overwritten , so has to be manually maintained in org using Setup . This file must be located at manifest/packageDeployOnce.xml It has the same format than a package.xml , but must be written manually It can contain named items, or wildcards * Theoretically, any metadata can be added in packageDeployOnce.xml, but here are the most commonly present: Connected apps Dashboards Named Credentials Profiles Remote Site Settings Reports SAML SSO Configuration Wave items (CRM Analytics) Example <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <Package xmlns=\"http://soap.sforce.com/2006/04/metadata\"> <!-- Approval processes can contain reference to usernames --> <types> <members>*</members> <name>ApprovalProcess</name> </types> <!-- Connected apps contain org unique auth info so must never be overwritten --> <types> <members>*</members> <name>ConnectedApp</name> </types> <types> <!-- Apps that contain hardcoded dashboard its must be managed directly in production --> <members>DeclareWork</members> <members>Facturation</members> <members>SomeApp2</members> <name>CustomApplication</name> </types> <types> <!-- Once a dashboard is published, it is always managed directly in production --> <members>*</members> <name>Dashboard</name> </types> <types> <!-- flexipages that contain Dashboard ids --> <members>Accueil_administrateur</members> <members>Accueil_administratif</members> <members>Accueil_Commerciaux</members> <members>Accueil_Direction</members> <members>Accueil_Recrutement</members> <name>Flexipage</name> </types> <types> <!-- Name Credentials can contain auth info that are different between dev, uat, preprod and prod: let's not overwrite them ! --> <members>*</members> <name>NamedCredentials</name> </types> <types> <!-- Use permission sets --> <members>*</members> <name>Profile</name> </types> <types> <!-- Remote site settings can be different between dev, uat, preprod and prod: let's not overwrite them ! --> <members>*</members> <name>RemoteSiteSettings</name> </types> <types> <!-- Reports are maintained directly in production --> <members>*</members> <name>Report</name> </types> <!-- SSO Config must be performed directly in org setup --> <types> <members>*</members> <name>SamlSsoConfig</name> </types> <!-- Wave items in case you want to manage them directly in production --> <types> <members>*</members> <name>WaveApplication</name> </types> <types> <members>*</members> <name>WaveDashboard</name> </types> <types> <members>*</members> <name>WaveDataflow</name> </types> <types> <members>*</members> <name>WaveDataset</name> </types> <types> <members>*</members> <name>WaveRecipe</name> </types> <types> <members>*</members> <name>WaveXmd</name> </types> <version>53.0</version> </Package> packageDeployOnChange.xml packageDeployOnChange.xml is slightly different from packageDeployOnce.xml: it will deploy only if the target metadata XML is different from the source metadata XML that we want to deploy This file must be located at manifest/packageDeployOnce.xml It can contain named items, or wildcards * Is has much lower performances than packageDeployOnce.xml , so must be used wisely Theoretically, any metadata can be added in packageDeployOnce.xml, but here are the most commonly present: Sharing Rules Sharing Owner Rules","title":"Overwrite Management"},{"location":"salesforce-ci-cd-config-overwrite/#packagedeployoncexml","text":"","title":"packageDeployOnce.xml"},{"location":"salesforce-ci-cd-config-overwrite/#definition","text":"For different reasons, many metadatas are maintained manually , using production Salesforce org Setup To avoid to overwrite manual updates in setup, you must define at least a manifest/packageDeployOnce.xml file. The rule is simple and must be learnt by heart: Every item which is existing in package.xml AND matching packageDeployOnce.xml AND existing in the target deployment org will NOT be deployed . This means that an item matching packageDeployOnce.xml will be deployed the first time , but never overwritten , so has to be manually maintained in org using Setup . This file must be located at manifest/packageDeployOnce.xml It has the same format than a package.xml , but must be written manually It can contain named items, or wildcards * Theoretically, any metadata can be added in packageDeployOnce.xml, but here are the most commonly present: Connected apps Dashboards Named Credentials Profiles Remote Site Settings Reports SAML SSO Configuration Wave items (CRM Analytics)","title":"Definition"},{"location":"salesforce-ci-cd-config-overwrite/#example","text":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <Package xmlns=\"http://soap.sforce.com/2006/04/metadata\"> <!-- Approval processes can contain reference to usernames --> <types> <members>*</members> <name>ApprovalProcess</name> </types> <!-- Connected apps contain org unique auth info so must never be overwritten --> <types> <members>*</members> <name>ConnectedApp</name> </types> <types> <!-- Apps that contain hardcoded dashboard its must be managed directly in production --> <members>DeclareWork</members> <members>Facturation</members> <members>SomeApp2</members> <name>CustomApplication</name> </types> <types> <!-- Once a dashboard is published, it is always managed directly in production --> <members>*</members> <name>Dashboard</name> </types> <types> <!-- flexipages that contain Dashboard ids --> <members>Accueil_administrateur</members> <members>Accueil_administratif</members> <members>Accueil_Commerciaux</members> <members>Accueil_Direction</members> <members>Accueil_Recrutement</members> <name>Flexipage</name> </types> <types> <!-- Name Credentials can contain auth info that are different between dev, uat, preprod and prod: let's not overwrite them ! --> <members>*</members> <name>NamedCredentials</name> </types> <types> <!-- Use permission sets --> <members>*</members> <name>Profile</name> </types> <types> <!-- Remote site settings can be different between dev, uat, preprod and prod: let's not overwrite them ! --> <members>*</members> <name>RemoteSiteSettings</name> </types> <types> <!-- Reports are maintained directly in production --> <members>*</members> <name>Report</name> </types> <!-- SSO Config must be performed directly in org setup --> <types> <members>*</members> <name>SamlSsoConfig</name> </types> <!-- Wave items in case you want to manage them directly in production --> <types> <members>*</members> <name>WaveApplication</name> </types> <types> <members>*</members> <name>WaveDashboard</name> </types> <types> <members>*</members> <name>WaveDataflow</name> </types> <types> <members>*</members> <name>WaveDataset</name> </types> <types> <members>*</members> <name>WaveRecipe</name> </types> <types> <members>*</members> <name>WaveXmd</name> </types> <version>53.0</version> </Package>","title":"Example"},{"location":"salesforce-ci-cd-config-overwrite/#packagedeployonchangexml","text":"packageDeployOnChange.xml is slightly different from packageDeployOnce.xml: it will deploy only if the target metadata XML is different from the source metadata XML that we want to deploy This file must be located at manifest/packageDeployOnce.xml It can contain named items, or wildcards * Is has much lower performances than packageDeployOnce.xml , so must be used wisely Theoretically, any metadata can be added in packageDeployOnce.xml, but here are the most commonly present: Sharing Rules Sharing Owner Rules","title":"packageDeployOnChange.xml"},{"location":"salesforce-ci-cd-create-new-task/","text":"Use cases Sandbox or scratch org ? Source-tracked sandbox mode Pre-requisites (sandbox) Start new task on sandbox Scratch Org mode Pre-requisites (scratch org) Start new task on scratch org Use cases You use this command when you want to : Create a dedicated new branch Create a scratch org linked to the branch OR assign a dedicated sandbox to the newly created branch Sandbox or scratch org ? With SFDX, usually each member of the teams has its own sandbox or scratch org to work on it. The release manager of the project can tell you if you work with scratch orgs or source-tracked sandboxes , and which sandbox to use if you are in sandbox mode . Source-tracked sandbox mode Pre-requisites (sandbox) You need credentials to login on the source-tracked sandbox you'll work with. It can be: An existing source-tracked sandbox Existing source-tracked sandboxes must be refreshed from time to time to avoid too many conflicts , discuss with your Release Manager ! Release managers: When you create or refresh a sandbox, you can easily activate invalid users with a few clicks A new source-tracked sandbox that you can create from production org It is recommended to create sandbox from the org that is related to the target git branch. Start new task on sandbox Open VsCode SFDX Hardis extension by clicking on in VsCode left bar (loading can task several seconds) Click on Answer the questions then select Sandbox when prompted If the sandbox is not proposed in the list, select the option to authenticate to your desired sandbox Click on and you can start working in it :) Under the hood See details in hardis:work:new command documentation Scratch Org mode Pre-requisites (scratch org) You need the credentials to login on the Dev Hub Org (usually the production environment) Start new task on scratch org Open VsCode SFDX Hardis extension by clicking on in VsCode left bar Click on Answer the questions then select Scratch Org when prompted If the sandbox is not proposed in the list, select the option to authenticate to your desired sandbox Wait for the sandbox creation script to be completed, and you can start working in it :) If you see errors while creating the sandbox, request support from the project release manager Under the hood See details in hardis:work:new command documentation","title":"Create new task"},{"location":"salesforce-ci-cd-create-new-task/#use-cases","text":"You use this command when you want to : Create a dedicated new branch Create a scratch org linked to the branch OR assign a dedicated sandbox to the newly created branch","title":"Use cases"},{"location":"salesforce-ci-cd-create-new-task/#sandbox-or-scratch-org","text":"With SFDX, usually each member of the teams has its own sandbox or scratch org to work on it. The release manager of the project can tell you if you work with scratch orgs or source-tracked sandboxes , and which sandbox to use if you are in sandbox mode .","title":"Sandbox or scratch org ?"},{"location":"salesforce-ci-cd-create-new-task/#source-tracked-sandbox-mode","text":"","title":"Source-tracked sandbox mode"},{"location":"salesforce-ci-cd-create-new-task/#pre-requisites-sandbox","text":"You need credentials to login on the source-tracked sandbox you'll work with. It can be: An existing source-tracked sandbox Existing source-tracked sandboxes must be refreshed from time to time to avoid too many conflicts , discuss with your Release Manager ! Release managers: When you create or refresh a sandbox, you can easily activate invalid users with a few clicks A new source-tracked sandbox that you can create from production org It is recommended to create sandbox from the org that is related to the target git branch.","title":"Pre-requisites (sandbox)"},{"location":"salesforce-ci-cd-create-new-task/#start-new-task-on-sandbox","text":"Open VsCode SFDX Hardis extension by clicking on in VsCode left bar (loading can task several seconds) Click on Answer the questions then select Sandbox when prompted If the sandbox is not proposed in the list, select the option to authenticate to your desired sandbox Click on and you can start working in it :) Under the hood See details in hardis:work:new command documentation","title":"Start new task on sandbox"},{"location":"salesforce-ci-cd-create-new-task/#scratch-org-mode","text":"","title":"Scratch Org mode"},{"location":"salesforce-ci-cd-create-new-task/#pre-requisites-scratch-org","text":"You need the credentials to login on the Dev Hub Org (usually the production environment)","title":"Pre-requisites (scratch org)"},{"location":"salesforce-ci-cd-create-new-task/#start-new-task-on-scratch-org","text":"Open VsCode SFDX Hardis extension by clicking on in VsCode left bar Click on Answer the questions then select Scratch Org when prompted If the sandbox is not proposed in the list, select the option to authenticate to your desired sandbox Wait for the sandbox creation script to be completed, and you can start working in it :) If you see errors while creating the sandbox, request support from the project release manager Under the hood See details in hardis:work:new command documentation","title":"Start new task on scratch org"},{"location":"salesforce-ci-cd-deploy-major-branches/","text":"Minor and Major branches Merge requests between major branches Minor and Major branches Minor branches are individual git branches that do not have a CI/CD associated org Major branches are git branches that have a CI/CD associated org, and each new commit in a major branch automatically triggers a deployment to the associated org. Examples: Minor to major : When a merge request from dev_nico to \u00ecntegration (1) is validated and merged, a new state (commit) is detected in branch integration , so CI server automatically deploys to associated Salesforce org Integration (2) Major to Major : When a merge request from integration to uat (3) is validated and merged, a new state (commit) is detected in branch uat , so CI server automatically deploys to associated Salesforce org UAT (4) Major to Major : When a merge request from preprod to production (5) is validated and merged, a new state (commit) is detected in branch production , so CI server automatically deploys to associated Salesforce org Production (6) Merge requests between major branches Create a New Merge request Set a meaningful title, like recette to uat or uat to production Make sure that Delete source after merge and Squash commits are UNCHECKED Click on Submit merge request Controlling jobs are automatically launched, and should pass as merge requests from minor branches has been in success If jobs fail, it means that you need to perform manual actions in target org, like activating features or manually rename elements if metadatas API Names has been renamed (which is a bad practice but happens) Once all jobs are in success , merge the merge request It will automatically trigger the deployment to the associated Salesforce org","title":"Deploy to major orgs"},{"location":"salesforce-ci-cd-deploy-major-branches/#minor-and-major-branches","text":"Minor branches are individual git branches that do not have a CI/CD associated org Major branches are git branches that have a CI/CD associated org, and each new commit in a major branch automatically triggers a deployment to the associated org. Examples: Minor to major : When a merge request from dev_nico to \u00ecntegration (1) is validated and merged, a new state (commit) is detected in branch integration , so CI server automatically deploys to associated Salesforce org Integration (2) Major to Major : When a merge request from integration to uat (3) is validated and merged, a new state (commit) is detected in branch uat , so CI server automatically deploys to associated Salesforce org UAT (4) Major to Major : When a merge request from preprod to production (5) is validated and merged, a new state (commit) is detected in branch production , so CI server automatically deploys to associated Salesforce org Production (6)","title":"Minor and Major branches"},{"location":"salesforce-ci-cd-deploy-major-branches/#merge-requests-between-major-branches","text":"Create a New Merge request Set a meaningful title, like recette to uat or uat to production Make sure that Delete source after merge and Squash commits are UNCHECKED Click on Submit merge request Controlling jobs are automatically launched, and should pass as merge requests from minor branches has been in success If jobs fail, it means that you need to perform manual actions in target org, like activating features or manually rename elements if metadatas API Names has been renamed (which is a bad practice but happens) Once all jobs are in success , merge the merge request It will automatically trigger the deployment to the associated Salesforce org","title":"Merge requests between major branches"},{"location":"salesforce-ci-cd-home/","text":"Introduction Use sfdx-hardis CI/CD Release Management Setup sfdx-hardis CI/CD Introduction There are many ways to do DevOps with Salesforce, each of them have their advantages and inconveniences, like showed in the following comparison table. You can setup and use a full CI/CD pipeline for your Salesforce projects using sfdx-hardis. We provide Gitlab & Azure pipelines, and they can easily be adapted to other platforms like Github Actions , Jenkins ... If you speak fluently git , sfdx & DevOps , you can be fully autonomous to setup and use Salesforce CI/CD, otherwise you can contact us at Cloudity (or your favorite Salesforce integrator) and we'll be glad to assist you :) As everything is open-source , there is no license costs ! Here is an advanced example of a Salesforce CI/CD Pipeline that you can easily define using sfdx-hardis. You can define much simpler branch/orgs models, to manage only RUN operations. See detailed article on SalesforceDevOps.net Use sfdx-hardis CI/CD Please read Contributor Guide to know how to work on CI/CD projects, as an Business consultant , a Developer or a Release Manager Release Management Please read Release Manager Guide to know how to be a release manager on Salesforce CI/CD project. Setup sfdx-hardis CI/CD Please read Setup Guide to know how to initialize and maintain a Salesforce CI/CD project.","title":"CI/CD Home"},{"location":"salesforce-ci-cd-home/#introduction","text":"There are many ways to do DevOps with Salesforce, each of them have their advantages and inconveniences, like showed in the following comparison table. You can setup and use a full CI/CD pipeline for your Salesforce projects using sfdx-hardis. We provide Gitlab & Azure pipelines, and they can easily be adapted to other platforms like Github Actions , Jenkins ... If you speak fluently git , sfdx & DevOps , you can be fully autonomous to setup and use Salesforce CI/CD, otherwise you can contact us at Cloudity (or your favorite Salesforce integrator) and we'll be glad to assist you :) As everything is open-source , there is no license costs ! Here is an advanced example of a Salesforce CI/CD Pipeline that you can easily define using sfdx-hardis. You can define much simpler branch/orgs models, to manage only RUN operations. See detailed article on SalesforceDevOps.net","title":"Introduction"},{"location":"salesforce-ci-cd-home/#use-sfdx-hardis-cicd","text":"Please read Contributor Guide to know how to work on CI/CD projects, as an Business consultant , a Developer or a Release Manager","title":"Use sfdx-hardis CI/CD"},{"location":"salesforce-ci-cd-home/#release-management","text":"Please read Release Manager Guide to know how to be a release manager on Salesforce CI/CD project.","title":"Release Management"},{"location":"salesforce-ci-cd-home/#setup-sfdx-hardis-cicd","text":"Please read Setup Guide to know how to initialize and maintain a Salesforce CI/CD project.","title":"Setup sfdx-hardis CI/CD"},{"location":"salesforce-ci-cd-merge-request-gitlab/","text":"Create a merge request using Gitlab Go in your online repository in your web browser (example: https://gitlab.com/trailheadapps/dreamhouse-lwc ) Go to menu Merge Requests Create a New Merge request Click on Submit merge request Controlling jobs are automatically launched, you can now ask your release manager to validate a merge request If you are a developer, (or even a business consultant depending on the project organization), you may have the responsibility to make sure than controlling jobs are valid ( check-deploy job and code-quality job in success ) If you need to add additional updates to an existing merge requests, you just this to follow again this guide from the beginning, except the part \"Create a merge request\". Any new commit pushed on a branch where there is already a merge request will trigger again the control jobs .","title":"On Gitlab"},{"location":"salesforce-ci-cd-merge-request-gitlab/#create-a-merge-request-using-gitlab","text":"Go in your online repository in your web browser (example: https://gitlab.com/trailheadapps/dreamhouse-lwc ) Go to menu Merge Requests Create a New Merge request Click on Submit merge request Controlling jobs are automatically launched, you can now ask your release manager to validate a merge request If you are a developer, (or even a business consultant depending on the project organization), you may have the responsibility to make sure than controlling jobs are valid ( check-deploy job and code-quality job in success ) If you need to add additional updates to an existing merge requests, you just this to follow again this guide from the beginning, except the part \"Create a merge request\". Any new commit pushed on a branch where there is already a merge request will trigger again the control jobs .","title":"Create a merge request using Gitlab"},{"location":"salesforce-ci-cd-publish-task/","text":"Commit your updates Retrieve metadatas Stage and commit Prepare merge request Create merge request Using Gitlab Using Github Using Azure Commit your updates Retrieve metadatas If you made updates on your org that you have not pulled yet, Use command to pull your latest updates in local files If you updated config elements that you do not see in your local files, you may discuss with your release manager to automate force retrieve metadatas If it is not possible to use pull configuration, you may retrieve metadatas using (but it will retrieve locally many files and it will be harder to select the ones you really need, select carefully the items that you stage and commit) Stage and commit In VsCode Git extension, stage and commit created, updated and deleted files that you want to publish By selecting the metadata files you can see the differences with the previous versions, to know if you want to publish or not an updated file Never use Stage all function If you see standard items like standard fields that do not contain customizations, do not commit them The following video shows how to perform theses operations Prepare merge request Once your commit is completed , run command to prepare your merge request. As you committed your files like explained in the previous section, select option when prompted. Wait for the script to complete, and select Push commit to server when prompted Under the hood The script performs the following operations: Update manifest/package.xml automatically according to the committed updates Clean XML of metadatas according to .sfdx-hardis.yml config property autoCleanTypes and autoRemoveUserPermissions New git commit with automated updates Git push commit to git server More details in hardis:work:save command documentation Create merge request It is now time to create your merge request to technically publish your updates at the upper level ! Depending on the CI platform you use, follow the related guide. Important : If you are publishing to a RUN branch (ex: preprod ), AND the project also has a BUILD branch (ex: integration ), you need to create 2 merge requests : One from your feature or fix branch with the BUILD branch as target One from your feature or fix branch with the RUN branch as target Using Gitlab See Create a merge request using Gitlab Using Azure See Create a merge request using Azure Using GitHub See Create a merge request using Github","title":"Publish a task"},{"location":"salesforce-ci-cd-publish-task/#commit-your-updates","text":"","title":"Commit your updates"},{"location":"salesforce-ci-cd-publish-task/#retrieve-metadatas","text":"If you made updates on your org that you have not pulled yet, Use command to pull your latest updates in local files If you updated config elements that you do not see in your local files, you may discuss with your release manager to automate force retrieve metadatas If it is not possible to use pull configuration, you may retrieve metadatas using (but it will retrieve locally many files and it will be harder to select the ones you really need, select carefully the items that you stage and commit)","title":"Retrieve metadatas"},{"location":"salesforce-ci-cd-publish-task/#stage-and-commit","text":"In VsCode Git extension, stage and commit created, updated and deleted files that you want to publish By selecting the metadata files you can see the differences with the previous versions, to know if you want to publish or not an updated file Never use Stage all function If you see standard items like standard fields that do not contain customizations, do not commit them The following video shows how to perform theses operations","title":"Stage and commit"},{"location":"salesforce-ci-cd-publish-task/#prepare-merge-request","text":"Once your commit is completed , run command to prepare your merge request. As you committed your files like explained in the previous section, select option when prompted. Wait for the script to complete, and select Push commit to server when prompted Under the hood The script performs the following operations: Update manifest/package.xml automatically according to the committed updates Clean XML of metadatas according to .sfdx-hardis.yml config property autoCleanTypes and autoRemoveUserPermissions New git commit with automated updates Git push commit to git server More details in hardis:work:save command documentation","title":"Prepare merge request"},{"location":"salesforce-ci-cd-publish-task/#create-merge-request","text":"It is now time to create your merge request to technically publish your updates at the upper level ! Depending on the CI platform you use, follow the related guide. Important : If you are publishing to a RUN branch (ex: preprod ), AND the project also has a BUILD branch (ex: integration ), you need to create 2 merge requests : One from your feature or fix branch with the BUILD branch as target One from your feature or fix branch with the RUN branch as target","title":"Create merge request"},{"location":"salesforce-ci-cd-publish-task/#using-gitlab","text":"See Create a merge request using Gitlab","title":"Using Gitlab"},{"location":"salesforce-ci-cd-publish-task/#using-azure","text":"See Create a merge request using Azure","title":"Using Azure"},{"location":"salesforce-ci-cd-publish-task/#using-github","text":"See Create a merge request using Github","title":"Using GitHub"},{"location":"salesforce-ci-cd-pull-request-azure/","text":"Create a Pull Request using Azure Go in your online repository in your web browser (example: https://dev.azure.com/mycompany/trailheadapps/dreamhouse-lwc ) Go to menu Repos -> Pull Requests Click on New pull request Click on Create Controlling jobs are automatically launched, you can now ask your release manager to validate a merge request If you are a developer, (or even a business consultant depending on the project organization), you may have the responsibility to make sure than controlling jobs are valid ( check-deploy job and code-quality job in success ) If you need to add additional updates to an existing merge requests, you just this to follow again this guide from the beginning, except the part \"Create a merge request\". Any new commit pushed on a branch where there is already a merge request will trigger again the control jobs .","title":"On Azure"},{"location":"salesforce-ci-cd-pull-request-azure/#create-a-pull-request-using-azure","text":"Go in your online repository in your web browser (example: https://dev.azure.com/mycompany/trailheadapps/dreamhouse-lwc ) Go to menu Repos -> Pull Requests Click on New pull request Click on Create Controlling jobs are automatically launched, you can now ask your release manager to validate a merge request If you are a developer, (or even a business consultant depending on the project organization), you may have the responsibility to make sure than controlling jobs are valid ( check-deploy job and code-quality job in success ) If you need to add additional updates to an existing merge requests, you just this to follow again this guide from the beginning, except the part \"Create a merge request\". Any new commit pushed on a branch where there is already a merge request will trigger again the control jobs .","title":"Create a Pull Request using Azure"},{"location":"salesforce-ci-cd-pull-request-github/","text":"Create a Pull Request using GitHub Not documented yet, see Create a pull request using Azure , it's almost the same ! You can also create a pull request here to update this documentation :)","title":"On Github"},{"location":"salesforce-ci-cd-pull-request-github/#create-a-pull-request-using-github","text":"Not documented yet, see Create a pull request using Azure , it's almost the same ! You can also create a pull request here to update this documentation :)","title":"Create a Pull Request using GitHub"},{"location":"salesforce-ci-cd-release-home/","text":"In order to respect the best DevOps practices, it's highly recommended for project teams to have members taking the role of Release Manager The release manager(s) responsibilities are: Train & support all project members about the use Salesforce CI/CD on the project Provide source-tracked sandboxes to users Validate users merge requests Proceed deployments to major branches/org (UAT,Preprod,Production...) Configure CI/CD project","title":"Release Manager Home"},{"location":"salesforce-ci-cd-retrieve/","text":"Automated force retrieve It happens that when calling sfdx hardis:scratch:pull , some elements are not retrieved. The most usual cases are updates on: CustomApplication RecordTypes See how to configure .sfdx-hardis to force the retrieve of metadatas with autoRetrieveWhenPull property. Manual Retrieve You can also use command to manually retrieve metadatas, but it will pull a lot of metadatas so you will have to carefully select them for your commit. Under the hood See details in hardis:source:retrieve command documentation","title":"Source retrieve issues"},{"location":"salesforce-ci-cd-retrieve/#automated-force-retrieve","text":"It happens that when calling sfdx hardis:scratch:pull , some elements are not retrieved. The most usual cases are updates on: CustomApplication RecordTypes See how to configure .sfdx-hardis to force the retrieve of metadatas with autoRetrieveWhenPull property.","title":"Automated force retrieve"},{"location":"salesforce-ci-cd-retrieve/#manual-retrieve","text":"You can also use command to manually retrieve metadatas, but it will pull a lot of metadatas so you will have to carefully select them for your commit. Under the hood See details in hardis:source:retrieve command documentation","title":"Manual Retrieve"},{"location":"salesforce-ci-cd-setup-activate-org/","text":"Dev Hub and sandbox tracking You must declare an org (usually production) as a DevHub and activate sandbox tracking to be able to work with advanced features of Salesforce DX Login to Dev Hub org Go to Setup -> Dev Hub Activate Dev Hub Activate Sandbox tracking If sandbox were already existing, you need to refresh them if you want their source tracking to be activated To use Create from from an existing sandbox, you need to refresh it before the cloning, else the nex sandbox won't have the tracking activated Major orgs When there is a new state of a major branch (after a merge), a deployment to the related major Org will be automatically triggered by the CI server. You need to have a Salesforce sandbox corresponding to each major branch. Example: Branch integration - create a sandbox named Integration Branch uat - create a sandbox named UAT Branch preprod - create a sandbox named Preprod If you are converting an existing project to CI/CD and already have existing orgs, just create an org Integration , and you'll refresh later UAT and PreProd , once your setup will be more advanced.","title":"DevHub and Sandbox Tracking"},{"location":"salesforce-ci-cd-setup-activate-org/#dev-hub-and-sandbox-tracking","text":"You must declare an org (usually production) as a DevHub and activate sandbox tracking to be able to work with advanced features of Salesforce DX Login to Dev Hub org Go to Setup -> Dev Hub Activate Dev Hub Activate Sandbox tracking If sandbox were already existing, you need to refresh them if you want their source tracking to be activated To use Create from from an existing sandbox, you need to refresh it before the cloning, else the nex sandbox won't have the tracking activated","title":"Dev Hub and sandbox tracking"},{"location":"salesforce-ci-cd-setup-activate-org/#major-orgs","text":"When there is a new state of a major branch (after a merge), a deployment to the related major Org will be automatically triggered by the CI server. You need to have a Salesforce sandbox corresponding to each major branch. Example: Branch integration - create a sandbox named Integration Branch uat - create a sandbox named UAT Branch preprod - create a sandbox named Preprod If you are converting an existing project to CI/CD and already have existing orgs, just create an org Integration , and you'll refresh later UAT and PreProd , once your setup will be more advanced.","title":"Major orgs"},{"location":"salesforce-ci-cd-setup-auth/","text":"Major orgs To automate deployments from major branches to their related org , you need to configure the secure authentication from CI server to a SF connected app . Note: You need openssl installed on your computer (available in Git bash ) Remain in your initialization branch cicd , or a sub branch of your lowest level major branch (usually integration ) For each major branch to link to an org, run the sfdx-hardis command Configuration -> Configure Org Ci Authentication Or the command line version: sfdx hardis:project:configure:auth For example, run the command for integration , uat , preprod and production major branches. Note: If you have errors in your apex tests classes, you may not be able to configure the app for Production org. You will need do create the connected app manually by following the instructions in yellow in the error message. You can do it later, after having succeeded to merge the first merge request in lower major branch (usually integration ) Under the hood This command will create/update: .sfdx-hardis.yml configuration file (repo) Self signed certificate (encrypted in repo) Connected App (uploaded to org via metadata api) CI environment variables (manually set in CI/CD server UIs) Dev Hub If you are using scratch orgs , you need to also configure authentication for the Dev Hub (even if you already configured authentication for production org) To do that, run the following command sfdx hardis:project:configure:auth --devhub","title":"CI Server Authentication"},{"location":"salesforce-ci-cd-setup-auth/#major-orgs","text":"To automate deployments from major branches to their related org , you need to configure the secure authentication from CI server to a SF connected app . Note: You need openssl installed on your computer (available in Git bash ) Remain in your initialization branch cicd , or a sub branch of your lowest level major branch (usually integration ) For each major branch to link to an org, run the sfdx-hardis command Configuration -> Configure Org Ci Authentication Or the command line version: sfdx hardis:project:configure:auth For example, run the command for integration , uat , preprod and production major branches. Note: If you have errors in your apex tests classes, you may not be able to configure the app for Production org. You will need do create the connected app manually by following the instructions in yellow in the error message. You can do it later, after having succeeded to merge the first merge request in lower major branch (usually integration ) Under the hood This command will create/update: .sfdx-hardis.yml configuration file (repo) Self signed certificate (encrypted in repo) Connected App (uploaded to org via metadata api) CI environment variables (manually set in CI/CD server UIs)","title":"Major orgs"},{"location":"salesforce-ci-cd-setup-auth/#dev-hub","text":"If you are using scratch orgs , you need to also configure authentication for the Dev Hub (even if you already configured authentication for production org) To do that, run the following command sfdx hardis:project:configure:auth --devhub","title":"Dev Hub"},{"location":"salesforce-ci-cd-setup-existing-org/","text":"If this is a new Salesforce project, skip this step Retrieve Metadatas Automated Metadatas Cleaning Remove Managed items Remove (hidden) files Remove empty items Standard objects without custom Manual Metadata Cleaning Retrieve installed packages Create first merge request Retrieve Metadatas Run the following command that will retrieve locally all the metadatas of production org sfdx hardis:org:retrieve:sources:dx --shape -u YOURSOURCEORGUSERNAME Automated Metadatas Cleaning You have way too many metadatas locally, including standard and managed items that are not customize so are not needed in the repository. Proceed to the following steps to automatically remove many of them, then proceed to the final manual cleaning Remove Managed items Run the following command to delete all elements with a namespace. sfdx hardis:project:clean:manageditems --namespace SOMENAMESPACE Remove (hidden) files Some items have no namespace but are managed anyway, and contain (hidden) , so they must me deleted with the following command. sfdx hardis:project:clean:hiddenitems Remove empty items Some files are empty and do not need to be kept in repository, remove them using the following command. sfdx hardis:project:clean:emptyitems Standard objects without custom The retrieve command pulled all standard objects and fields. Those which has never been customized do not need to remain in repository, delete them using the following command (that can take some time) sfdx hardis:project:clean:standarditems Manual Metadata Cleaning Automated Metadata cleaning removed a lot of items, but many are remaining that are useless in the repo. Manually delete files (or even folders) that are maintained directly in production org applications : Delete the ones starting with standard__ \u00e0ppMenus : Delete all folder cleanDataServices : Delete all folder dashboards : Delete all user dashboards emailServices : Delete all folder flowDefinitions : Delete all folder (Salesforce now uses flow folder) installedPackages : Delete all folder layouts : Delete all standard layouts that has not been customized profiles : Delete all standard profiles profilePasswordPolicies : Delete all folder profileSessionSettings : Delete all folder, reports : Delete all reports that have been created directly in production org Retrieve installed packages Run the following command to retrieve packages installed on production org sfdx hardis:org:retrieve:packageconfig -u YOUR_PROD_ORG_USER This will update file config/.sfdx-hardis.yml Keep only the packages that you are using in all orgs. Define installDuringDeployments property to true if you need this package installed on all orgs Define installOnScratchOrgs property to true if you are using scratch orgs and need this package installed when you create a new scratch org Example: installedPackages: - Id: 0A37Z000000AtDYSA0 SubscriberPackageId: 033i0000000LVMYAA4 SubscriberPackageName: Marketing Cloud SubscriberPackageNamespace: et4ae5 SubscriberPackageVersionId: 04t6S000001UjutQAC SubscriberPackageVersionName: Marketing Cloud SubscriberPackageVersionNumber: 238.3.0.2 installOnScratchOrgs: true installDuringDeployments: true - Id: 0A35r0000009F9CCAU SubscriberPackageId: 033b0000000Pf2AAAS SubscriberPackageName: Declarative Lookup Rollup Summaries Tool SubscriberPackageNamespace: dlrs SubscriberPackageVersionId: 04t5p000001BmLvAAK SubscriberPackageVersionName: Release SubscriberPackageVersionNumber: 2.15.0.9 installOnScratchOrgs: true installDuringDeployments: true Create first merge request Time to create the first merge request ! You'll probably have many updates to perform in new commits before having all jobs in green :)","title":"Init from Existing Org"},{"location":"salesforce-ci-cd-setup-existing-org/#retrieve-metadatas","text":"Run the following command that will retrieve locally all the metadatas of production org sfdx hardis:org:retrieve:sources:dx --shape -u YOURSOURCEORGUSERNAME","title":"Retrieve Metadatas"},{"location":"salesforce-ci-cd-setup-existing-org/#automated-metadatas-cleaning","text":"You have way too many metadatas locally, including standard and managed items that are not customize so are not needed in the repository. Proceed to the following steps to automatically remove many of them, then proceed to the final manual cleaning","title":"Automated Metadatas Cleaning"},{"location":"salesforce-ci-cd-setup-existing-org/#remove-managed-items","text":"Run the following command to delete all elements with a namespace. sfdx hardis:project:clean:manageditems --namespace SOMENAMESPACE","title":"Remove Managed items"},{"location":"salesforce-ci-cd-setup-existing-org/#remove-hidden-files","text":"Some items have no namespace but are managed anyway, and contain (hidden) , so they must me deleted with the following command. sfdx hardis:project:clean:hiddenitems","title":"Remove (hidden) files"},{"location":"salesforce-ci-cd-setup-existing-org/#remove-empty-items","text":"Some files are empty and do not need to be kept in repository, remove them using the following command. sfdx hardis:project:clean:emptyitems","title":"Remove empty items"},{"location":"salesforce-ci-cd-setup-existing-org/#standard-objects-without-custom","text":"The retrieve command pulled all standard objects and fields. Those which has never been customized do not need to remain in repository, delete them using the following command (that can take some time) sfdx hardis:project:clean:standarditems","title":"Standard objects without custom"},{"location":"salesforce-ci-cd-setup-existing-org/#manual-metadata-cleaning","text":"Automated Metadata cleaning removed a lot of items, but many are remaining that are useless in the repo. Manually delete files (or even folders) that are maintained directly in production org applications : Delete the ones starting with standard__ \u00e0ppMenus : Delete all folder cleanDataServices : Delete all folder dashboards : Delete all user dashboards emailServices : Delete all folder flowDefinitions : Delete all folder (Salesforce now uses flow folder) installedPackages : Delete all folder layouts : Delete all standard layouts that has not been customized profiles : Delete all standard profiles profilePasswordPolicies : Delete all folder profileSessionSettings : Delete all folder, reports : Delete all reports that have been created directly in production org","title":"Manual Metadata Cleaning"},{"location":"salesforce-ci-cd-setup-existing-org/#retrieve-installed-packages","text":"Run the following command to retrieve packages installed on production org sfdx hardis:org:retrieve:packageconfig -u YOUR_PROD_ORG_USER This will update file config/.sfdx-hardis.yml Keep only the packages that you are using in all orgs. Define installDuringDeployments property to true if you need this package installed on all orgs Define installOnScratchOrgs property to true if you are using scratch orgs and need this package installed when you create a new scratch org Example: installedPackages: - Id: 0A37Z000000AtDYSA0 SubscriberPackageId: 033i0000000LVMYAA4 SubscriberPackageName: Marketing Cloud SubscriberPackageNamespace: et4ae5 SubscriberPackageVersionId: 04t6S000001UjutQAC SubscriberPackageVersionName: Marketing Cloud SubscriberPackageVersionNumber: 238.3.0.2 installOnScratchOrgs: true installDuringDeployments: true - Id: 0A35r0000009F9CCAU SubscriberPackageId: 033b0000000Pf2AAAS SubscriberPackageName: Declarative Lookup Rollup Summaries Tool SubscriberPackageNamespace: dlrs SubscriberPackageVersionId: 04t5p000001BmLvAAK SubscriberPackageVersionName: Release SubscriberPackageVersionNumber: 2.15.0.9 installOnScratchOrgs: true installDuringDeployments: true","title":"Retrieve installed packages"},{"location":"salesforce-ci-cd-setup-existing-org/#create-first-merge-request","text":"Time to create the first merge request ! You'll probably have many updates to perform in new commits before having all jobs in green :)","title":"Create first merge request"},{"location":"salesforce-ci-cd-setup-git/","text":"Create git repository Create major branches Small project Medium project Complex project Protect major branches Define merge rules Create git repository Your git repository will be used to store and manage the versioning of your Salesforce DX sources Create a new repository, for example myclient-sfdx Select Initialize repository with a README Create major branches In Repository -> Branches , create the branch tree according to the complexity of your project Below are examples of branches tree that you can define. Small project main (will be related to Production org) preprod (will be related to PreProd org) Medium project main (will be related to Production org) preprod (will be related to PreProd org) integration (will be related to Integration org) Complex project main (will be related to Production org) preprod (will be related to PreProd org) uat (will be related to UAT org) integration (will be related to Integration org) Example of branching strategy Protect major branches To avoid messes, protected branches must be updated only using Merge Requests Go to menu Settings -> Repository Define your developments target branch (usually integration ) as Default Branch Protect all branches that will have a corresponding Salesforce org (main, preprod, uat, integration...) Recommended practice is to set Maintainer in Allowed to merge to all protected branches, except integration Example Define merge rules Let's make sure that merge request jobs will be valid before being merged ! (can be deactivated later but at your own risk) Go in menu Settings -> General , then in section Merge requests (expand) Leave all default values, except checkbox Pipelines must succeed that must be checked","title":"Init Git repository"},{"location":"salesforce-ci-cd-setup-git/#create-git-repository","text":"Your git repository will be used to store and manage the versioning of your Salesforce DX sources Create a new repository, for example myclient-sfdx Select Initialize repository with a README","title":"Create git repository"},{"location":"salesforce-ci-cd-setup-git/#create-major-branches","text":"In Repository -> Branches , create the branch tree according to the complexity of your project Below are examples of branches tree that you can define.","title":"Create major branches"},{"location":"salesforce-ci-cd-setup-git/#small-project","text":"main (will be related to Production org) preprod (will be related to PreProd org)","title":"Small project"},{"location":"salesforce-ci-cd-setup-git/#medium-project","text":"main (will be related to Production org) preprod (will be related to PreProd org) integration (will be related to Integration org)","title":"Medium project"},{"location":"salesforce-ci-cd-setup-git/#complex-project","text":"main (will be related to Production org) preprod (will be related to PreProd org) uat (will be related to UAT org) integration (will be related to Integration org) Example of branching strategy","title":"Complex project"},{"location":"salesforce-ci-cd-setup-git/#protect-major-branches","text":"To avoid messes, protected branches must be updated only using Merge Requests Go to menu Settings -> Repository Define your developments target branch (usually integration ) as Default Branch Protect all branches that will have a corresponding Salesforce org (main, preprod, uat, integration...) Recommended practice is to set Maintainer in Allowed to merge to all protected branches, except integration Example","title":"Protect major branches"},{"location":"salesforce-ci-cd-setup-git/#define-merge-rules","text":"Let's make sure that merge request jobs will be valid before being merged ! (can be deactivated later but at your own risk) Go in menu Settings -> General , then in section Merge requests (expand) Leave all default values, except checkbox Pipelines must succeed that must be checked","title":"Define merge rules"},{"location":"salesforce-ci-cd-setup-home/","text":"Pre-requisites Setup steps Pre-requisites Training with Git and Salesforce DX If you don't have experience with them, here are links to learning resources Git Tuto SFDX Trailmix Install necessary applications on your computer Access to a Git server (Gitlab, GitHub, Azure...) with CI/CD server minutes Access to a Salesforce production org Setup steps Create git repository and configure branches Activate DevHub or Sandbox Tracking Initialize sfdx project Configure authentication Retrieve sources from an existing org (optional) Configure Salesforce DX project Integrations (optional) Configure Microsoft Teams notifications (optional) Configure Gitlab to receive deployment results on on Merge Requests (optional) Configure Azure Pipelines to receive deployment results on on Pull Requests (optional)","title":"CI/CD Setup Home"},{"location":"salesforce-ci-cd-setup-home/#pre-requisites","text":"Training with Git and Salesforce DX If you don't have experience with them, here are links to learning resources Git Tuto SFDX Trailmix Install necessary applications on your computer Access to a Git server (Gitlab, GitHub, Azure...) with CI/CD server minutes Access to a Salesforce production org","title":"Pre-requisites"},{"location":"salesforce-ci-cd-setup-home/#setup-steps","text":"Create git repository and configure branches Activate DevHub or Sandbox Tracking Initialize sfdx project Configure authentication Retrieve sources from an existing org (optional) Configure Salesforce DX project Integrations (optional) Configure Microsoft Teams notifications (optional) Configure Gitlab to receive deployment results on on Merge Requests (optional) Configure Azure Pipelines to receive deployment results on on Pull Requests (optional)","title":"Setup steps"},{"location":"salesforce-ci-cd-setup-init-project/","text":"Clone locally the repository that you created in previous step (or reuse an existing sfdx project repo) Create a new git branch named cicd under your lower major branch (usually integration ) Run the following command and select options to create a new sfdx-hardis project sfdx hardis:project:create Open file manifest/package.xml and replace the content by the following code <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <Package xmlns=\"http://soap.sforce.com/2006/04/metadata\"> <version>56.0</version> <!-- use current latest Salesforce api version --> </Package> IF you are using Gitlab CI and sandboxes only (not scratch orgs), open gitlab-ci-config.yml at the root of the repository, and set variable USE_SCRATCH_ORGS to \"false\" You can now go to step Setup CI Authentication","title":"Init SFDX Project"},{"location":"salesforce-ci-cd-setup-integration-azure/","text":"Azure Pull Request notes In order to avoid to have to open job logs to see deployment errors, sfdx-hardis can post them as a thread on the Pull Request UI To use this capability: A build policy must be defined See https://docs.microsoft.com/en-US/azure/devops/repos/git/branch-policies?view=azure-devops&tabs=browser#build-validation You must allow Contribute and Contribute to Pull Requests on your Build Service (Settings -> Repositories -> Select your build service) Everytime you will make a pull request, the CI job will post its result as comment ! Example with deployment errors Example with failing test classes Example when all is ok :) Notes: This integration works with sfdx-hardis pipeline, but also on home-made pipelines, just call sfdx hardis:source:deploy instead of sfdx force:source:deploy ! This integration use the following variables: SYSTEM_ACCESSTOKEN: $(System.AccessToken) CI_SFDX_HARDIS_AZURE_TOKEN: $(System.AccessToken) SYSTEM_COLLECTIONURI: $(System.CollectionUri) SYSTEM_JOB_DISPLAY_NAME: $(System.JobDisplayName) SYSTEM_JOB_ID: $(System.JobId) SYSTEM_PULLREQUEST_PULLREQUESTID: $(System.PullRequest.PullRequestId) SYSTEM_TEAMPROJECT: $(System.TeamProject) BUILD_BUILD_ID: $(Build.BuildId) BUILD_REPOSITORY_ID: $(Build.Repository.ID)","title":"Azure DevOps"},{"location":"salesforce-ci-cd-setup-integration-azure/#azure-pull-request-notes","text":"In order to avoid to have to open job logs to see deployment errors, sfdx-hardis can post them as a thread on the Pull Request UI To use this capability: A build policy must be defined See https://docs.microsoft.com/en-US/azure/devops/repos/git/branch-policies?view=azure-devops&tabs=browser#build-validation You must allow Contribute and Contribute to Pull Requests on your Build Service (Settings -> Repositories -> Select your build service) Everytime you will make a pull request, the CI job will post its result as comment ! Example with deployment errors Example with failing test classes Example when all is ok :) Notes: This integration works with sfdx-hardis pipeline, but also on home-made pipelines, just call sfdx hardis:source:deploy instead of sfdx force:source:deploy ! This integration use the following variables: SYSTEM_ACCESSTOKEN: $(System.AccessToken) CI_SFDX_HARDIS_AZURE_TOKEN: $(System.AccessToken) SYSTEM_COLLECTIONURI: $(System.CollectionUri) SYSTEM_JOB_DISPLAY_NAME: $(System.JobDisplayName) SYSTEM_JOB_ID: $(System.JobId) SYSTEM_PULLREQUEST_PULLREQUESTID: $(System.PullRequest.PullRequestId) SYSTEM_TEAMPROJECT: $(System.TeamProject) BUILD_BUILD_ID: $(Build.BuildId) BUILD_REPOSITORY_ID: $(Build.Repository.ID)","title":"Azure Pull Request notes"},{"location":"salesforce-ci-cd-setup-integration-gitlab/","text":"Gitlab Merge request notes In order to avoid to have to open job logs to see deployment errors, sfdx-hardis can post them as Notes on the Merge Request UI To use this capability: Go to Settings -> Access Tokens -> Create a project access token with level Developer and scope api , and name it SFDX HARDIS BOT Go to Settings -> CI/CD -> Variables -> Create a variable named CI_SFDX_HARDIS_GITLAB_TOKEN and past the access token value Everytime you will make a merge request, the CI job will post its result as comment ! Example with deployment errors Example with failing test classes Notes: This integration works with sfdx-hardis pipeline, but also on home-made pipelines, just call sfdx hardis:source:deploy instead of sfdx force:source:deploy ! This integration use the following variables: CI_SFDX_HARDIS_GITLAB_TOKEN CI_SERVER_URL (provided by Gitlab CI) CI_PROJECT_ID (provided by Gitlab CI) CI_MERGE_REQUEST_IID (provided by Gitlab CI) CI_JOB_NAME (provided by Gitlab CI) CI_JOB_URL (provided by Gitlab CI)","title":"Gitlab"},{"location":"salesforce-ci-cd-setup-integration-gitlab/#gitlab-merge-request-notes","text":"In order to avoid to have to open job logs to see deployment errors, sfdx-hardis can post them as Notes on the Merge Request UI To use this capability: Go to Settings -> Access Tokens -> Create a project access token with level Developer and scope api , and name it SFDX HARDIS BOT Go to Settings -> CI/CD -> Variables -> Create a variable named CI_SFDX_HARDIS_GITLAB_TOKEN and past the access token value Everytime you will make a merge request, the CI job will post its result as comment ! Example with deployment errors Example with failing test classes Notes: This integration works with sfdx-hardis pipeline, but also on home-made pipelines, just call sfdx hardis:source:deploy instead of sfdx force:source:deploy ! This integration use the following variables: CI_SFDX_HARDIS_GITLAB_TOKEN CI_SERVER_URL (provided by Gitlab CI) CI_PROJECT_ID (provided by Gitlab CI) CI_MERGE_REQUEST_IID (provided by Gitlab CI) CI_JOB_NAME (provided by Gitlab CI) CI_JOB_URL (provided by Gitlab CI)","title":"Gitlab Merge request notes"},{"location":"salesforce-ci-cd-setup-integration-ms-teams/","text":"In case issues or suspiscious results are found during CI jobs(failures, critical updates to come...), sfdx-hardis can send notifications to Microsoft Teams channels. You can define hooks using env variables: MS_TEAMS_WEBHOOK_URL (Used by default if no level hooks are defined) MS_TEAMS_WEBHOOK_URL_CRITICAL MS_TEAMS_WEBHOOK_URL_SEVERE MS_TEAMS_WEBHOOK_URL_WARNING MS_TEAMS_WEBHOOK_URL_INFO Ex: MS_TEAMS_WEBHOOK_URL_CRITICAL=https://mycompany.webhook.office.com/webhookb2/f49c28c6-d10b-412c-b961-fge456bd@c1a7fa9b-90b3-49ab-b5e2-345HG88c/IncomingWebhook/b43c20SDSGFG56712d848bc1cebb17/53ee2e22-a867-4e74-868a-F3fs3935","title":"Microsoft Teams"},{"location":"salesforce-ci-cd-setup-integrations-home/","text":"Every info that sfdx-hardis can provide is available in log files or console terminals. In order to enhance the user experience, integrations with external tools can be configured. Microsoft Teams Notifications Alerts Gitlab Deployment status in Merge Request notes Azure Pipelines Deployment status in Pull Request threads Github Soon !","title":"Integrations Home"},{"location":"salesforce-ci-cd-setup-merge-request/","text":"Initialization merge request Common issues Translations Initialization merge request Create your first merge request with branch cicd as source, and your lower major branch as target (usually integration ) Make sure that before merging your first merge request, file manifest/destructiveChange.xml is empty You will see errors, but it is normal: Follow Maintainer Guide to complete your configuration ! Once all controlling jobs are in success, your CI/CD setup is completed ! Common issues Translations If you removed Dashboards and reports from the repo, their translations can remain in files like translations/en_US.xml Remove all related XML blocks as they contain unused translations.","title":"First merge request"},{"location":"salesforce-ci-cd-setup-merge-request/#initialization-merge-request","text":"Create your first merge request with branch cicd as source, and your lower major branch as target (usually integration ) Make sure that before merging your first merge request, file manifest/destructiveChange.xml is empty You will see errors, but it is normal: Follow Maintainer Guide to complete your configuration ! Once all controlling jobs are in success, your CI/CD setup is completed !","title":"Initialization merge request"},{"location":"salesforce-ci-cd-setup-merge-request/#common-issues","text":"","title":"Common issues"},{"location":"salesforce-ci-cd-setup-merge-request/#translations","text":"If you removed Dashboards and reports from the repo, their translations can remain in files like translations/en_US.xml Remove all related XML blocks as they contain unused translations.","title":"Translations"},{"location":"salesforce-ci-cd-use-home/","text":"Initialization Make updates on your Salesforce project Initialization You need a stack of applications and to have Salesforce sources on your computer to be able to start to work on a CI/CD project. Install necessary applications on your computer (to perform only once by computer ) Clone git repository on your computer (to perform only once by Salesforce project ) Make updates on your Salesforce project Now your computer is ready, let's see how you can use sandboxes or scratch orgs to make updates in your Salesforce projects ! Create a new task Work on your current task Publish your task Validate a merge request (Release manager and advanced user only, depending on the project organization)","title":"Contributor Guide Home"},{"location":"salesforce-ci-cd-use-home/#initialization","text":"You need a stack of applications and to have Salesforce sources on your computer to be able to start to work on a CI/CD project. Install necessary applications on your computer (to perform only once by computer ) Clone git repository on your computer (to perform only once by Salesforce project )","title":"Initialization"},{"location":"salesforce-ci-cd-use-home/#make-updates-on-your-salesforce-project","text":"Now your computer is ready, let's see how you can use sandboxes or scratch orgs to make updates in your Salesforce projects ! Create a new task Work on your current task Publish your task Validate a merge request (Release manager and advanced user only, depending on the project organization)","title":"Make updates on your Salesforce project"},{"location":"salesforce-ci-cd-use-install/","text":"Computer Installation user guide Install Visual Studio code Install VsCode extension VsCode SFDX Hardis by searching for Hardis is VsCode extensions plugin pane. Once installed, click on in VsCode left bar Messages will appear at the bottom right of VsCode and ask you to install additional applications and activate settings. Follow all of them until there is none left. When later you'll see such messages again from sfdx-hardis, click to apply them to upgrade applications. When no warning in displayed in the dependencies panel, you're all set ! Under the hood The installed applications are the following: Git Node.js Salesforce DX Salesforce DX plugins sfdx-hardis Salesforce Data Move Utility SFDX Essentials SFDX Git Delta Texei Sfdx Plugin Now your computer is all set, you can clone your project git repository :)","title":"Prepare your computer"},{"location":"salesforce-ci-cd-use-install/#computer-installation-user-guide","text":"Install Visual Studio code Install VsCode extension VsCode SFDX Hardis by searching for Hardis is VsCode extensions plugin pane. Once installed, click on in VsCode left bar Messages will appear at the bottom right of VsCode and ask you to install additional applications and activate settings. Follow all of them until there is none left. When later you'll see such messages again from sfdx-hardis, click to apply them to upgrade applications. When no warning in displayed in the dependencies panel, you're all set ! Under the hood The installed applications are the following: Git Node.js Salesforce DX Salesforce DX plugins sfdx-hardis Salesforce Data Move Utility SFDX Essentials SFDX Git Delta Texei Sfdx Plugin Now your computer is all set, you can clone your project git repository :)","title":"Computer Installation user guide"},{"location":"salesforce-ci-cd-validate-merge-request/","text":"Conflicts Control jobs Check deploy job Code Quality job Merge the Pull Request / Merge Request Pre-deployment actions Effective merge Post-deployment actions Conflicts This section must be managed by team members with git knowledge If elements has been modified in another branch, you need to manage conflicts before being able to merge. Merge conflicts then commit and push your updates, it will trigger again the control job with the new branch state. This video shows how to merge conflicts with Visual Studio Code. In case conflicts are too complicated to manage (like on a Flow for example), you need to: Retrofit the new version of the flow in your branch (that will overwrite your updates) Sfdx Push it to your source-tracked sandbox or scratch org Make again the updates in the Salesforce Setup Sfdx Pull the updated version in your local branch Git Commit & Push to your branch Control jobs Each merge request runs automatically the control jobs that will insure that the future deployment with be valid. Check deploy job This CI job simulates a deployment to the target org (corresponding to the target branch of the merge request) Simulate deployment of all metadatas Run all local Apex test classes : all must be in success , and with at least 75% of code coverage If there are errors, you need to either: Push a new commit with updates solving the error Perform manual operations in the target org , that can be: Manual activation of features (ex: Account teams, State and country picklists...) Manual updates in setup in case of renaming of API Names (which is a bad practice to avoid as much as possible :) ) Under each error, you may see instructions to solve the error in yellow. If there is no instruction, try to copy-paste the error in google If you are lost or are not sure of what you do, call your release manager If your release manager is lost or is not sure of what he does, post an issue or call Cloudity to ask for support Code Quality job MegaLinter is used to perform code quality and security checks in Salesforce CI/CD repositories. It embeds SAST tools that check Apex, Aura, LWC, copy-pastes and security issues. If you consider Apex issues to be false-positives, you may disable some rules using annotations and comments Never use @SuppressWarnings('PMD') , always name the rule that you want to disable, because you do not want to disable all rules //NOPMD at the end of a line will make the issue ignored, but again use it only in case of false positive, never to \"Publish more quickly\", else you'll create technical debt . Merge Depending on the project organization, this action can be allowed only to Release managers, or to more team members If there are no conflicts and if all control jobs are in success, you can proceed to the merge of the merge request. Pre deployment actions If pre-deployment actions are required, perform them before clicking on the button to merge the Merge Request / Pull Request Pre-deployment actions can usually be found in README.md IMPORTANT : If Custom Profiles are deployed for the first time , you MUST create them manually in target org, by cloning them from \"Minimal access\" Profile Effective merge Click on Merge If the merge request is from a minor branch (dev or config task), make sure that Squash commits and Delete after merge are checked If the merge request if from a major branch (develop, recette, uat, preprod...), make sure that Squash commits and Delete after merge are NOT checked The merge commit in the target branch will trigger a new job that will automatically deploy the updated source to the corresponding Salesforce org Post deployment actions If post-deployment actions are required, perform them before clicking on the button to merge the Merge Request / Pull Request Post-deployment actions can usually be found in README.md","title":"Validate a merge request"},{"location":"salesforce-ci-cd-validate-merge-request/#conflicts","text":"This section must be managed by team members with git knowledge If elements has been modified in another branch, you need to manage conflicts before being able to merge. Merge conflicts then commit and push your updates, it will trigger again the control job with the new branch state. This video shows how to merge conflicts with Visual Studio Code. In case conflicts are too complicated to manage (like on a Flow for example), you need to: Retrofit the new version of the flow in your branch (that will overwrite your updates) Sfdx Push it to your source-tracked sandbox or scratch org Make again the updates in the Salesforce Setup Sfdx Pull the updated version in your local branch Git Commit & Push to your branch","title":"Conflicts"},{"location":"salesforce-ci-cd-validate-merge-request/#control-jobs","text":"Each merge request runs automatically the control jobs that will insure that the future deployment with be valid.","title":"Control jobs"},{"location":"salesforce-ci-cd-validate-merge-request/#check-deploy-job","text":"This CI job simulates a deployment to the target org (corresponding to the target branch of the merge request) Simulate deployment of all metadatas Run all local Apex test classes : all must be in success , and with at least 75% of code coverage If there are errors, you need to either: Push a new commit with updates solving the error Perform manual operations in the target org , that can be: Manual activation of features (ex: Account teams, State and country picklists...) Manual updates in setup in case of renaming of API Names (which is a bad practice to avoid as much as possible :) ) Under each error, you may see instructions to solve the error in yellow. If there is no instruction, try to copy-paste the error in google If you are lost or are not sure of what you do, call your release manager If your release manager is lost or is not sure of what he does, post an issue or call Cloudity to ask for support","title":"Check deploy job"},{"location":"salesforce-ci-cd-validate-merge-request/#code-quality-job","text":"MegaLinter is used to perform code quality and security checks in Salesforce CI/CD repositories. It embeds SAST tools that check Apex, Aura, LWC, copy-pastes and security issues. If you consider Apex issues to be false-positives, you may disable some rules using annotations and comments Never use @SuppressWarnings('PMD') , always name the rule that you want to disable, because you do not want to disable all rules //NOPMD at the end of a line will make the issue ignored, but again use it only in case of false positive, never to \"Publish more quickly\", else you'll create technical debt .","title":"Code Quality job"},{"location":"salesforce-ci-cd-validate-merge-request/#merge","text":"Depending on the project organization, this action can be allowed only to Release managers, or to more team members If there are no conflicts and if all control jobs are in success, you can proceed to the merge of the merge request.","title":"Merge"},{"location":"salesforce-ci-cd-validate-merge-request/#pre-deployment-actions","text":"If pre-deployment actions are required, perform them before clicking on the button to merge the Merge Request / Pull Request Pre-deployment actions can usually be found in README.md IMPORTANT : If Custom Profiles are deployed for the first time , you MUST create them manually in target org, by cloning them from \"Minimal access\" Profile","title":"Pre deployment actions"},{"location":"salesforce-ci-cd-validate-merge-request/#effective-merge","text":"Click on Merge If the merge request is from a minor branch (dev or config task), make sure that Squash commits and Delete after merge are checked If the merge request if from a major branch (develop, recette, uat, preprod...), make sure that Squash commits and Delete after merge are NOT checked The merge commit in the target branch will trigger a new job that will automatically deploy the updated source to the corresponding Salesforce org","title":"Effective merge"},{"location":"salesforce-ci-cd-validate-merge-request/#post-deployment-actions","text":"If post-deployment actions are required, perform them before clicking on the button to merge the Merge Request / Pull Request Post-deployment actions can usually be found in README.md","title":"Post deployment actions"},{"location":"salesforce-ci-cd-work-on-task/","text":"Salesforce Configuration Open your org Recommendations Salesforce Development Update code & XML Metadatas Recommendations Salesforce Configuration Open your org You can use Salesforce Setup to configure your org as you would do on any sandbox. Open your Salesforce DX project with Visual Studio Code Open VsCode SFDX Hardis extension by clicking on in VsCode left bar (loading can task several seconds) Click on to open your org in browser If you want to use another org, use menu to select another one Perform your configurations in the org Once you have finished, you can publish your task Recommendations Please follow as much as possible these recommendations when you work on a CI/CD Salesforce project: Do not rename API names (field names, picklist values, pages...) Do not prefix API Names with numbers : Git provides historization of updates, so it's better to have elements sorted by alphabetical order than by order of creation Do not change the type of custom fields Use command to install package instead of installing them directly with the URL If you installed a package using an URL, use command Retrieve packages button to retrieve package config before creating your merge request (be careful of what you commit in .sfdx-hardis.yml file !) Always use Permission Sets instead of Profiles. If you need profiles, discuss with your release manager. If you create a Custom Profile , please notify your release manager. Before the first deployment, this Profile must be created manually in the target org by cloning \"Minimum access\" Profile Never link configuration items (Queues,Reports...) directly to a user, but use Salesforce Groups If you need to update Flows, discuss to make sure that no other member of the team is updating the same Flow in another branch/org If it happens, conflicts are not manageable so one of you will later need to perform the updates again Never use hardcoded Ids in Flows and formulas (or anywhere else) Use static resources to store images Salesforce Development Update code & XML Metadatas You can update code and XML metadatas using VsCode IDE When you need to upload the updates to your org, use command If you made updates directly on your org, use command to retrieve into local files the updates that you performed online with point & click Once you have finished, you can publish your task Recommendations Use Visual Studio code editor to update code (online Developer Console is not recommended)","title":"Work on a task"},{"location":"salesforce-ci-cd-work-on-task/#salesforce-configuration","text":"","title":"Salesforce Configuration"},{"location":"salesforce-ci-cd-work-on-task/#open-your-org","text":"You can use Salesforce Setup to configure your org as you would do on any sandbox. Open your Salesforce DX project with Visual Studio Code Open VsCode SFDX Hardis extension by clicking on in VsCode left bar (loading can task several seconds) Click on to open your org in browser If you want to use another org, use menu to select another one Perform your configurations in the org Once you have finished, you can publish your task","title":"Open your org"},{"location":"salesforce-ci-cd-work-on-task/#recommendations","text":"Please follow as much as possible these recommendations when you work on a CI/CD Salesforce project: Do not rename API names (field names, picklist values, pages...) Do not prefix API Names with numbers : Git provides historization of updates, so it's better to have elements sorted by alphabetical order than by order of creation Do not change the type of custom fields Use command to install package instead of installing them directly with the URL If you installed a package using an URL, use command Retrieve packages button to retrieve package config before creating your merge request (be careful of what you commit in .sfdx-hardis.yml file !) Always use Permission Sets instead of Profiles. If you need profiles, discuss with your release manager. If you create a Custom Profile , please notify your release manager. Before the first deployment, this Profile must be created manually in the target org by cloning \"Minimum access\" Profile Never link configuration items (Queues,Reports...) directly to a user, but use Salesforce Groups If you need to update Flows, discuss to make sure that no other member of the team is updating the same Flow in another branch/org If it happens, conflicts are not manageable so one of you will later need to perform the updates again Never use hardcoded Ids in Flows and formulas (or anywhere else) Use static resources to store images","title":"Recommendations"},{"location":"salesforce-ci-cd-work-on-task/#salesforce-development","text":"","title":"Salesforce Development"},{"location":"salesforce-ci-cd-work-on-task/#update-code-xml-metadatas","text":"You can update code and XML metadatas using VsCode IDE When you need to upload the updates to your org, use command If you made updates directly on your org, use command to retrieve into local files the updates that you performed online with point & click Once you have finished, you can publish your task","title":"Update code &amp; XML Metadatas"},{"location":"salesforce-ci-cd-work-on-task/#recommendations_1","text":"Use Visual Studio code editor to update code (online Developer Console is not recommended)","title":"Recommendations"},{"location":"sfdx-hardis-config-file/","text":"sfdx-hardis projects are like any other sfdx projects, but with an additional configuration stored in a .sfdx-hardis.yml config file Many of these properties are automatically set by CI/CD setup and maintenance operations. You can see the list of all configuration properties . Here is an example of a .sfdx-hardis.yml config file: projectName: MyClient devHubAlias: DevHub_MyClient developmentBranch: integration allowedOrgTypes: - sandbox availableTargetBranches: - develop - preprod autoCleanTypes: - destructivechanges - datadotcom - minimizeProfiles - listViewsMine autoRemoveUserPermissions: - EnableCommunityAppLauncher - FieldServiceAccess - OmnichannelInventorySync - SendExternalEmailAvailable - UseOmnichannelInventoryAPIs - ViewDataLeakageEvents - ViewMLModels - ViewPlatformEvents - WorkCalibrationUser autoRetrieveWhenPull: - CustomApplication:MyClient - CustomApplication:MyClientConnectApplication - CustomApplication:MyOtherApplication - CustomMetadata devHubUsername: nicolas.vuillamy@ext.myclient.com installPackagesDuringCheckDeploy: true installedPackages: - Id: 0A37Z000000AtDYSA0 SubscriberPackageId: 033i0000000LVMYAA4 SubscriberPackageName: Marketing Cloud SubscriberPackageNamespace: et4ae5 SubscriberPackageVersionId: 04t6S000001UjutQAC SubscriberPackageVersionName: Marketing Cloud SubscriberPackageVersionNumber: 238.3.0.2 installOnScratchOrgs: true installDuringDeployments: true - Id: 0A35r0000009F9CCAU SubscriberPackageId: 033b0000000Pf2AAAS SubscriberPackageName: Declarative Lookup Rollup Summaries Tool SubscriberPackageNamespace: dlrs SubscriberPackageVersionId: 04t5p000001BmLvAAK SubscriberPackageVersionName: Release SubscriberPackageVersionNumber: 2.15.0.9 installOnScratchOrgs: true installDuringDeployments: true initPermissionSets: - AdminDefault - MarketingCloudConnectedApp - ApiUserPS listViewsToSetToMine: - force-app/main/default/objects/Operation__c/listViews/MyCurrentOperations.listView-meta.xml - force-app/main/default/objects/Operation__c/listViews/MyFinalizedOperations.listView-meta.xml","title":"Configuration reference"},{"location":"hardis/auth/login/","text":"hardis:auth:login Description Login to salesforce org Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) devhub -h boolean Also connect associated DevHub instanceurl -r option URL of org instance json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal scratchorg -s boolean Scratch org skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:auth:login","title":"login"},{"location":"hardis/auth/login/#hardisauthlogin","text":"","title":"hardis:auth:login"},{"location":"hardis/auth/login/#description","text":"Login to salesforce org","title":"Description"},{"location":"hardis/auth/login/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) devhub -h boolean Also connect associated DevHub instanceurl -r option URL of org instance json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal scratchorg -s boolean Scratch org skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/auth/login/#examples","text":"$ sfdx hardis:auth:login","title":"Examples"},{"location":"hardis/cache/clear/","text":"hardis:cache:clear Description Clear cache generated by sfdx-hardis Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:cache:clear","title":"clear"},{"location":"hardis/cache/clear/#hardiscacheclear","text":"","title":"hardis:cache:clear"},{"location":"hardis/cache/clear/#description","text":"Clear cache generated by sfdx-hardis","title":"Description"},{"location":"hardis/cache/clear/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/cache/clear/#examples","text":"$ sfdx hardis:cache:clear","title":"Examples"},{"location":"hardis/config/get/","text":"hardis:config:get Description Returns sfdx-hardis project config for a given level Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json level -l option project,branch or user project project branch user loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:deploy:sources:metadata","title":"get"},{"location":"hardis/config/get/#hardisconfigget","text":"","title":"hardis:config:get"},{"location":"hardis/config/get/#description","text":"Returns sfdx-hardis project config for a given level","title":"Description"},{"location":"hardis/config/get/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json level -l option project,branch or user project project branch user loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/config/get/#examples","text":"$ sfdx hardis:project:deploy:sources:metadata","title":"Examples"},{"location":"hardis/doc/extract/permsetgroups/","text":"hardis:doc:extract:permsetgroups Description Generate markdown files with project documentation Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal outputfile -o option Force the path and name of output report file. Must end with .csv skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:doc:extract:permsetgroups","title":"permsetgroups"},{"location":"hardis/doc/extract/permsetgroups/#hardisdocextractpermsetgroups","text":"","title":"hardis:doc:extract:permsetgroups"},{"location":"hardis/doc/extract/permsetgroups/#description","text":"Generate markdown files with project documentation","title":"Description"},{"location":"hardis/doc/extract/permsetgroups/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal outputfile -o option Force the path and name of output report file. Must end with .csv skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/doc/extract/permsetgroups/#examples","text":"$ sfdx hardis:doc:extract:permsetgroups","title":"Examples"},{"location":"hardis/doc/plugin/generate/","text":"hardis:doc:plugin:generate Description Generate Markdown documentation ready for HTML conversion with mkdocs After the first run, you need to update manually: mkdocs.yml .github/workflows/build-deploy-docs.yml docs/javascripts/gtag.js , if you want Google Analytics tracking Then, activate Github pages, with \"gh_pages\" as target branch At each merge into master/main branch, the GitHub Action build-deploy-docs will rebuild documentation and publish it in GitHub pages Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:doc:plugin:generate","title":"generate"},{"location":"hardis/doc/plugin/generate/#hardisdocplugingenerate","text":"","title":"hardis:doc:plugin:generate"},{"location":"hardis/doc/plugin/generate/#description","text":"Generate Markdown documentation ready for HTML conversion with mkdocs After the first run, you need to update manually: mkdocs.yml .github/workflows/build-deploy-docs.yml docs/javascripts/gtag.js , if you want Google Analytics tracking Then, activate Github pages, with \"gh_pages\" as target branch At each merge into master/main branch, the GitHub Action build-deploy-docs will rebuild documentation and publish it in GitHub pages","title":"Description"},{"location":"hardis/doc/plugin/generate/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/doc/plugin/generate/#examples","text":"$ sfdx hardis:doc:plugin:generate","title":"Examples"},{"location":"hardis/lint/access/","text":"hardis:lint:access Description Check if elements(apex class and field) are at least in one permission set Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) elementsignored -e option Ignore specific elements separated by commas folder -f option Root folder force-app ignorerights -i option Ignore permission sets or profiles json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:lint:access $ sfdx hardis:lint:access -e \"ApexClass:ClassA, CustomField:Account.CustomField\" $ sfdx hardis:lint:access -i \"PermissionSet:permissionSetA, Profile\"","title":"access"},{"location":"hardis/lint/access/#hardislintaccess","text":"","title":"hardis:lint:access"},{"location":"hardis/lint/access/#description","text":"Check if elements(apex class and field) are at least in one permission set","title":"Description"},{"location":"hardis/lint/access/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) elementsignored -e option Ignore specific elements separated by commas folder -f option Root folder force-app ignorerights -i option Ignore permission sets or profiles json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/lint/access/#examples","text":"$ sfdx hardis:lint:access $ sfdx hardis:lint:access -e \"ApexClass:ClassA, CustomField:Account.CustomField\" $ sfdx hardis:lint:access -i \"PermissionSet:permissionSetA, Profile\"","title":"Examples"},{"location":"hardis/mdapi/deploy/","text":"hardis:mdapi:deploy Description sfdx-hardis wrapper for sfdx force:mdapi:deploy that displays tips to solve deployment errors. See documentation of Salesforce command Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command checkonly -c boolean checkOnly concise boolean concise debug boolean debug deploydir -d option deployDir ignoreerrors -o boolean ignoreErrors ignorewarnings -g boolean ignoreWarnings json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal purgeondelete boolean purgeOnDelete runtests -r option runTests singlepackage -s boolean singlePackage soapdeploy boolean soapDeploy targetusername -u option username or alias for the target org; overrides default target org testlevel -l option testLevel NoTestRun NoTestRun RunSpecifiedTests RunLocalTests RunAllTestsInOrg validateddeployrequestid -q option validatedDeployRequestId verbose boolean verbose wait -w option wait [object Object] websocket option websocket zipfile -f option zipFile Examples","title":"deploy"},{"location":"hardis/mdapi/deploy/#hardismdapideploy","text":"","title":"hardis:mdapi:deploy"},{"location":"hardis/mdapi/deploy/#description","text":"sfdx-hardis wrapper for sfdx force:mdapi:deploy that displays tips to solve deployment errors. See documentation of Salesforce command","title":"Description"},{"location":"hardis/mdapi/deploy/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command checkonly -c boolean checkOnly concise boolean concise debug boolean debug deploydir -d option deployDir ignoreerrors -o boolean ignoreErrors ignorewarnings -g boolean ignoreWarnings json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal purgeondelete boolean purgeOnDelete runtests -r option runTests singlepackage -s boolean singlePackage soapdeploy boolean soapDeploy targetusername -u option username or alias for the target org; overrides default target org testlevel -l option testLevel NoTestRun NoTestRun RunSpecifiedTests RunLocalTests RunAllTestsInOrg validateddeployrequestid -q option validatedDeployRequestId verbose boolean verbose wait -w option wait [object Object] websocket option websocket zipfile -f option zipFile","title":"Parameters"},{"location":"hardis/mdapi/deploy/#examples","text":"","title":"Examples"},{"location":"hardis/misc/toml2csv/","text":"hardis:misc:toml2csv Description Split TOML file into distinct CSV files Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) filtersections -l option List of sections to process (if not set, all sections will be processed) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal outputdir -o option Output directory skipauth boolean Skip authentication check when a default username is required skiptransfo -s boolean Do not apply transformation to input data targetusername -u option username or alias for the target org; overrides default target org tomlfile -f option Input TOML file path transfoconfig -t option Path to JSON config file for mapping and transformation websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:misc:toml2csv --tomlfile 'D:/clients/toto/V1_full.txt' $ sfdx hardis:misc:toml2csv --skiptransfo --tomlfile 'D:/clients/toto/V1_full.txt' $ sfdx hardis:misc:toml2csv --skiptransfo --tomlfile 'D:/clients/toto/V1_full.txt' --outputdir 'C:/tmp/rrrr' $ NODE_OPTIONS=--max_old_space_size=9096 sfdx hardis:misc:toml2csv --skiptransfo --tomlfile './input/V1.txt' --outputdir './output' --filtersections 'COMPTES,SOUS'","title":"toml2csv"},{"location":"hardis/misc/toml2csv/#hardismisctoml2csv","text":"","title":"hardis:misc:toml2csv"},{"location":"hardis/misc/toml2csv/#description","text":"Split TOML file into distinct CSV files","title":"Description"},{"location":"hardis/misc/toml2csv/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) filtersections -l option List of sections to process (if not set, all sections will be processed) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal outputdir -o option Output directory skipauth boolean Skip authentication check when a default username is required skiptransfo -s boolean Do not apply transformation to input data targetusername -u option username or alias for the target org; overrides default target org tomlfile -f option Input TOML file path transfoconfig -t option Path to JSON config file for mapping and transformation websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/misc/toml2csv/#examples","text":"$ sfdx hardis:misc:toml2csv --tomlfile 'D:/clients/toto/V1_full.txt' $ sfdx hardis:misc:toml2csv --skiptransfo --tomlfile 'D:/clients/toto/V1_full.txt' $ sfdx hardis:misc:toml2csv --skiptransfo --tomlfile 'D:/clients/toto/V1_full.txt' --outputdir 'C:/tmp/rrrr' $ NODE_OPTIONS=--max_old_space_size=9096 sfdx hardis:misc:toml2csv --skiptransfo --tomlfile './input/V1.txt' --outputdir './output' --filtersections 'COMPTES,SOUS'","title":"Examples"},{"location":"hardis/org/connect/","text":"hardis:org:connect Description Connect to an org without setting it as default username, then proposes to open the org in web browser Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:connect","title":"connect"},{"location":"hardis/org/connect/#hardisorgconnect","text":"","title":"hardis:org:connect"},{"location":"hardis/org/connect/#description","text":"Connect to an org without setting it as default username, then proposes to open the org in web browser","title":"Description"},{"location":"hardis/org/connect/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/connect/#examples","text":"$ sfdx hardis:org:connect","title":"Examples"},{"location":"hardis/org/create/","text":"hardis:org:create Description Create and initialize sandbox org Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:create","title":"create"},{"location":"hardis/org/create/#hardisorgcreate","text":"","title":"hardis:org:create"},{"location":"hardis/org/create/#description","text":"Create and initialize sandbox org","title":"Description"},{"location":"hardis/org/create/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/create/#examples","text":"$ sfdx hardis:org:create","title":"Examples"},{"location":"hardis/org/select/","text":"hardis:org:select Description Interactive org selection for user Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) devhub -h boolean Also connect associated DevHub json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal scratch -s boolean Select scratch org related to default DevHub skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:select","title":"select"},{"location":"hardis/org/select/#hardisorgselect","text":"","title":"hardis:org:select"},{"location":"hardis/org/select/#description","text":"Interactive org selection for user","title":"Description"},{"location":"hardis/org/select/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) devhub -h boolean Also connect associated DevHub json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal scratch -s boolean Select scratch org related to default DevHub skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/select/#examples","text":"$ sfdx hardis:org:select","title":"Examples"},{"location":"hardis/org/configure/data/","text":"hardis:org:configure:data Description Configure Data Export/Import with a SFDX Data Loader Project See article: Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:configure:data","title":"data"},{"location":"hardis/org/configure/data/#hardisorgconfiguredata","text":"","title":"hardis:org:configure:data"},{"location":"hardis/org/configure/data/#description","text":"Configure Data Export/Import with a SFDX Data Loader Project See article:","title":"Description"},{"location":"hardis/org/configure/data/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/configure/data/#examples","text":"$ sfdx hardis:org:configure:data","title":"Examples"},{"location":"hardis/org/configure/files/","text":"hardis:org:configure:files Description Configure export of file attachments from a Salesforce org See article below Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:configure:files","title":"files"},{"location":"hardis/org/configure/files/#hardisorgconfigurefiles","text":"","title":"hardis:org:configure:files"},{"location":"hardis/org/configure/files/#description","text":"Configure export of file attachments from a Salesforce org See article below","title":"Description"},{"location":"hardis/org/configure/files/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/configure/files/#examples","text":"$ sfdx hardis:org:configure:files","title":"Examples"},{"location":"hardis/org/configure/monitoring/","text":"hardis:org:configure:monitoring Description Configure monitoring of an org Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:configure:monitoring","title":"monitoring"},{"location":"hardis/org/configure/monitoring/#hardisorgconfiguremonitoring","text":"","title":"hardis:org:configure:monitoring"},{"location":"hardis/org/configure/monitoring/#description","text":"Configure monitoring of an org","title":"Description"},{"location":"hardis/org/configure/monitoring/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/configure/monitoring/#examples","text":"$ sfdx hardis:org:configure:monitoring","title":"Examples"},{"location":"hardis/org/data/delete/","text":"hardis:org:data:delete Description Delete data in org using sfdmu Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal path -p option Path to the sfdmu workspace folder skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:data:delete","title":"delete"},{"location":"hardis/org/data/delete/#hardisorgdatadelete","text":"","title":"hardis:org:data:delete"},{"location":"hardis/org/data/delete/#description","text":"Delete data in org using sfdmu","title":"Description"},{"location":"hardis/org/data/delete/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal path -p option Path to the sfdmu workspace folder skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/data/delete/#examples","text":"$ sfdx hardis:org:data:delete","title":"Examples"},{"location":"hardis/org/data/export/","text":"hardis:org:data:export Description Export data from an org using a SFDX Data Loader Project See article: Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal path -p option Path to the sfdmu workspace folder skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:data:export","title":"export"},{"location":"hardis/org/data/export/#hardisorgdataexport","text":"","title":"hardis:org:data:export"},{"location":"hardis/org/data/export/#description","text":"Export data from an org using a SFDX Data Loader Project See article:","title":"Description"},{"location":"hardis/org/data/export/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal path -p option Path to the sfdmu workspace folder skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/data/export/#examples","text":"$ sfdx hardis:org:data:export","title":"Examples"},{"location":"hardis/org/data/import/","text":"hardis:org:data:import Description Import/Load data in an org using a SFDX Data Loader Project See article: Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal path -p option Path to the sfdmu workspace folder skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:data:import","title":"import"},{"location":"hardis/org/data/import/#hardisorgdataimport","text":"","title":"hardis:org:data:import"},{"location":"hardis/org/data/import/#description","text":"Import/Load data in an org using a SFDX Data Loader Project See article:","title":"Description"},{"location":"hardis/org/data/import/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal path -p option Path to the sfdmu workspace folder skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/data/import/#examples","text":"$ sfdx hardis:org:data:import","title":"Examples"},{"location":"hardis/org/diagnose/legacyapi/","text":"hardis:org:diagnose:legacyapi Description Checks if an org uses retired or someday retired API version See article below Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) eventtype -e option Type of EventLogFile event to analyze ApiTotalUsage json boolean format output as json limit -l option Number of latest EventLogFile events to analyze 999 loglevel option logging level for this command invocation warn trace debug info warn error fatal outputfile -o option Force the path and name of output report file. Must end with .csv skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:diagnose:legacyapi $ sfdx hardis:org:diagnose:legacyapi -u hardis@myclient.com $ sfdx hardis:org:diagnose:legacyapi --outputfile 'c:/path/to/folder/legacyapi.csv' $ sfdx hardis:org:diagnose:legacyapi -u hardis@myclient.com --outputfile ./tmp/legacyapi.csv","title":"legacyapi"},{"location":"hardis/org/diagnose/legacyapi/#hardisorgdiagnoselegacyapi","text":"","title":"hardis:org:diagnose:legacyapi"},{"location":"hardis/org/diagnose/legacyapi/#description","text":"Checks if an org uses retired or someday retired API version See article below","title":"Description"},{"location":"hardis/org/diagnose/legacyapi/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) eventtype -e option Type of EventLogFile event to analyze ApiTotalUsage json boolean format output as json limit -l option Number of latest EventLogFile events to analyze 999 loglevel option logging level for this command invocation warn trace debug info warn error fatal outputfile -o option Force the path and name of output report file. Must end with .csv skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/diagnose/legacyapi/#examples","text":"$ sfdx hardis:org:diagnose:legacyapi $ sfdx hardis:org:diagnose:legacyapi -u hardis@myclient.com $ sfdx hardis:org:diagnose:legacyapi --outputfile 'c:/path/to/folder/legacyapi.csv' $ sfdx hardis:org:diagnose:legacyapi -u hardis@myclient.com --outputfile ./tmp/legacyapi.csv","title":"Examples"},{"location":"hardis/org/files/export/","text":"hardis:org:files:export Description Export file attachments from a Salesforce org See article below Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command chunksize -c option Number of records to add in a chunk before it is processed 1000 debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal path -p option Path to the file export project polltimeout -t option Timeout in MS for Bulk API calls 300000 skipauth boolean Skip authentication check when a default username is required startchunknumber -s option Chunk number to start from targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:files:export","title":"export"},{"location":"hardis/org/files/export/#hardisorgfilesexport","text":"","title":"hardis:org:files:export"},{"location":"hardis/org/files/export/#description","text":"Export file attachments from a Salesforce org See article below","title":"Description"},{"location":"hardis/org/files/export/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command chunksize -c option Number of records to add in a chunk before it is processed 1000 debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal path -p option Path to the file export project polltimeout -t option Timeout in MS for Bulk API calls 300000 skipauth boolean Skip authentication check when a default username is required startchunknumber -s option Chunk number to start from targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/files/export/#examples","text":"$ sfdx hardis:org:files:export","title":"Examples"},{"location":"hardis/org/fix/listviewmine/","text":"hardis:org:fix:listviewmine Description Fix listviews whose scope Mine has been replaced by Everything List of ListViews can be: read from .sfdx-hardis.yml file in property listViewsToSetToMine sent in argument listviews Note: property listViewsToSetToMine can be auto-generated by command hardis:work:save if .sfdx-hardis.yml contains the following configuration autoCleanTypes: - listViewsMine Example of sfdx-hardis.yml property listViewsToSetToMine : listViewsToSetToMine: - \"force-app/main/default/objects/Operation__c/listViews/MyCurrentOperations.listView-meta.xml\" - \"force-app/main/default/objects/Operation__c/listViews/MyFinalizedOperations.listView-meta.xml\" - \"force-app/main/default/objects/Opportunity/listViews/Default_Opportunity_Pipeline.listView-meta.xml\" - \"force-app/main/default/objects/Opportunity/listViews/MyCurrentSubscriptions.listView-meta.xml\" - \"force-app/main/default/objects/Opportunity/listViews/MySubscriptions.listView-meta.xml\" - \"force-app/main/default/objects/Account/listViews/MyActivePartners.listView-meta.xml\" If manually written, this could also be: listViewsToSetToMine: - \"Operation__c:MyCurrentOperations\" - \"Operation__c:MyFinalizedOperations\" - \"Opportunity:Default_Opportunity_Pipeline\" - \"Opportunity:MyCurrentSubscriptions\" - \"Opportunity:MySubscriptions\" - \"Account:MyActivePartners\" Troubleshooting: if you need to run this command from an alpine-linux based docker image, use this workaround in your dockerfile: # Do not use puppeteer embedded chromium RUN apk add --update --no-cache chromium ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=\"true\" ENV CHROMIUM_PATH=\"/usr/bin/chromium-browser\" ENV PUPPETEER_EXECUTABLE_PATH=\"$\\{CHROMIUM_PATH}\" // remove \\ before { Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json listviews -l option Comma-separated list of listviews following format Object:ListViewName Example: Contact:MyContacts,Contact:MyActiveContacts,Opportunity:MYClosedOpportunities loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:fix:listviewmine $ sfdx hardis:org:fix:listviewmine --listviews Opportunity:MySubscriptions,Account:MyActivePartners","title":"listviewmine"},{"location":"hardis/org/fix/listviewmine/#hardisorgfixlistviewmine","text":"","title":"hardis:org:fix:listviewmine"},{"location":"hardis/org/fix/listviewmine/#description","text":"Fix listviews whose scope Mine has been replaced by Everything List of ListViews can be: read from .sfdx-hardis.yml file in property listViewsToSetToMine sent in argument listviews Note: property listViewsToSetToMine can be auto-generated by command hardis:work:save if .sfdx-hardis.yml contains the following configuration autoCleanTypes: - listViewsMine Example of sfdx-hardis.yml property listViewsToSetToMine : listViewsToSetToMine: - \"force-app/main/default/objects/Operation__c/listViews/MyCurrentOperations.listView-meta.xml\" - \"force-app/main/default/objects/Operation__c/listViews/MyFinalizedOperations.listView-meta.xml\" - \"force-app/main/default/objects/Opportunity/listViews/Default_Opportunity_Pipeline.listView-meta.xml\" - \"force-app/main/default/objects/Opportunity/listViews/MyCurrentSubscriptions.listView-meta.xml\" - \"force-app/main/default/objects/Opportunity/listViews/MySubscriptions.listView-meta.xml\" - \"force-app/main/default/objects/Account/listViews/MyActivePartners.listView-meta.xml\" If manually written, this could also be: listViewsToSetToMine: - \"Operation__c:MyCurrentOperations\" - \"Operation__c:MyFinalizedOperations\" - \"Opportunity:Default_Opportunity_Pipeline\" - \"Opportunity:MyCurrentSubscriptions\" - \"Opportunity:MySubscriptions\" - \"Account:MyActivePartners\" Troubleshooting: if you need to run this command from an alpine-linux based docker image, use this workaround in your dockerfile: # Do not use puppeteer embedded chromium RUN apk add --update --no-cache chromium ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=\"true\" ENV CHROMIUM_PATH=\"/usr/bin/chromium-browser\" ENV PUPPETEER_EXECUTABLE_PATH=\"$\\{CHROMIUM_PATH}\" // remove \\ before {","title":"Description"},{"location":"hardis/org/fix/listviewmine/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json listviews -l option Comma-separated list of listviews following format Object:ListViewName Example: Contact:MyContacts,Contact:MyActiveContacts,Opportunity:MYClosedOpportunities loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/fix/listviewmine/#examples","text":"$ sfdx hardis:org:fix:listviewmine $ sfdx hardis:org:fix:listviewmine --listviews Opportunity:MySubscriptions,Account:MyActivePartners","title":"Examples"},{"location":"hardis/org/generate/packagexmlfull/","text":"hardis:org:generate:packagexmlfull Description Generates full org package.xml, including managed items Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal outputfile option Output package.xml file skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:generate:packagexmlfull $ sfdx hardis:org:generate:packagexmlfull --outputfile /tmp/packagexmlfull.xml $ sfdx hardis:org:generate:packagexmlfull --targetusername nico@example.com","title":"packagexmlfull"},{"location":"hardis/org/generate/packagexmlfull/#hardisorggeneratepackagexmlfull","text":"","title":"hardis:org:generate:packagexmlfull"},{"location":"hardis/org/generate/packagexmlfull/#description","text":"Generates full org package.xml, including managed items","title":"Description"},{"location":"hardis/org/generate/packagexmlfull/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal outputfile option Output package.xml file skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/generate/packagexmlfull/#examples","text":"$ sfdx hardis:org:generate:packagexmlfull $ sfdx hardis:org:generate:packagexmlfull --outputfile /tmp/packagexmlfull.xml $ sfdx hardis:org:generate:packagexmlfull --targetusername nico@example.com","title":"Examples"},{"location":"hardis/org/purge/apexlog/","text":"hardis:org:purge:apexlog Description Purge apex logs in selected org Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal prompt -z boolean Prompt for confirmation (true by default, use --no-prompt to skip) skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:purge:apexlog $ sfdx hardis:org:purge:apexlog --targetusername nicolas.vuillamy@gmail.com","title":"apexlog"},{"location":"hardis/org/purge/apexlog/#hardisorgpurgeapexlog","text":"","title":"hardis:org:purge:apexlog"},{"location":"hardis/org/purge/apexlog/#description","text":"Purge apex logs in selected org","title":"Description"},{"location":"hardis/org/purge/apexlog/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal prompt -z boolean Prompt for confirmation (true by default, use --no-prompt to skip) skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/purge/apexlog/#examples","text":"$ sfdx hardis:org:purge:apexlog $ sfdx hardis:org:purge:apexlog --targetusername nicolas.vuillamy@gmail.com","title":"Examples"},{"location":"hardis/org/purge/flow/","text":"hardis:org:purge:flow Description Purge Obsolete flow versions to avoid the 50 max versions limit. Filters on Status and Name Parameters Name Type Description Default Required Options allowpurgefailure -f boolean Allows purges to fail without exiting with 1. Use --no-allowpurgefailure to disable apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) instanceurl -r option URL of org instance https://login.salesforce.com json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal name -n option Filter according to Name criteria prompt -z boolean Prompt for confirmation (true by default, use --no-prompt to skip) skipauth boolean Skip authentication check when a default username is required status -s option Filter according to Status criteria targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:purge:flow --targetusername nicolas.vuillamy@gmail.com Found 1 records: ID MASTERLABEL VERSIONNUMBER DESCRIPTION STATUS 30109000000kX7uAAE TestFlow 2 test flowwww Obsolete Are you sure you want to delete this list of records (y/n)?: y Successfully deleted record: 30109000000kX7uAAE. Deleted the following list of records: ID MASTERLABEL VERSIONNUMBER DESCRIPTION STATUS 30109000000kX7uAAE TestFlow 2 test flowwww Obsolete $ sfdx hardis:org:purge:flow --targetusername nicolas.vuillamy@gmail.com --status \"Obsolete,Draft,InvalidDraft --name TestFlow\" Found 4 records: ID MASTERLABEL VERSIONNUMBER DESCRIPTION STATUS 30109000000kX7uAAE TestFlow 2 test flowwww Obsolete 30109000000kX8EAAU TestFlow 6 test flowwww InvalidDraft 30109000000kX8AAAU TestFlow 5 test flowwww InvalidDraft 30109000000kX89AAE TestFlow 4 test flowwww Draft Are you sure you want to delete this list of records (y/n)?: n No record deleted","title":"flow"},{"location":"hardis/org/purge/flow/#hardisorgpurgeflow","text":"","title":"hardis:org:purge:flow"},{"location":"hardis/org/purge/flow/#description","text":"Purge Obsolete flow versions to avoid the 50 max versions limit. Filters on Status and Name","title":"Description"},{"location":"hardis/org/purge/flow/#parameters","text":"Name Type Description Default Required Options allowpurgefailure -f boolean Allows purges to fail without exiting with 1. Use --no-allowpurgefailure to disable apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) instanceurl -r option URL of org instance https://login.salesforce.com json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal name -n option Filter according to Name criteria prompt -z boolean Prompt for confirmation (true by default, use --no-prompt to skip) skipauth boolean Skip authentication check when a default username is required status -s option Filter according to Status criteria targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/purge/flow/#examples","text":"$ sfdx hardis:org:purge:flow --targetusername nicolas.vuillamy@gmail.com Found 1 records: ID MASTERLABEL VERSIONNUMBER DESCRIPTION STATUS 30109000000kX7uAAE TestFlow 2 test flowwww Obsolete Are you sure you want to delete this list of records (y/n)?: y Successfully deleted record: 30109000000kX7uAAE. Deleted the following list of records: ID MASTERLABEL VERSIONNUMBER DESCRIPTION STATUS 30109000000kX7uAAE TestFlow 2 test flowwww Obsolete $ sfdx hardis:org:purge:flow --targetusername nicolas.vuillamy@gmail.com --status \"Obsolete,Draft,InvalidDraft --name TestFlow\" Found 4 records: ID MASTERLABEL VERSIONNUMBER DESCRIPTION STATUS 30109000000kX7uAAE TestFlow 2 test flowwww Obsolete 30109000000kX8EAAU TestFlow 6 test flowwww InvalidDraft 30109000000kX8AAAU TestFlow 5 test flowwww InvalidDraft 30109000000kX89AAE TestFlow 4 test flowwww Draft Are you sure you want to delete this list of records (y/n)?: n No record deleted","title":"Examples"},{"location":"hardis/org/retrieve/packageconfig/","text":"hardis:org:retrieve:packageconfig Description Retrieve package configuration from an org Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:retrieve:packageconfig sfdx hardis:org:retrieve:packageconfig -u myOrg","title":"packageconfig"},{"location":"hardis/org/retrieve/packageconfig/#hardisorgretrievepackageconfig","text":"","title":"hardis:org:retrieve:packageconfig"},{"location":"hardis/org/retrieve/packageconfig/#description","text":"Retrieve package configuration from an org","title":"Description"},{"location":"hardis/org/retrieve/packageconfig/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/retrieve/packageconfig/#examples","text":"$ sfdx hardis:org:retrieve:packageconfig sfdx hardis:org:retrieve:packageconfig -u myOrg","title":"Examples"},{"location":"hardis/org/retrieve/sources/analytics/","text":"hardis:org:retrieve:sources:analytics Description Retrieve all CRM Analytics sources from an org, with workarounds for SFDX bugs Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:retrieve:sources:analytics","title":"analytics"},{"location":"hardis/org/retrieve/sources/analytics/#hardisorgretrievesourcesanalytics","text":"","title":"hardis:org:retrieve:sources:analytics"},{"location":"hardis/org/retrieve/sources/analytics/#description","text":"Retrieve all CRM Analytics sources from an org, with workarounds for SFDX bugs","title":"Description"},{"location":"hardis/org/retrieve/sources/analytics/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/retrieve/sources/analytics/#examples","text":"$ sfdx hardis:org:retrieve:sources:analytics","title":"Examples"},{"location":"hardis/org/retrieve/sources/dx/","text":"hardis:org:retrieve:sources:dx Description Retrieve Salesforce DX project from org Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) filteredmetadatas -m option Comma separated list of Metadatas keys to remove from PackageXml file folder -f option Folder . instanceurl -r option URL of org instance json boolean format output as json keepmetadatatypes -k option Comma separated list of metadatas types that will be the only ones to be retrieved loglevel option logging level for this command invocation warn trace debug info warn error fatal shape -o boolean Updates project-scratch-def.json from org shape skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org tempfolder -t option Temporary folder ./tmp websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:retrieve:sources:dx","title":"dx"},{"location":"hardis/org/retrieve/sources/dx/#hardisorgretrievesourcesdx","text":"","title":"hardis:org:retrieve:sources:dx"},{"location":"hardis/org/retrieve/sources/dx/#description","text":"Retrieve Salesforce DX project from org","title":"Description"},{"location":"hardis/org/retrieve/sources/dx/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) filteredmetadatas -m option Comma separated list of Metadatas keys to remove from PackageXml file folder -f option Folder . instanceurl -r option URL of org instance json boolean format output as json keepmetadatatypes -k option Comma separated list of metadatas types that will be the only ones to be retrieved loglevel option logging level for this command invocation warn trace debug info warn error fatal shape -o boolean Updates project-scratch-def.json from org shape skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org tempfolder -t option Temporary folder ./tmp websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/retrieve/sources/dx/#examples","text":"$ sfdx hardis:org:retrieve:sources:dx","title":"Examples"},{"location":"hardis/org/retrieve/sources/dx2/","text":"hardis:org:retrieve:sources:dx2 Description Retrieve Salesforce DX project from org Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal packagexml -x option Path to package.xml file skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org template -t option sfdx-hardis package.xml Template name. ex: wave websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:retrieve:sources:dx2","title":"dx2"},{"location":"hardis/org/retrieve/sources/dx2/#hardisorgretrievesourcesdx2","text":"","title":"hardis:org:retrieve:sources:dx2"},{"location":"hardis/org/retrieve/sources/dx2/#description","text":"Retrieve Salesforce DX project from org","title":"Description"},{"location":"hardis/org/retrieve/sources/dx2/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal packagexml -x option Path to package.xml file skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org template -t option sfdx-hardis package.xml Template name. ex: wave websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/retrieve/sources/dx2/#examples","text":"$ sfdx hardis:org:retrieve:sources:dx2","title":"Examples"},{"location":"hardis/org/retrieve/sources/metadata/","text":"hardis:org:retrieve:sources:metadata Description Retrieve Salesforce DX project from org Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) folder -f option Folder . includemanaged boolean Include items from managed packages instanceurl -r option URL of org instance json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal packagexml -p option Path to package.xml manifest file skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:retrieve:sources:metadata $ SFDX_RETRIEVE_WAIT_MINUTES=200 sfdx hardis:org:retrieve:sources:metadata","title":"metadata"},{"location":"hardis/org/retrieve/sources/metadata/#hardisorgretrievesourcesmetadata","text":"","title":"hardis:org:retrieve:sources:metadata"},{"location":"hardis/org/retrieve/sources/metadata/#description","text":"Retrieve Salesforce DX project from org","title":"Description"},{"location":"hardis/org/retrieve/sources/metadata/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) folder -f option Folder . includemanaged boolean Include items from managed packages instanceurl -r option URL of org instance json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal packagexml -p option Path to package.xml manifest file skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/retrieve/sources/metadata/#examples","text":"$ sfdx hardis:org:retrieve:sources:metadata $ SFDX_RETRIEVE_WAIT_MINUTES=200 sfdx hardis:org:retrieve:sources:metadata","title":"Examples"},{"location":"hardis/org/retrieve/sources/retrofit/","text":"hardis:org:retrieve:sources:retrofit Description Retrieve changes from org link to a ref branch not present in sources This command need to be triggered from a branch that is connected to a SF org. It will then retrieve all changes not present in that branch sources, commit them and create a merge request against the default branch. If a merge request already exists, it will simply add a new commit. Define the following properties in .sfdx-hardis.yml - productionBranch : Name of the git branch that is corresponding to production org - retrofitBranch : Name of the git branch that will be used as merge request target List of metadata to retrieve can be set in three way, in order of priority : - CI_SOURCES_TO_RETROFIT : env variable (can be defined in CI context) - sourcesToRetrofit property in .sfdx-hardis.yml - Default list: - CompactLayout - CustomApplication - CustomField - CustomLabel - CustomLabels - CustomMetadata - CustomObject - CustomObjectTranslation - CustomTab - DuplicateRule - EmailTemplate - FlexiPage - GlobalValueSet - Layout - ListView - MatchingRules - PermissionSet - RecordType - StandardValueSet - Translations - ValidationRule You can also ignore some files even if they have been updated in production. To do that, define property retrofitIgnoredFiles in .sfdx-hardis.yml Example of full retrofit configuration: yaml productionBranch: master retrofitBranch: preprod retrofitIgnoredFiles: - force-app/main/default/applications/MyApp.app-meta.xml - force-app/main/default/applications/MyOtherApp.app-meta.xml - force-app/main/default/flexipages/MyFlexipageContainingDashboards.flexipage-meta.xml Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command commit boolean If true, a commit will be performed after the retrofit commitmode option Defines if we commit all retrieved updates, or all updates including creations updated updated all debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal productionbranch option Name of the git branch corresponding to the org we want to perform the retrofit on. Can be defined in productionBranch property in .sfdx-hardis.yml push boolean If true, a push will be performed after the retrofit pushmode option Defines if we send merge request options to git push arguments default default mergerequest retrofittargetbranch option Name of branch the merge request will have as target Can be defined in retrofitBranch property in .sfdx-hardis.yml skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:retrieve:sources:retrofit sfdx hardis:org:retrieve:sources:retrofit --productionbranch master --commit --commitmode updated sfdx hardis:org:retrieve:sources:retrofit --productionbranch master --retrofitbranch preprod --commit --commitmode updated --push --pushmode mergerequest","title":"retrofit"},{"location":"hardis/org/retrieve/sources/retrofit/#hardisorgretrievesourcesretrofit","text":"","title":"hardis:org:retrieve:sources:retrofit"},{"location":"hardis/org/retrieve/sources/retrofit/#description","text":"Retrieve changes from org link to a ref branch not present in sources This command need to be triggered from a branch that is connected to a SF org. It will then retrieve all changes not present in that branch sources, commit them and create a merge request against the default branch. If a merge request already exists, it will simply add a new commit. Define the following properties in .sfdx-hardis.yml - productionBranch : Name of the git branch that is corresponding to production org - retrofitBranch : Name of the git branch that will be used as merge request target List of metadata to retrieve can be set in three way, in order of priority : - CI_SOURCES_TO_RETROFIT : env variable (can be defined in CI context) - sourcesToRetrofit property in .sfdx-hardis.yml - Default list: - CompactLayout - CustomApplication - CustomField - CustomLabel - CustomLabels - CustomMetadata - CustomObject - CustomObjectTranslation - CustomTab - DuplicateRule - EmailTemplate - FlexiPage - GlobalValueSet - Layout - ListView - MatchingRules - PermissionSet - RecordType - StandardValueSet - Translations - ValidationRule You can also ignore some files even if they have been updated in production. To do that, define property retrofitIgnoredFiles in .sfdx-hardis.yml Example of full retrofit configuration: yaml productionBranch: master retrofitBranch: preprod retrofitIgnoredFiles: - force-app/main/default/applications/MyApp.app-meta.xml - force-app/main/default/applications/MyOtherApp.app-meta.xml - force-app/main/default/flexipages/MyFlexipageContainingDashboards.flexipage-meta.xml","title":"Description"},{"location":"hardis/org/retrieve/sources/retrofit/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command commit boolean If true, a commit will be performed after the retrofit commitmode option Defines if we commit all retrieved updates, or all updates including creations updated updated all debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal productionbranch option Name of the git branch corresponding to the org we want to perform the retrofit on. Can be defined in productionBranch property in .sfdx-hardis.yml push boolean If true, a push will be performed after the retrofit pushmode option Defines if we send merge request options to git push arguments default default mergerequest retrofittargetbranch option Name of branch the merge request will have as target Can be defined in retrofitBranch property in .sfdx-hardis.yml skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/retrieve/sources/retrofit/#examples","text":"$ sfdx hardis:org:retrieve:sources:retrofit sfdx hardis:org:retrieve:sources:retrofit --productionbranch master --commit --commitmode updated sfdx hardis:org:retrieve:sources:retrofit --productionbranch master --retrofitbranch preprod --commit --commitmode updated --push --pushmode mergerequest","title":"Examples"},{"location":"hardis/org/test/apex/","text":"hardis:org:test:apex Description Run apex tests in Salesforce org If following configuration is defined, it will fail if apex coverage target is not reached: Env APEX_TESTS_MIN_COVERAGE_ORG_WIDE or .sfdx-hardis property apexTestsMinCoverageOrgWide Env APEX_TESTS_MIN_COVERAGE_ORG_WIDE or .sfdx-hardis property apexTestsMinCoverageOrgWide You can override env var SFDX_TEST_WAIT_MINUTES to wait more than 60 minutes Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org testlevel -l option Level of tests to apply to validate deployment RunLocalTests NoTestRun RunSpecifiedTests RunLocalTests RunAllTestsInOrg websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:test:apex","title":"apex"},{"location":"hardis/org/test/apex/#hardisorgtestapex","text":"","title":"hardis:org:test:apex"},{"location":"hardis/org/test/apex/#description","text":"Run apex tests in Salesforce org If following configuration is defined, it will fail if apex coverage target is not reached: Env APEX_TESTS_MIN_COVERAGE_ORG_WIDE or .sfdx-hardis property apexTestsMinCoverageOrgWide Env APEX_TESTS_MIN_COVERAGE_ORG_WIDE or .sfdx-hardis property apexTestsMinCoverageOrgWide You can override env var SFDX_TEST_WAIT_MINUTES to wait more than 60 minutes","title":"Description"},{"location":"hardis/org/test/apex/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org testlevel -l option Level of tests to apply to validate deployment RunLocalTests NoTestRun RunSpecifiedTests RunLocalTests RunAllTestsInOrg websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/test/apex/#examples","text":"$ sfdx hardis:org:test:apex","title":"Examples"},{"location":"hardis/org/user/activateinvalid/","text":"hardis:org:user:activateinvalid Description Update sandbox users so their email is valid Example: replaces toto@company.com.dev.invalid with toto@company.com.dev.invalid See article below Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal profiles -p option Comma-separated list of profiles names that you want to reactive users assigned to and with a .invalid email skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:user:activateinvalid $ sfdx hardis:org:user:activateinvalid --targetusername myuser@myorg.com $ sfdx hardis:org:user:activateinvalid --profiles 'System Administrator,MyCustomProfile' --targetusername myuser@myorg.com","title":"activateinvalid"},{"location":"hardis/org/user/activateinvalid/#hardisorguseractivateinvalid","text":"","title":"hardis:org:user:activateinvalid"},{"location":"hardis/org/user/activateinvalid/#description","text":"Update sandbox users so their email is valid Example: replaces toto@company.com.dev.invalid with toto@company.com.dev.invalid See article below","title":"Description"},{"location":"hardis/org/user/activateinvalid/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal profiles -p option Comma-separated list of profiles names that you want to reactive users assigned to and with a .invalid email skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/user/activateinvalid/#examples","text":"$ sfdx hardis:org:user:activateinvalid $ sfdx hardis:org:user:activateinvalid --targetusername myuser@myorg.com $ sfdx hardis:org:user:activateinvalid --profiles 'System Administrator,MyCustomProfile' --targetusername myuser@myorg.com","title":"Examples"},{"location":"hardis/org/user/freeze/","text":"hardis:org:user:freeze Description Mass freeze users in org before a maintenance or go live See user guide in the following article https://medium.com/@dimitrimonge/freeze-unfreeze-users-during-salesforce-deployment-8a1488bf8dd3 Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) excludeprofiles -e option List of profiles that you want to NOT freeze, separated by commas includeprofiles -p option List of profiles that you want to freeze, separated by commas json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal maxuserdisplay -m option Maximum users to display in logs 100 name -n option Filter according to Name criteria skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:user:freeze $ sfdx hardis:org:user:freeze --targetusername myuser@myorg.com $ sfdx hardis:org:user:freeze --includeprofiles 'Standard' $ sfdx hardis:org:user:freeze --excludeprofiles 'System Administrator,Some Other Profile'","title":"freeze"},{"location":"hardis/org/user/freeze/#hardisorguserfreeze","text":"","title":"hardis:org:user:freeze"},{"location":"hardis/org/user/freeze/#description","text":"Mass freeze users in org before a maintenance or go live See user guide in the following article https://medium.com/@dimitrimonge/freeze-unfreeze-users-during-salesforce-deployment-8a1488bf8dd3","title":"Description"},{"location":"hardis/org/user/freeze/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) excludeprofiles -e option List of profiles that you want to NOT freeze, separated by commas includeprofiles -p option List of profiles that you want to freeze, separated by commas json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal maxuserdisplay -m option Maximum users to display in logs 100 name -n option Filter according to Name criteria skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/user/freeze/#examples","text":"$ sfdx hardis:org:user:freeze $ sfdx hardis:org:user:freeze --targetusername myuser@myorg.com $ sfdx hardis:org:user:freeze --includeprofiles 'Standard' $ sfdx hardis:org:user:freeze --excludeprofiles 'System Administrator,Some Other Profile'","title":"Examples"},{"location":"hardis/org/user/unfreeze/","text":"hardis:org:user:unfreeze Description Mass unfreeze users in org after a maintenance or go live See user guide in the following article https://medium.com/@dimitrimonge/freeze-unfreeze-users-during-salesforce-deployment-8a1488bf8dd3 Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) excludeprofiles -e option List of profiles that you want to NOT unfreeze, separated by commas includeprofiles -p option List of profiles that you want to unfreeze, separated by commas json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal maxuserdisplay -m option Maximum users to display in logs 100 name -n option Filter according to Name criteria skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:org:user:unfreeze $ sfdx hardis:org:user:unfreeze --targetusername myuser@myorg.com $ sfdx hardis:org:user:unfreeze --includeprofiles 'Standard' $ sfdx hardis:org:user:unfreeze --excludeprofiles 'System Administrator,Some Other Profile'","title":"unfreeze"},{"location":"hardis/org/user/unfreeze/#hardisorguserunfreeze","text":"","title":"hardis:org:user:unfreeze"},{"location":"hardis/org/user/unfreeze/#description","text":"Mass unfreeze users in org after a maintenance or go live See user guide in the following article https://medium.com/@dimitrimonge/freeze-unfreeze-users-during-salesforce-deployment-8a1488bf8dd3","title":"Description"},{"location":"hardis/org/user/unfreeze/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) excludeprofiles -e option List of profiles that you want to NOT unfreeze, separated by commas includeprofiles -p option List of profiles that you want to unfreeze, separated by commas json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal maxuserdisplay -m option Maximum users to display in logs 100 name -n option Filter according to Name criteria skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/org/user/unfreeze/#examples","text":"$ sfdx hardis:org:user:unfreeze $ sfdx hardis:org:user:unfreeze --targetusername myuser@myorg.com $ sfdx hardis:org:user:unfreeze --includeprofiles 'Standard' $ sfdx hardis:org:user:unfreeze --excludeprofiles 'System Administrator,Some Other Profile'","title":"Examples"},{"location":"hardis/package/create/","text":"hardis create Description Create a new package Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:package:create","title":"create"},{"location":"hardis/package/create/#hardiscreate","text":"","title":"hardiscreate"},{"location":"hardis/package/create/#description","text":"Create a new package","title":"Description"},{"location":"hardis/package/create/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/package/create/#examples","text":"$ sfdx hardis:package:create","title":"Examples"},{"location":"hardis/package/install/","text":"hardis install Description Install a package in an org using its id (starting with 04t ) Assisted menu to propose to update installedPackages property in .sfdx-hardis.yml Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) installationkey -k option installation key for key-protected package (default: null) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal package -p option Package Version Id to install (04t...) skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:package:install","title":"install"},{"location":"hardis/package/install/#hardisinstall","text":"","title":"hardisinstall"},{"location":"hardis/package/install/#description","text":"Install a package in an org using its id (starting with 04t ) Assisted menu to propose to update installedPackages property in .sfdx-hardis.yml","title":"Description"},{"location":"hardis/package/install/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) installationkey -k option installation key for key-protected package (default: null) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal package -p option Package Version Id to install (04t...) skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/package/install/#examples","text":"$ sfdx hardis:package:install","title":"Examples"},{"location":"hardis/package/mergexml/","text":"hardis mergexml Description Select and merge package.xml files Parameters Name Type Description Default Required Options folder -f option Root folder manifest json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal packagexmls -p option Comma separated list of package.xml files to merge. Will be prompted to user if not provided pattern -x option Name criteria to list package.xml files / / package .xml result -r option Result package.xml file name skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:package:mergexml $ sfdx hardis:package:mergexml --folder packages --pattern /**/*.xml --result myMergedPackage.xml $ sfdx hardis:package:mergexml --packagexmls \"config/mypackage1.xml,config/mypackage2.xml,config/mypackage3.xml\" --result myMergedPackage.xml","title":"mergexml"},{"location":"hardis/package/mergexml/#hardismergexml","text":"","title":"hardismergexml"},{"location":"hardis/package/mergexml/#description","text":"Select and merge package.xml files","title":"Description"},{"location":"hardis/package/mergexml/#parameters","text":"Name Type Description Default Required Options folder -f option Root folder manifest json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal packagexmls -p option Comma separated list of package.xml files to merge. Will be prompted to user if not provided pattern -x option Name criteria to list package.xml files / / package .xml result -r option Result package.xml file name skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/package/mergexml/#examples","text":"$ sfdx hardis:package:mergexml $ sfdx hardis:package:mergexml --folder packages --pattern /**/*.xml --result myMergedPackage.xml $ sfdx hardis:package:mergexml --packagexmls \"config/mypackage1.xml,config/mypackage2.xml,config/mypackage3.xml\" --result myMergedPackage.xml","title":"Examples"},{"location":"hardis/package/version/create/","text":"hardis version:create Description Create a new version of an unlocked package Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) deleteafter boolean Delete package version after creating it install -i boolean Install package version on default org after generation installkey -k option Package installation key json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal package -p option Package identifier that you want to use to generate a new package version skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:package:version:create","title":"create"},{"location":"hardis/package/version/create/#hardisversioncreate","text":"","title":"hardisversion:create"},{"location":"hardis/package/version/create/#description","text":"Create a new version of an unlocked package","title":"Description"},{"location":"hardis/package/version/create/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) deleteafter boolean Delete package version after creating it install -i boolean Install package version on default org after generation installkey -k option Package installation key json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal package -p option Package identifier that you want to use to generate a new package version skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/package/version/create/#examples","text":"$ sfdx hardis:package:version:create","title":"Examples"},{"location":"hardis/package/version/list/","text":"hardis version:list Description List versions of unlocked package Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:package:version:list","title":"list"},{"location":"hardis/package/version/list/#hardisversionlist","text":"","title":"hardisversion:list"},{"location":"hardis/package/version/list/#description","text":"List versions of unlocked package","title":"Description"},{"location":"hardis/package/version/list/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/package/version/list/#examples","text":"$ sfdx hardis:package:version:list","title":"Examples"},{"location":"hardis/package/version/promote/","text":"hardis version:promote Description Promote package(s) version(s): convert it from beta to released Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command auto -d boolean Auto-detect which versions of which packages need to be promoted debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:package:version:promote $ sfdx hardis:package:version:promote --auto","title":"promote"},{"location":"hardis/package/version/promote/#hardisversionpromote","text":"","title":"hardisversion:promote"},{"location":"hardis/package/version/promote/#description","text":"Promote package(s) version(s): convert it from beta to released","title":"Description"},{"location":"hardis/package/version/promote/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command auto -d boolean Auto-detect which versions of which packages need to be promoted debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/package/version/promote/#examples","text":"$ sfdx hardis:package:version:promote $ sfdx hardis:package:version:promote --auto","title":"Examples"},{"location":"hardis/project/create/","text":"hardis:project:create Description Create a new SFDX Project Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:create","title":"create"},{"location":"hardis/project/create/#hardisprojectcreate","text":"","title":"hardis:project:create"},{"location":"hardis/project/create/#description","text":"Create a new SFDX Project","title":"Description"},{"location":"hardis/project/create/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/create/#examples","text":"$ sfdx hardis:project:create","title":"Examples"},{"location":"hardis/project/lint/","text":"hardis:project:lint Description Apply syntactic analysis (linters) on the repository sources, using Mega-Linter Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) fix -f boolean Apply linters fixes json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:lint $ sfdx hardis:project:lint --fix","title":"lint"},{"location":"hardis/project/lint/#hardisprojectlint","text":"","title":"hardis:project:lint"},{"location":"hardis/project/lint/#description","text":"Apply syntactic analysis (linters) on the repository sources, using Mega-Linter","title":"Description"},{"location":"hardis/project/lint/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) fix -f boolean Apply linters fixes json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/lint/#examples","text":"$ sfdx hardis:project:lint $ sfdx hardis:project:lint --fix","title":"Examples"},{"location":"hardis/project/audit/apiversion/","text":"hardis:project:audit:apiversion Description Audit API version Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) failiferror -f boolean Fails (exit code 1) if an error is found json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal minimumapiversion -m option Minimum allowed API version 20 skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:audit:apiversion","title":"apiversion"},{"location":"hardis/project/audit/apiversion/#hardisprojectauditapiversion","text":"","title":"hardis:project:audit:apiversion"},{"location":"hardis/project/audit/apiversion/#description","text":"Audit API version","title":"Description"},{"location":"hardis/project/audit/apiversion/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) failiferror -f boolean Fails (exit code 1) if an error is found json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal minimumapiversion -m option Minimum allowed API version 20 skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/audit/apiversion/#examples","text":"$ sfdx hardis:project:audit:apiversion","title":"Examples"},{"location":"hardis/project/audit/callincallout/","text":"hardis:project:audit:callincallout Description Generate list of callIn and callouts from sfdx project Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:audit:callouts","title":"callincallout"},{"location":"hardis/project/audit/callincallout/#hardisprojectauditcallincallout","text":"","title":"hardis:project:audit:callincallout"},{"location":"hardis/project/audit/callincallout/#description","text":"Generate list of callIn and callouts from sfdx project","title":"Description"},{"location":"hardis/project/audit/callincallout/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/audit/callincallout/#examples","text":"$ sfdx hardis:project:audit:callouts","title":"Examples"},{"location":"hardis/project/audit/duplicatefiles/","text":"hardis:project:audit:duplicatefiles Description Find duplicate files in sfdx folder (often from past sfdx-cli bugs) Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal path -p option Root path to check /home/runner/work/sfdx-hardis/sfdx-hardis skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:audit:duplicatefiles","title":"duplicatefiles"},{"location":"hardis/project/audit/duplicatefiles/#hardisprojectauditduplicatefiles","text":"","title":"hardis:project:audit:duplicatefiles"},{"location":"hardis/project/audit/duplicatefiles/#description","text":"Find duplicate files in sfdx folder (often from past sfdx-cli bugs)","title":"Description"},{"location":"hardis/project/audit/duplicatefiles/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal path -p option Root path to check /home/runner/work/sfdx-hardis/sfdx-hardis skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/audit/duplicatefiles/#examples","text":"$ sfdx hardis:project:audit:duplicatefiles","title":"Examples"},{"location":"hardis/project/audit/remotesites/","text":"hardis:project:audit:remotesites Description Generate list of remote sites Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:audit:remotesites","title":"remotesites"},{"location":"hardis/project/audit/remotesites/#hardisprojectauditremotesites","text":"","title":"hardis:project:audit:remotesites"},{"location":"hardis/project/audit/remotesites/#description","text":"Generate list of remote sites","title":"Description"},{"location":"hardis/project/audit/remotesites/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/audit/remotesites/#examples","text":"$ sfdx hardis:project:audit:remotesites","title":"Examples"},{"location":"hardis/project/clean/emptyitems/","text":"hardis:project:clean:emptyitems Description Remove unwanted empty items within sfdx project sources Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) folder -f option Root folder force-app json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:clean:emptyitems","title":"emptyitems"},{"location":"hardis/project/clean/emptyitems/#hardisprojectcleanemptyitems","text":"","title":"hardis:project:clean:emptyitems"},{"location":"hardis/project/clean/emptyitems/#description","text":"Remove unwanted empty items within sfdx project sources","title":"Description"},{"location":"hardis/project/clean/emptyitems/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) folder -f option Root folder force-app json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/clean/emptyitems/#examples","text":"$ sfdx hardis:project:clean:emptyitems","title":"Examples"},{"location":"hardis/project/clean/hiddenitems/","text":"hardis:project:clean:hiddenitems Description Remove unwanted hidden items within sfdx project sources Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) folder -f option Root folder force-app json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:clean:hiddenitems","title":"hiddenitems"},{"location":"hardis/project/clean/hiddenitems/#hardisprojectcleanhiddenitems","text":"","title":"hardis:project:clean:hiddenitems"},{"location":"hardis/project/clean/hiddenitems/#description","text":"Remove unwanted hidden items within sfdx project sources","title":"Description"},{"location":"hardis/project/clean/hiddenitems/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) folder -f option Root folder force-app json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/clean/hiddenitems/#examples","text":"$ sfdx hardis:project:clean:hiddenitems","title":"Examples"},{"location":"hardis/project/clean/listviews/","text":"hardis:project:clean:listviews Description Replace Mine by Everything in ListView, and log the replacements in sfdx-hardis.yml Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) folder -f option Root folder force-app json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:clean:listviews","title":"listviews"},{"location":"hardis/project/clean/listviews/#hardisprojectcleanlistviews","text":"","title":"hardis:project:clean:listviews"},{"location":"hardis/project/clean/listviews/#description","text":"Replace Mine by Everything in ListView, and log the replacements in sfdx-hardis.yml","title":"Description"},{"location":"hardis/project/clean/listviews/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) folder -f option Root folder force-app json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/clean/listviews/#examples","text":"$ sfdx hardis:project:clean:listviews","title":"Examples"},{"location":"hardis/project/clean/manageditems/","text":"hardis:project:clean:manageditems Description Remove unwanted managed items within sfdx project sources Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) folder -f option Root folder force-app json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal namespace -n option Namespace to remove skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:clean:manageditems --namespace crta","title":"manageditems"},{"location":"hardis/project/clean/manageditems/#hardisprojectcleanmanageditems","text":"","title":"hardis:project:clean:manageditems"},{"location":"hardis/project/clean/manageditems/#description","text":"Remove unwanted managed items within sfdx project sources","title":"Description"},{"location":"hardis/project/clean/manageditems/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) folder -f option Root folder force-app json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal namespace -n option Namespace to remove skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/clean/manageditems/#examples","text":"$ sfdx hardis:project:clean:manageditems --namespace crta","title":"Examples"},{"location":"hardis/project/clean/minimizeprofiles/","text":"hardis:project:clean:minimizeprofiles Description Remove all profile attributes that exist on Permission Sets It is a bad practice to define on Profiles elements that can be defined on Permission Sets. Salesforce will deprecate such capability in Spring 26. Don't wait for that, and use minimizeProfiles cleaning to automatically remove from Profiles any permission that exists on a Permission Set ! The following XML tags are removed automatically: classAccesses customMetadataTypeAccesses externalDataSourceAccesses fieldPermissions objectPermissions pageAccesses userPermissions (except on Admin Profile) You can override this list by defining a property minimizeProfilesNodesToRemove in your .sfdx-hardis.yml config file. Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) folder -f option Root folder force-app json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:clean:minimizeprofiles","title":"minimizeprofiles"},{"location":"hardis/project/clean/minimizeprofiles/#hardisprojectcleanminimizeprofiles","text":"","title":"hardis:project:clean:minimizeprofiles"},{"location":"hardis/project/clean/minimizeprofiles/#description","text":"Remove all profile attributes that exist on Permission Sets It is a bad practice to define on Profiles elements that can be defined on Permission Sets. Salesforce will deprecate such capability in Spring 26. Don't wait for that, and use minimizeProfiles cleaning to automatically remove from Profiles any permission that exists on a Permission Set ! The following XML tags are removed automatically: classAccesses customMetadataTypeAccesses externalDataSourceAccesses fieldPermissions objectPermissions pageAccesses userPermissions (except on Admin Profile) You can override this list by defining a property minimizeProfilesNodesToRemove in your .sfdx-hardis.yml config file.","title":"Description"},{"location":"hardis/project/clean/minimizeprofiles/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) folder -f option Root folder force-app json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/clean/minimizeprofiles/#examples","text":"$ sfdx hardis:project:clean:minimizeprofiles","title":"Examples"},{"location":"hardis/project/clean/orgmissingitems/","text":"hardis:project:clean:orgmissingitems Description Clean SFDX sources from items present neither in target org nor local package.xml Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) folder -f option Root folder force-app json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal packagexmlfull -p option Path to packagexml used for cleaning. Must contain also standard CustomObject and CustomField elements. If not provided, it will be generated from a remote org packagexmltargetorg -t option Target org username or alias to build package.xml (sfdx must be authenticated). If not provided, will be prompted to the user. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:clean:orgmissingitems","title":"orgmissingitems"},{"location":"hardis/project/clean/orgmissingitems/#hardisprojectcleanorgmissingitems","text":"","title":"hardis:project:clean:orgmissingitems"},{"location":"hardis/project/clean/orgmissingitems/#description","text":"Clean SFDX sources from items present neither in target org nor local package.xml","title":"Description"},{"location":"hardis/project/clean/orgmissingitems/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) folder -f option Root folder force-app json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal packagexmlfull -p option Path to packagexml used for cleaning. Must contain also standard CustomObject and CustomField elements. If not provided, it will be generated from a remote org packagexmltargetorg -t option Target org username or alias to build package.xml (sfdx must be authenticated). If not provided, will be prompted to the user. skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/clean/orgmissingitems/#examples","text":"$ sfdx hardis:project:clean:orgmissingitems","title":"Examples"},{"location":"hardis/project/clean/references/","text":"hardis:project:clean:references Description Remove unwanted references within sfdx project sources Parameters Name Type Description Default Required Options config -c option Path to a JSON config file or a destructiveChanges.xml file debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required type -t option Cleaning type all caseentitlement dashboards datadotcom destructivechanges localfields productrequest websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:clean:references $ sfdx hardis:project:clean:references --type all $ sfdx hardis:project:clean:references --config ./cleaning/myconfig.json $ sfdx hardis:project:clean:references --config ./somefolder/myDestructivePackage.xml","title":"references"},{"location":"hardis/project/clean/references/#hardisprojectcleanreferences","text":"","title":"hardis:project:clean:references"},{"location":"hardis/project/clean/references/#description","text":"Remove unwanted references within sfdx project sources","title":"Description"},{"location":"hardis/project/clean/references/#parameters","text":"Name Type Description Default Required Options config -c option Path to a JSON config file or a destructiveChanges.xml file debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required type -t option Cleaning type all caseentitlement dashboards datadotcom destructivechanges localfields productrequest websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/clean/references/#examples","text":"$ sfdx hardis:project:clean:references $ sfdx hardis:project:clean:references --type all $ sfdx hardis:project:clean:references --config ./cleaning/myconfig.json $ sfdx hardis:project:clean:references --config ./somefolder/myDestructivePackage.xml","title":"Examples"},{"location":"hardis/project/clean/retrievefolders/","text":"hardis:project:clean:retrievefolders Description Retrieve dashboards, documents and report folders in DX sources. Use -u ORGALIAS Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:clean:retrievefolders","title":"retrievefolders"},{"location":"hardis/project/clean/retrievefolders/#hardisprojectcleanretrievefolders","text":"","title":"hardis:project:clean:retrievefolders"},{"location":"hardis/project/clean/retrievefolders/#description","text":"Retrieve dashboards, documents and report folders in DX sources. Use -u ORGALIAS","title":"Description"},{"location":"hardis/project/clean/retrievefolders/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/clean/retrievefolders/#examples","text":"$ sfdx hardis:project:clean:retrievefolders","title":"Examples"},{"location":"hardis/project/clean/standarditems/","text":"hardis:project:clean:standarditems Description Remove unwanted standard items within sfdx project sources Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:clean:standarditems","title":"standarditems"},{"location":"hardis/project/clean/standarditems/#hardisprojectcleanstandarditems","text":"","title":"hardis:project:clean:standarditems"},{"location":"hardis/project/clean/standarditems/#description","text":"Remove unwanted standard items within sfdx project sources","title":"Description"},{"location":"hardis/project/clean/standarditems/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/clean/standarditems/#examples","text":"$ sfdx hardis:project:clean:standarditems","title":"Examples"},{"location":"hardis/project/clean/systemdebug/","text":"hardis:project:clean:systemdebug Description Clean System.debug() lines in APEX Code (classes and triggers) Parameters Name Type Description Default Required Options delete -d boolean Delete lines with System.debug folder -f option Root folder force-app json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:clean:systemdebug","title":"systemdebug"},{"location":"hardis/project/clean/systemdebug/#hardisprojectcleansystemdebug","text":"","title":"hardis:project:clean:systemdebug"},{"location":"hardis/project/clean/systemdebug/#description","text":"Clean System.debug() lines in APEX Code (classes and triggers)","title":"Description"},{"location":"hardis/project/clean/systemdebug/#parameters","text":"Name Type Description Default Required Options delete -d boolean Delete lines with System.debug folder -f option Root folder force-app json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/clean/systemdebug/#examples","text":"$ sfdx hardis:project:clean:systemdebug","title":"Examples"},{"location":"hardis/project/clean/xml/","text":"hardis:project:clean:xml Description Remove XML elements using Glob patterns and XPath expressions This can be very useful to avoid to always remove manually the same elements in the same XML file. globpattern can be any glob pattern allowing to identify the XML files to update, for example /**/*.flexipage-meta.xml xpath can be any xpath following the format //ns:PARENT-TAG-NAME//ns:TAG-NAME[contains(text(),'TAG-VALUE')] . If an element is found, the whole PARENT-TAG-NAME (with its subtree) will be removed. Note: If globpattern and xpath are not sent, elements defined in property cleanXmlPatterns in .sfdx-hardis.yml config file will be used Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) folder -f option Root folder force-app globpattern -p option Glob pattern to find files to clean. Ex: /* / .flexipage-meta.xml json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal namespace -n option XML Namespace to use http://soap.sforce.com/2006/04/metadata skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration xpath -x option XPath to use to detect the elements to remove. Ex: //ns:flexiPageRegions//ns:name[contains(text(),'dashboardName')] Examples $ sfdx hardis:project:clean:xml $ sfdx hardis:project:clean:xml --globpattern \"/**/*.flexipage-meta.xml\" --xpath \"//ns:flexiPageRegions//ns:name[contains(text(),'dashboardName')]\"","title":"xml"},{"location":"hardis/project/clean/xml/#hardisprojectcleanxml","text":"","title":"hardis:project:clean:xml"},{"location":"hardis/project/clean/xml/#description","text":"Remove XML elements using Glob patterns and XPath expressions This can be very useful to avoid to always remove manually the same elements in the same XML file. globpattern can be any glob pattern allowing to identify the XML files to update, for example /**/*.flexipage-meta.xml xpath can be any xpath following the format //ns:PARENT-TAG-NAME//ns:TAG-NAME[contains(text(),'TAG-VALUE')] . If an element is found, the whole PARENT-TAG-NAME (with its subtree) will be removed. Note: If globpattern and xpath are not sent, elements defined in property cleanXmlPatterns in .sfdx-hardis.yml config file will be used","title":"Description"},{"location":"hardis/project/clean/xml/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) folder -f option Root folder force-app globpattern -p option Glob pattern to find files to clean. Ex: /* / .flexipage-meta.xml json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal namespace -n option XML Namespace to use http://soap.sforce.com/2006/04/metadata skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration xpath -x option XPath to use to detect the elements to remove. Ex: //ns:flexiPageRegions//ns:name[contains(text(),'dashboardName')]","title":"Parameters"},{"location":"hardis/project/clean/xml/#examples","text":"$ sfdx hardis:project:clean:xml $ sfdx hardis:project:clean:xml --globpattern \"/**/*.flexipage-meta.xml\" --xpath \"//ns:flexiPageRegions//ns:name[contains(text(),'dashboardName')]\"","title":"Examples"},{"location":"hardis/project/configure/auth/","text":"hardis:project:configure:auth Description Configure authentication from git branch to target org Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) devhub -b boolean Configure project DevHub json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:configure:auth","title":"auth"},{"location":"hardis/project/configure/auth/#hardisprojectconfigureauth","text":"","title":"hardis:project:configure:auth"},{"location":"hardis/project/configure/auth/#description","text":"Configure authentication from git branch to target org","title":"Description"},{"location":"hardis/project/configure/auth/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) devhub -b boolean Configure project DevHub json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/configure/auth/#examples","text":"$ sfdx hardis:project:configure:auth","title":"Examples"},{"location":"hardis/project/convert/profilestopermsets/","text":"hardis:project:convert:profilestopermsets Description Creates permission sets from existing profiles, with id PS_PROFILENAME Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) except -e option List of filters json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:convert:profilestopermsets","title":"profilestopermsets"},{"location":"hardis/project/convert/profilestopermsets/#hardisprojectconvertprofilestopermsets","text":"","title":"hardis:project:convert:profilestopermsets"},{"location":"hardis/project/convert/profilestopermsets/#description","text":"Creates permission sets from existing profiles, with id PS_PROFILENAME","title":"Description"},{"location":"hardis/project/convert/profilestopermsets/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) except -e option List of filters json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/convert/profilestopermsets/#examples","text":"$ sfdx hardis:project:convert:profilestopermsets","title":"Examples"},{"location":"hardis/project/deploy/sources/dx/","text":"hardis:project:deploy:sources:dx Description Deploy SFDX source to org, following deploymentPlan in .sfdx-hardis.yml In case of errors, tips to fix them will be included within the error messages. Dynamic deployment items If necessary,you can define the following files (that supports wildcards * ): manifest/packageDeployOnce.xml : Every element defined in this file will be deployed only if it is not existing yet in the target org (can be useful with ListView for example, if the client wants to update them directly in production org) manifest/packageXmlOnChange.xml : Every element defined in this file will not be deployed if it already has a similar definition in target org (can be useful for SharingRules for example) Deployment plan If you need to deploy in multiple steps, you can define a property deploymentPlan in .sfdx-hardis.yml . If a file manifest/package.xml is found, it will be placed with order 0 in the deployment plan If a file manifest/destructiveChanges.xml is found, it will be executed as --postdestructivechanges If env var SFDX_HARDIS_DEPLOY_IGNORE_SPLIT_PACKAGES is defined as false , split of package.xml will be applied Example: deploymentPlan: packages: - label: Deploy Flow-Workflow packageXmlFile: manifest/splits/packageXmlFlowWorkflow.xml order: 6 - label: Deploy SharingRules - Case packageXmlFile: manifest/splits/packageXmlSharingRulesCase.xml order: 30 waitAfter: 30 Packages installation You can define a list of package to install during deployments using property installedPackages If INSTALL_PACKAGES_DURING_CHECK_DEPLOY is defined as true (or installPackagesDuringCheckDeploy: true in .sfdx-hardis.yml ), packages will be installed even if the command is called with --check mode You can automatically update this property by listing all packages installed on an org using command sfdx hardis:org:retrieve:packageconfig Example: installedPackages: - Id: 0A35r0000009EtECAU SubscriberPackageId: 033i0000000LVMYAA4 SubscriberPackageName: Marketing Cloud SubscriberPackageNamespace: et4ae5 SubscriberPackageVersionId: 04t6S000000l11iQAA SubscriberPackageVersionName: Marketing Cloud SubscriberPackageVersionNumber: 236.0.0.2 installOnScratchOrgs: true // true or false depending you want to install this package when creating a new scratch org installDuringDeployments: true // set as true to install package during a deployment using sfdx hardis:project:deploy:sources:dx installationkey: xxxxxxxxxxxxxxxxxxxx // if the package has a password, write it in this property - Id: 0A35r0000009F9CCAU SubscriberPackageId: 033b0000000Pf2AAAS SubscriberPackageName: Declarative Lookup Rollup Summaries Tool SubscriberPackageNamespace: dlrs SubscriberPackageVersionId: 04t5p000001BmLvAAK SubscriberPackageVersionName: Release SubscriberPackageVersionNumber: 2.15.0.9 installOnScratchOrgs: true installDuringDeployments: true Automated fixes post deployments List view with scope Mine If you defined a property listViewsToSetToMine in your .sfdx-hardis.yml, related ListViews will be set to Mine ( see command https://sfdx-hardis.cloudity.com/hardis/org/fix/listviewmine/ ) Example: listViewsToSetToMine: - \"Operation__c:MyCurrentOperations\" - \"Operation__c:MyFinalizedOperations\" - \"Opportunity:Default_Opportunity_Pipeline\" - \"Opportunity:MyCurrentSubscriptions\" - \"Opportunity:MySubscriptions\" - \"Account:MyActivePartners\" Troubleshooting: if you need to fix ListViews with mine from an alpine-linux based docker image, use this workaround in your dockerfile: # Do not use puppeteer embedded chromium RUN apk add --update --no-cache chromium ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=\"true\" ENV CHROMIUM_PATH=\"/usr/bin/chromium-browser\" ENV PUPPETEER_EXECUTABLE_PATH=\"$\\{CHROMIUM_PATH}\" // remove \\ before { If you need to increase the deployment waiting time (force:source:deploy --wait arg), you can define env var SFDX_DEPLOY_WAIT_MINUTES Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command check -c boolean Only checks the deployment, there is no impact on target org debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal packagexml -p option Path to package.xml containing what you want to deploy in target org skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org testlevel -l option Level of tests to apply to validate deployment RunLocalTests NoTestRun RunSpecifiedTests RunLocalTests RunAllTestsInOrg websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:deploy:sources:dx $ sfdx hardis:project:deploy:sources:dx --check","title":"dx"},{"location":"hardis/project/deploy/sources/dx/#hardisprojectdeploysourcesdx","text":"","title":"hardis:project:deploy:sources:dx"},{"location":"hardis/project/deploy/sources/dx/#description","text":"Deploy SFDX source to org, following deploymentPlan in .sfdx-hardis.yml In case of errors, tips to fix them will be included within the error messages.","title":"Description"},{"location":"hardis/project/deploy/sources/dx/#dynamic-deployment-items","text":"If necessary,you can define the following files (that supports wildcards * ): manifest/packageDeployOnce.xml : Every element defined in this file will be deployed only if it is not existing yet in the target org (can be useful with ListView for example, if the client wants to update them directly in production org) manifest/packageXmlOnChange.xml : Every element defined in this file will not be deployed if it already has a similar definition in target org (can be useful for SharingRules for example)","title":"Dynamic deployment items"},{"location":"hardis/project/deploy/sources/dx/#deployment-plan","text":"If you need to deploy in multiple steps, you can define a property deploymentPlan in .sfdx-hardis.yml . If a file manifest/package.xml is found, it will be placed with order 0 in the deployment plan If a file manifest/destructiveChanges.xml is found, it will be executed as --postdestructivechanges If env var SFDX_HARDIS_DEPLOY_IGNORE_SPLIT_PACKAGES is defined as false , split of package.xml will be applied Example: deploymentPlan: packages: - label: Deploy Flow-Workflow packageXmlFile: manifest/splits/packageXmlFlowWorkflow.xml order: 6 - label: Deploy SharingRules - Case packageXmlFile: manifest/splits/packageXmlSharingRulesCase.xml order: 30 waitAfter: 30","title":"Deployment plan"},{"location":"hardis/project/deploy/sources/dx/#packages-installation","text":"You can define a list of package to install during deployments using property installedPackages If INSTALL_PACKAGES_DURING_CHECK_DEPLOY is defined as true (or installPackagesDuringCheckDeploy: true in .sfdx-hardis.yml ), packages will be installed even if the command is called with --check mode You can automatically update this property by listing all packages installed on an org using command sfdx hardis:org:retrieve:packageconfig Example: installedPackages: - Id: 0A35r0000009EtECAU SubscriberPackageId: 033i0000000LVMYAA4 SubscriberPackageName: Marketing Cloud SubscriberPackageNamespace: et4ae5 SubscriberPackageVersionId: 04t6S000000l11iQAA SubscriberPackageVersionName: Marketing Cloud SubscriberPackageVersionNumber: 236.0.0.2 installOnScratchOrgs: true // true or false depending you want to install this package when creating a new scratch org installDuringDeployments: true // set as true to install package during a deployment using sfdx hardis:project:deploy:sources:dx installationkey: xxxxxxxxxxxxxxxxxxxx // if the package has a password, write it in this property - Id: 0A35r0000009F9CCAU SubscriberPackageId: 033b0000000Pf2AAAS SubscriberPackageName: Declarative Lookup Rollup Summaries Tool SubscriberPackageNamespace: dlrs SubscriberPackageVersionId: 04t5p000001BmLvAAK SubscriberPackageVersionName: Release SubscriberPackageVersionNumber: 2.15.0.9 installOnScratchOrgs: true installDuringDeployments: true","title":"Packages installation"},{"location":"hardis/project/deploy/sources/dx/#automated-fixes-post-deployments","text":"","title":"Automated fixes post deployments"},{"location":"hardis/project/deploy/sources/dx/#list-view-with-scope-mine","text":"If you defined a property listViewsToSetToMine in your .sfdx-hardis.yml, related ListViews will be set to Mine ( see command https://sfdx-hardis.cloudity.com/hardis/org/fix/listviewmine/ ) Example: listViewsToSetToMine: - \"Operation__c:MyCurrentOperations\" - \"Operation__c:MyFinalizedOperations\" - \"Opportunity:Default_Opportunity_Pipeline\" - \"Opportunity:MyCurrentSubscriptions\" - \"Opportunity:MySubscriptions\" - \"Account:MyActivePartners\" Troubleshooting: if you need to fix ListViews with mine from an alpine-linux based docker image, use this workaround in your dockerfile: # Do not use puppeteer embedded chromium RUN apk add --update --no-cache chromium ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=\"true\" ENV CHROMIUM_PATH=\"/usr/bin/chromium-browser\" ENV PUPPETEER_EXECUTABLE_PATH=\"$\\{CHROMIUM_PATH}\" // remove \\ before { If you need to increase the deployment waiting time (force:source:deploy --wait arg), you can define env var SFDX_DEPLOY_WAIT_MINUTES","title":"List view with scope Mine"},{"location":"hardis/project/deploy/sources/dx/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command check -c boolean Only checks the deployment, there is no impact on target org debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal packagexml -p option Path to package.xml containing what you want to deploy in target org skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org testlevel -l option Level of tests to apply to validate deployment RunLocalTests NoTestRun RunSpecifiedTests RunLocalTests RunAllTestsInOrg websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/deploy/sources/dx/#examples","text":"$ sfdx hardis:project:deploy:sources:dx $ sfdx hardis:project:deploy:sources:dx --check","title":"Examples"},{"location":"hardis/project/deploy/sources/metadata/","text":"hardis:project:deploy:sources:metadata Description Deploy metadatas to source org Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command check -c boolean Only checks the deployment, there is no impact on target org debug -d boolean Activate debug mode (more logs) deploydir -x option Deploy directory . destructivepackagexml -k option Path to destructiveChanges.xml file to deploy filter -f boolean Filter metadatas before deploying json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal packagexml -p option Path to package.xml file to deploy skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org testlevel -l option Level of tests to apply to validate deployment RunLocalTests NoTestRun RunSpecifiedTests RunLocalTests RunAllTestsInOrg websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:deploy:sources:metadata","title":"metadata"},{"location":"hardis/project/deploy/sources/metadata/#hardisprojectdeploysourcesmetadata","text":"","title":"hardis:project:deploy:sources:metadata"},{"location":"hardis/project/deploy/sources/metadata/#description","text":"Deploy metadatas to source org","title":"Description"},{"location":"hardis/project/deploy/sources/metadata/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command check -c boolean Only checks the deployment, there is no impact on target org debug -d boolean Activate debug mode (more logs) deploydir -x option Deploy directory . destructivepackagexml -k option Path to destructiveChanges.xml file to deploy filter -f boolean Filter metadatas before deploying json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal packagexml -p option Path to package.xml file to deploy skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org testlevel -l option Level of tests to apply to validate deployment RunLocalTests NoTestRun RunSpecifiedTests RunLocalTests RunAllTestsInOrg websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/deploy/sources/metadata/#examples","text":"$ sfdx hardis:project:deploy:sources:metadata","title":"Examples"},{"location":"hardis/project/fix/v53flexipages/","text":"hardis:project:fix:v53flexipages Description Fix flexipages for apiVersion v53 (Winter22). Note: Update api version to 53.0 in package.xml and sfdx-project.json Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal path -p option Root folder /home/runner/work/sfdx-hardis/sfdx-hardis skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:fix:v53flexipages","title":"v53flexipages"},{"location":"hardis/project/fix/v53flexipages/#hardisprojectfixv53flexipages","text":"","title":"hardis:project:fix:v53flexipages"},{"location":"hardis/project/fix/v53flexipages/#description","text":"Fix flexipages for apiVersion v53 (Winter22). Note: Update api version to 53.0 in package.xml and sfdx-project.json","title":"Description"},{"location":"hardis/project/fix/v53flexipages/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal path -p option Root folder /home/runner/work/sfdx-hardis/sfdx-hardis skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/fix/v53flexipages/#examples","text":"$ sfdx hardis:project:fix:v53flexipages","title":"Examples"},{"location":"hardis/project/generate/gitdelta/","text":"hardis:project:generate:gitdelta Description Generate package.xml git delta between 2 commits Parameters Name Type Description Default Required Options branch option Git branch to use to generate delta debug -d boolean Activate debug mode (more logs) fromcommit option Hash of commit to start from json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required tocommit option Hash of commit to stop at websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:project:generate:gitdelta","title":"gitdelta"},{"location":"hardis/project/generate/gitdelta/#hardisprojectgenerategitdelta","text":"","title":"hardis:project:generate:gitdelta"},{"location":"hardis/project/generate/gitdelta/#description","text":"Generate package.xml git delta between 2 commits","title":"Description"},{"location":"hardis/project/generate/gitdelta/#parameters","text":"Name Type Description Default Required Options branch option Git branch to use to generate delta debug -d boolean Activate debug mode (more logs) fromcommit option Hash of commit to start from json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required tocommit option Hash of commit to stop at websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/generate/gitdelta/#examples","text":"$ sfdx hardis:project:generate:gitdelta","title":"Examples"},{"location":"hardis/project/metadata/findduplicates/","text":"hardis:project:metadata:findduplicates Description find duplicate values in XML file(s). Find duplicate values in XML file(s). Keys to be checked can be configured in config/sfdx-hardis.yml using property metadataDuplicateFindKeys. Default config : metadataDuplicateFindKeys : [object Object] Parameters Name Type Description Default Required Options files -f option XML metadata files path json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples <?xml version=\"1.0\" encoding=\"UTF-8\"?> <Layout xmlns=\"http://soap.sforce.com/2006/04/metadata\"> <layoutSections> ... <layoutColumns> <layoutItems> <behavior>Required</behavior> <field>Name</field> </layoutItems> <layoutItems> <behavior>Required</behavior> <field>Name</field> </layoutItems> </layoutColumns> </layoutSections> </Layout> $ sfdx hardis:project:metadata:findduplicates --file layout.layout-meta.xml [sfdx-hardis] Duplicate values in layout.layout-meta.xml - Key : Layout.layoutSections.layoutColumns.layoutItems.field - Values : Name $ sfdx hardis:project.metadata:findduplicates -f \"force-app/main/default/**/*.xml\" [sfdx-hardis] hardis:project:metadata:findduplicates execution time 0:00:00.397 [sfdx-hardis] Duplicate values in layout1.layout-meta.xml - Key : Layout.layoutSections.layoutColumns.layoutItems.field - Values : CreatedById [sfdx-hardis] Duplicate values in layout2.layout-meta.xml - Key : Layout.layoutSections.layoutColumns.layoutItems.field - Values : LastModifiedById, Name","title":"findduplicates"},{"location":"hardis/project/metadata/findduplicates/#hardisprojectmetadatafindduplicates","text":"","title":"hardis:project:metadata:findduplicates"},{"location":"hardis/project/metadata/findduplicates/#description","text":"find duplicate values in XML file(s). Find duplicate values in XML file(s). Keys to be checked can be configured in config/sfdx-hardis.yml using property metadataDuplicateFindKeys. Default config : metadataDuplicateFindKeys : [object Object]","title":"Description"},{"location":"hardis/project/metadata/findduplicates/#parameters","text":"Name Type Description Default Required Options files -f option XML metadata files path json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/project/metadata/findduplicates/#examples","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <Layout xmlns=\"http://soap.sforce.com/2006/04/metadata\"> <layoutSections> ... <layoutColumns> <layoutItems> <behavior>Required</behavior> <field>Name</field> </layoutItems> <layoutItems> <behavior>Required</behavior> <field>Name</field> </layoutItems> </layoutColumns> </layoutSections> </Layout> $ sfdx hardis:project:metadata:findduplicates --file layout.layout-meta.xml [sfdx-hardis] Duplicate values in layout.layout-meta.xml - Key : Layout.layoutSections.layoutColumns.layoutItems.field - Values : Name $ sfdx hardis:project.metadata:findduplicates -f \"force-app/main/default/**/*.xml\" [sfdx-hardis] hardis:project:metadata:findduplicates execution time 0:00:00.397 [sfdx-hardis] Duplicate values in layout1.layout-meta.xml - Key : Layout.layoutSections.layoutColumns.layoutItems.field - Values : CreatedById [sfdx-hardis] Duplicate values in layout2.layout-meta.xml - Key : Layout.layoutSections.layoutColumns.layoutItems.field - Values : LastModifiedById, Name","title":"Examples"},{"location":"hardis/scratch/create/","text":"hardis:scratch:create Description Create and initialize a scratch org or a source-tracked sandbox (config can be defined using config/.sfdx-hardis.yml ): Install packages Use property installedPackages Push sources Assign permission sets Use property initPermissionSets Run apex initialization scripts Use property scratchOrgInitApexScripts Load data Use property dataPackages Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) forcenew -n boolean If an existing scratch org exists, do not reuse it but create a new one json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal pool -d boolean Creates the scratch org for a scratch org pool skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:scratch:create","title":"create"},{"location":"hardis/scratch/create/#hardisscratchcreate","text":"","title":"hardis:scratch:create"},{"location":"hardis/scratch/create/#description","text":"Create and initialize a scratch org or a source-tracked sandbox (config can be defined using config/.sfdx-hardis.yml ): Install packages Use property installedPackages Push sources Assign permission sets Use property initPermissionSets Run apex initialization scripts Use property scratchOrgInitApexScripts Load data Use property dataPackages","title":"Description"},{"location":"hardis/scratch/create/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) forcenew -n boolean If an existing scratch org exists, do not reuse it but create a new one json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal pool -d boolean Creates the scratch org for a scratch org pool skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/scratch/create/#examples","text":"$ sfdx hardis:scratch:create","title":"Examples"},{"location":"hardis/scratch/delete/","text":"hardis:scratch:delete Description Assisted menu to delete scratch orgs associated to a DevHub Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:scratch:delete","title":"delete"},{"location":"hardis/scratch/delete/#hardisscratchdelete","text":"","title":"hardis:scratch:delete"},{"location":"hardis/scratch/delete/#description","text":"Assisted menu to delete scratch orgs associated to a DevHub","title":"Description"},{"location":"hardis/scratch/delete/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/scratch/delete/#examples","text":"$ sfdx hardis:scratch:delete","title":"Examples"},{"location":"hardis/scratch/pull/","text":"hardis:scratch:pull Description This commands pulls the updates you performed in your scratch or sandbox org, into your local files Then, you probably want to stage and commit the files containing the updates you want to keep, as explained in this video. Calls sfdx force:source:pull under the hood If there are errors, proposes to automatically add erroneous item in .forceignore , then pull again If you want to always retrieve sources like CustomApplication that are not always detected as updates by force:source:pull , you can define property autoRetrieveWhenPull in .sfdx-hardis.yml Example: autoRetrieveWhenPull: - CustomApplication:MyCustomApplication - CustomApplication:MyOtherCustomApplication - CustomApplication:MyThirdCustomApp Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:scratch:pull","title":"pull"},{"location":"hardis/scratch/pull/#hardisscratchpull","text":"","title":"hardis:scratch:pull"},{"location":"hardis/scratch/pull/#description","text":"This commands pulls the updates you performed in your scratch or sandbox org, into your local files Then, you probably want to stage and commit the files containing the updates you want to keep, as explained in this video. Calls sfdx force:source:pull under the hood If there are errors, proposes to automatically add erroneous item in .forceignore , then pull again If you want to always retrieve sources like CustomApplication that are not always detected as updates by force:source:pull , you can define property autoRetrieveWhenPull in .sfdx-hardis.yml Example: autoRetrieveWhenPull: - CustomApplication:MyCustomApplication - CustomApplication:MyOtherCustomApplication - CustomApplication:MyThirdCustomApp","title":"Description"},{"location":"hardis/scratch/pull/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/scratch/pull/#examples","text":"$ sfdx hardis:scratch:pull","title":"Examples"},{"location":"hardis/scratch/push/","text":"hardis:scratch:push Description Push local files to scratch org Calls sfdx force:source:push under the hood Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:scratch:push","title":"push"},{"location":"hardis/scratch/push/#hardisscratchpush","text":"","title":"hardis:scratch:push"},{"location":"hardis/scratch/push/#description","text":"Push local files to scratch org Calls sfdx force:source:push under the hood","title":"Description"},{"location":"hardis/scratch/push/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/scratch/push/#examples","text":"$ sfdx hardis:scratch:push","title":"Examples"},{"location":"hardis/scratch/pool/create/","text":"hardis:scratch:pool:create Description Select a data storage service and configure information to build a scratch org pool Run the command, follow instruction, then you need to schedule a daily CI job for the pool maintenance: - Define CI ENV variable SCRATCH_ORG_POOL with value \"true\" - Call the following lines in the CI job: sfdx hardis:auth:login --devhub sfdx hardis:scratch:pool:refresh Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:scratch:pool:configure","title":"create"},{"location":"hardis/scratch/pool/create/#hardisscratchpoolcreate","text":"","title":"hardis:scratch:pool:create"},{"location":"hardis/scratch/pool/create/#description","text":"Select a data storage service and configure information to build a scratch org pool Run the command, follow instruction, then you need to schedule a daily CI job for the pool maintenance: - Define CI ENV variable SCRATCH_ORG_POOL with value \"true\" - Call the following lines in the CI job: sfdx hardis:auth:login --devhub sfdx hardis:scratch:pool:refresh","title":"Description"},{"location":"hardis/scratch/pool/create/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/scratch/pool/create/#examples","text":"$ sfdx hardis:scratch:pool:configure","title":"Examples"},{"location":"hardis/scratch/pool/localauth/","text":"hardis:scratch:pool:localauth Description Calls the related storage service to request api keys and secrets that allows a local user to fetch a scratch org from scratch org pool Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:scratch:pool:localauth","title":"localauth"},{"location":"hardis/scratch/pool/localauth/#hardisscratchpoollocalauth","text":"","title":"hardis:scratch:pool:localauth"},{"location":"hardis/scratch/pool/localauth/#description","text":"Calls the related storage service to request api keys and secrets that allows a local user to fetch a scratch org from scratch org pool","title":"Description"},{"location":"hardis/scratch/pool/localauth/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/scratch/pool/localauth/#examples","text":"$ sfdx hardis:scratch:pool:localauth","title":"Examples"},{"location":"hardis/scratch/pool/refresh/","text":"hardis:scratch:pool:refresh Description Create enough scratch orgs to fill the pool Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:scratch:pool:refresh","title":"refresh"},{"location":"hardis/scratch/pool/refresh/#hardisscratchpoolrefresh","text":"","title":"hardis:scratch:pool:refresh"},{"location":"hardis/scratch/pool/refresh/#description","text":"Create enough scratch orgs to fill the pool","title":"Description"},{"location":"hardis/scratch/pool/refresh/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/scratch/pool/refresh/#examples","text":"$ sfdx hardis:scratch:pool:refresh","title":"Examples"},{"location":"hardis/scratch/pool/reset/","text":"hardis:scratch:pool:reset Description Reset scratch org pool (delete all scratches in the pool) Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:scratch:pool:refresh","title":"reset"},{"location":"hardis/scratch/pool/reset/#hardisscratchpoolreset","text":"","title":"hardis:scratch:pool:reset"},{"location":"hardis/scratch/pool/reset/#description","text":"Reset scratch org pool (delete all scratches in the pool)","title":"Description"},{"location":"hardis/scratch/pool/reset/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/scratch/pool/reset/#examples","text":"$ sfdx hardis:scratch:pool:refresh","title":"Examples"},{"location":"hardis/scratch/pool/view/","text":"hardis:scratch:pool:view Description Displays all stored content of project scratch org pool if defined Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:scratch:pool:view","title":"view"},{"location":"hardis/scratch/pool/view/#hardisscratchpoolview","text":"","title":"hardis:scratch:pool:view"},{"location":"hardis/scratch/pool/view/#description","text":"Displays all stored content of project scratch org pool if defined","title":"Description"},{"location":"hardis/scratch/pool/view/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/scratch/pool/view/#examples","text":"$ sfdx hardis:scratch:pool:view","title":"Examples"},{"location":"hardis/source/deploy/","text":"hardis:source:deploy Description sfdx-hardis wrapper for sfdx force:source:deploy that displays tips to solve deployment errors. Additional to the base command wrapper: If using --checkonly , add options --checkcoverage and --coverageformatters json-summary to check that org coverage is > 75% (or value defined in .sfdx-hardis.yml property apexTestsMinCoverageOrgWide ) You can also have deployment results as pull request comments, on: Gitlab (see Gitlab integration configuration ) Azure DevOps (see Azure integration configuration ) See documentation of Salesforce command Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command checkcoverage boolean Check Apex org coverage checkonly -c boolean checkonly coverageformatters option coverageformatters debug boolean debug forceoverwrite -f boolean forceoverwrite ignoreerrors -o boolean ignoreErrors ignorewarnings -g boolean ignoreWarnings json boolean format output as json junit boolean junit loglevel option logging level for this command invocation warn trace debug info warn error fatal manifest -x option flagsLong.manifest metadata -m option metadata postdestructivechanges option postdestructivechanges predestructivechanges option predestructivechanges resultsdir option resultsdir runtests -r option runTests soapdeploy boolean soapDeploy sourcepath -p option sourcePath targetusername -u option username or alias for the target org; overrides default target org testlevel -l option testlevel NoTestRun NoTestRun RunSpecifiedTests RunLocalTests RunAllTestsInOrg tracksource -t boolean tracksource validateddeployrequestid -q option validateDeployRequestId verbose boolean verbose wait -w option wait [object Object] websocket option websocket Examples $ sfdx hardis:source:deploy -x manifest/package.xml --wait 60 --ignorewarnings --testlevel RunLocalTests --postdestructivechanges ./manifest/destructiveChanges.xml --targetusername nicolas.vuillamy@cloudity.com.sfdxhardis --checkonly --checkcoverage --verbose --coverageformatters json-summary","title":"deploy"},{"location":"hardis/source/deploy/#hardissourcedeploy","text":"","title":"hardis:source:deploy"},{"location":"hardis/source/deploy/#description","text":"sfdx-hardis wrapper for sfdx force:source:deploy that displays tips to solve deployment errors. Additional to the base command wrapper: If using --checkonly , add options --checkcoverage and --coverageformatters json-summary to check that org coverage is > 75% (or value defined in .sfdx-hardis.yml property apexTestsMinCoverageOrgWide ) You can also have deployment results as pull request comments, on: Gitlab (see Gitlab integration configuration ) Azure DevOps (see Azure integration configuration ) See documentation of Salesforce command","title":"Description"},{"location":"hardis/source/deploy/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command checkcoverage boolean Check Apex org coverage checkonly -c boolean checkonly coverageformatters option coverageformatters debug boolean debug forceoverwrite -f boolean forceoverwrite ignoreerrors -o boolean ignoreErrors ignorewarnings -g boolean ignoreWarnings json boolean format output as json junit boolean junit loglevel option logging level for this command invocation warn trace debug info warn error fatal manifest -x option flagsLong.manifest metadata -m option metadata postdestructivechanges option postdestructivechanges predestructivechanges option predestructivechanges resultsdir option resultsdir runtests -r option runTests soapdeploy boolean soapDeploy sourcepath -p option sourcePath targetusername -u option username or alias for the target org; overrides default target org testlevel -l option testlevel NoTestRun NoTestRun RunSpecifiedTests RunLocalTests RunAllTestsInOrg tracksource -t boolean tracksource validateddeployrequestid -q option validateDeployRequestId verbose boolean verbose wait -w option wait [object Object] websocket option websocket","title":"Parameters"},{"location":"hardis/source/deploy/#examples","text":"$ sfdx hardis:source:deploy -x manifest/package.xml --wait 60 --ignorewarnings --testlevel RunLocalTests --postdestructivechanges ./manifest/destructiveChanges.xml --targetusername nicolas.vuillamy@cloudity.com.sfdxhardis --checkonly --checkcoverage --verbose --coverageformatters json-summary","title":"Examples"},{"location":"hardis/source/push/","text":"hardis:source:push Description sfdx-hardis wrapper for sfdx force:source:push that displays tips to solve deployment errors. See documentation of Salesforce command Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug boolean debug forceoverwrite -f boolean forceoverwrite ignorewarnings -g boolean ignorewarnings json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal quiet boolean quiet targetusername -u option username or alias for the target org; overrides default target org wait -w option wait [object Object] websocket option websocket Examples","title":"push"},{"location":"hardis/source/push/#hardissourcepush","text":"","title":"hardis:source:push"},{"location":"hardis/source/push/#description","text":"sfdx-hardis wrapper for sfdx force:source:push that displays tips to solve deployment errors. See documentation of Salesforce command","title":"Description"},{"location":"hardis/source/push/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug boolean debug forceoverwrite -f boolean forceoverwrite ignorewarnings -g boolean ignorewarnings json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal quiet boolean quiet targetusername -u option username or alias for the target org; overrides default target org wait -w option wait [object Object] websocket option websocket","title":"Parameters"},{"location":"hardis/source/push/#examples","text":"","title":"Examples"},{"location":"hardis/source/retrieve/","text":"hardis:source:retrieve Description sfdx-hardis wrapper for sfdx force:source:retrieve If no retrieve constraint is sent, as assisted menu will request the list of metadatas to retrieve If no org is selected , an assisted menu will request the user to choose one See documentation of Salesforce command Parameters Name Type Description Default Required Options apiversion -a option override the api version used for api requests made by this command debug -d boolean debugMode forceoverwrite -f boolean forceoverwrite json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal manifest -x option manifest metadata -m option metadata packagenames -n option packagenames skipauth boolean Skip authentication check when a default username is required sourcepath -p option sourcePath targetusername -u option username or alias for the target org; overrides default target org tracksource -t boolean tracksource verbose boolean verbose wait -w option wait websocket option websocket Examples","title":"retrieve"},{"location":"hardis/source/retrieve/#hardissourceretrieve","text":"","title":"hardis:source:retrieve"},{"location":"hardis/source/retrieve/#description","text":"sfdx-hardis wrapper for sfdx force:source:retrieve If no retrieve constraint is sent, as assisted menu will request the list of metadatas to retrieve If no org is selected , an assisted menu will request the user to choose one See documentation of Salesforce command","title":"Description"},{"location":"hardis/source/retrieve/#parameters","text":"Name Type Description Default Required Options apiversion -a option override the api version used for api requests made by this command debug -d boolean debugMode forceoverwrite -f boolean forceoverwrite json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal manifest -x option manifest metadata -m option metadata packagenames -n option packagenames skipauth boolean Skip authentication check when a default username is required sourcepath -p option sourcePath targetusername -u option username or alias for the target org; overrides default target org tracksource -t boolean tracksource verbose boolean verbose wait -w option wait websocket option websocket","title":"Parameters"},{"location":"hardis/source/retrieve/#examples","text":"","title":"Examples"},{"location":"hardis/work/new/","text":"hardis:work:new Description Assisted menu to start working on a Salesforce task. At the end of the command, it will allow you to work on either a scratch org or a sandbox, depending on your choices. Under the hood, it can: Make git pull to be up to date with target branch Create new git branch with formatted name (you can override the choices using .sfdx-hardis.yml property branchPrefixChoices ) Create and initialize a scratch org or a source-tracked sandbox (config can be defined using config/.sfdx-hardis.yml ): (and for scratch org only for now): Install packages - Use property installedPackages Push sources Assign permission sets Use property initPermissionSets Run apex initialization scripts Use property scratchOrgInitApexScripts Load data Use property dataPackages Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:work:task:new","title":"new"},{"location":"hardis/work/new/#hardisworknew","text":"","title":"hardis:work:new"},{"location":"hardis/work/new/#description","text":"Assisted menu to start working on a Salesforce task. At the end of the command, it will allow you to work on either a scratch org or a sandbox, depending on your choices. Under the hood, it can: Make git pull to be up to date with target branch Create new git branch with formatted name (you can override the choices using .sfdx-hardis.yml property branchPrefixChoices ) Create and initialize a scratch org or a source-tracked sandbox (config can be defined using config/.sfdx-hardis.yml ): (and for scratch org only for now): Install packages - Use property installedPackages Push sources Assign permission sets Use property initPermissionSets Run apex initialization scripts Use property scratchOrgInitApexScripts Load data Use property dataPackages","title":"Description"},{"location":"hardis/work/new/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetdevhubusername -v option username or alias for the dev hub org; overrides default dev hub org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/work/new/#examples","text":"$ sfdx hardis:work:task:new","title":"Examples"},{"location":"hardis/work/refresh/","text":"hardis:work:refresh Description Make my local branch and my scratch org up to date with the most recent sources Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal nopull -n boolean No scratch pull before save (careful if you use that!) skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:work:refresh","title":"refresh"},{"location":"hardis/work/refresh/#hardisworkrefresh","text":"","title":"hardis:work:refresh"},{"location":"hardis/work/refresh/#description","text":"Make my local branch and my scratch org up to date with the most recent sources","title":"Description"},{"location":"hardis/work/refresh/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal nopull -n boolean No scratch pull before save (careful if you use that!) skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/work/refresh/#examples","text":"$ sfdx hardis:work:refresh","title":"Examples"},{"location":"hardis/work/resetselection/","text":"hardis:work:resetselection Description Resets the selection that we want to add in the merge request Calls a soft git reset behind the hood Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:work:resetsave","title":"resetselection"},{"location":"hardis/work/resetselection/#hardisworkresetselection","text":"","title":"hardis:work:resetselection"},{"location":"hardis/work/resetselection/#description","text":"Resets the selection that we want to add in the merge request Calls a soft git reset behind the hood","title":"Description"},{"location":"hardis/work/resetselection/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/work/resetselection/#examples","text":"$ sfdx hardis:work:resetsave","title":"Examples"},{"location":"hardis/work/save/","text":"hardis:work:save Description When a work task is completed, guide user to create a merge request Generate package-xml diff using sfdx-git-delta Automatically update manifest/package.xml and manifest/destructiveChanges.xml according to the committed updates Automatically Clean XML files using .sfdx-hardis.yml properties autocleantypes : List of auto-performed sources cleanings, available on command hardis:project:clean:references autoRemoveUserPermissions : List of userPermission to automatically remove from profile metadatas Example: autoCleanTypes: - destructivechanges - datadotcom - minimizeProfiles - listViewsMine autoRemoveUserPermissions: - EnableCommunityAppLauncher - FieldServiceAccess - OmnichannelInventorySync - SendExternalEmailAvailable - UseOmnichannelInventoryAPIs - ViewDataLeakageEvents - ViewMLModels - ViewPlatformEvents - WorkCalibrationUser Push commit to server Parameters Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command auto boolean No user prompts (when called from CI for example) debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal noclean -c boolean No cleaning of local sources nogit -g boolean No automated git operations nopull -n boolean No scratch pull before save skipauth boolean Skip authentication check when a default username is required targetbranch option Name of the Merge Request target branch. Will be guessed or prompted if not provided. targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:work:task:save $ sfdx hardis:work:task:save --nopull --nogit --noclean","title":"save"},{"location":"hardis/work/save/#hardisworksave","text":"","title":"hardis:work:save"},{"location":"hardis/work/save/#description","text":"When a work task is completed, guide user to create a merge request Generate package-xml diff using sfdx-git-delta Automatically update manifest/package.xml and manifest/destructiveChanges.xml according to the committed updates Automatically Clean XML files using .sfdx-hardis.yml properties autocleantypes : List of auto-performed sources cleanings, available on command hardis:project:clean:references autoRemoveUserPermissions : List of userPermission to automatically remove from profile metadatas Example: autoCleanTypes: - destructivechanges - datadotcom - minimizeProfiles - listViewsMine autoRemoveUserPermissions: - EnableCommunityAppLauncher - FieldServiceAccess - OmnichannelInventorySync - SendExternalEmailAvailable - UseOmnichannelInventoryAPIs - ViewDataLeakageEvents - ViewMLModels - ViewPlatformEvents - WorkCalibrationUser Push commit to server","title":"Description"},{"location":"hardis/work/save/#parameters","text":"Name Type Description Default Required Options apiversion option override the api version used for api requests made by this command auto boolean No user prompts (when called from CI for example) debug -d boolean Activate debug mode (more logs) json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal noclean -c boolean No cleaning of local sources nogit -g boolean No automated git operations nopull -n boolean No scratch pull before save skipauth boolean Skip authentication check when a default username is required targetbranch option Name of the Merge Request target branch. Will be guessed or prompted if not provided. targetusername -u option username or alias for the target org; overrides default target org websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/work/save/#examples","text":"$ sfdx hardis:work:task:save $ sfdx hardis:work:task:save --nopull --nogit --noclean","title":"Examples"},{"location":"hardis/work/ws/","text":"hardis:work:ws Description Technical calls to WebSocket functions Parameters Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) event -e option WebSocket event json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration Examples $ sfdx hardis:work:ws --event refreshStatus","title":"ws"},{"location":"hardis/work/ws/#hardisworkws","text":"","title":"hardis:work:ws"},{"location":"hardis/work/ws/#description","text":"Technical calls to WebSocket functions","title":"Description"},{"location":"hardis/work/ws/#parameters","text":"Name Type Description Default Required Options debug -d boolean Activate debug mode (more logs) event -e option WebSocket event json boolean format output as json loglevel option logging level for this command invocation warn trace debug info warn error fatal skipauth boolean Skip authentication check when a default username is required websocket option Websocket host:port for VsCode SFDX Hardis UI integration","title":"Parameters"},{"location":"hardis/work/ws/#examples","text":"$ sfdx hardis:work:ws --event refreshStatus","title":"Examples"}]}